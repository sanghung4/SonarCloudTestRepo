# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

package = load_json(json_path: './package.json')

private_lane :inc_version_android do
  increment_version_code(
    gradle_file_path: './android/app/build.gradle'
  )

  increment_version_name(
    gradle_file_path: './android/app/build.gradle',
    version_name: package['version']
  )
end

private_lane :inc_version_ios do
  increment_build_number(
    xcodeproj: './ios/branchinventory.xcodeproj'
  )

  increment_version_number(
    xcodeproj: './ios/branchinventory.xcodeproj',
    version_number: package['version']
  )
end

lane :bump do
  inc_version_android
  inc_version_ios
end

platform :android do
  lane :release do
    gradle(
      project_dir: './android/',
      print_command: false,
      tasks: %w[clean assembleRelease]
    )
  end

  lane :beta do
    add_badge(dark: true, glob: '/android/app/src/main/res/**/*.png')

    gradle(
      project_dir: './android/',
      print_command: false,
      task: 'clean'
    )

    yarn(command: 'android:bundle:beta')

    gradle(
      project_dir: './android/',
      print_command: false,
      task: 'assemble',
      build_type: 'beta'
    )
  end
end

platform :ios do
  lane :beta do
    cocoapods(
      podfile: './ios/Podfile'
    )

    disable_automatic_code_signing(
      path: './ios/branchinventory.xcodeproj'
    )

    if is_ci?
      create_keychain(
        name: ENV['CI_KEYCHAIN_NAME'],
        password: ENV['CI_KEYCHAIN_PASSWORD'],
        default_keychain: true,
        unlock: true,
        timeout: 3600,
        lock_when_sleeps: false
      )
    end

    match(
      git_url: ENV['GIT_REPO_URL'],
      git_branch: 'reece-au',
      type: 'appstore',
      readonly: true,
      keychain_name: is_ci? ? ENV['CI_KEYCHAIN_NAME'] : nil,
      keychain_password: is_ci? ? ENV['CI_KEYCHAIN_PASSWORD'] : nil
    )

    add_badge(dark: true)

    gym(
      scheme: 'BranchInventory (TF Test)',
      workspace: './ios/branchinventory.xcworkspace',
      silent: true,
      clean: true,
      export_method: 'app-store',
      configuration: 'TF Test',
      output_directory: './ios/',
      output_name: 'BranchInventory-Beta.ipa'
    )

    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      apple_id: '6443590915',
      itc_provider: 'ReeceAustraliaLtd'
    )
  end

  lane :release do
    cocoapods(
      podfile: './ios/Podfile'
    )

    disable_automatic_code_signing(
      path: './ios/branchinventory.xcodeproj'
    )

    if is_ci?
      create_keychain(
        name: ENV['CI_KEYCHAIN_NAME'],
        password: ENV['CI_KEYCHAIN_PASSWORD'],
        default_keychain: true,
        unlock: true,
        timeout: 3600,
        lock_when_sleeps: false
      )
    end

    match(
      git_url: ENV['GIT_REPO_URL'],
      git_branch: 'reece-au',
      type: 'appstore',
      readonly: true,
      keychain_name: is_ci? ? ENV['CI_KEYCHAIN_NAME'] : nil,
      keychain_password: is_ci? ? ENV['CI_KEYCHAIN_PASSWORD'] : nil
    )

    gym(
      scheme: 'BranchInventory (release)',
      workspace: './ios/branchinventory.xcworkspace',
      silent: true,
      clean: true,
      export_method: 'app-store',
      configuration: 'Release',
      output_directory: './ios/',
      output_name: 'BranchInventory.ipa'
    )

    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      apple_id: '1551855140'
    )
  end

  lane :ent_beta do
    cocoapods(
      podfile: './ios/Podfile'
    )

    disable_automatic_code_signing(
      path: './ios/branchinventory.xcodeproj'
    )

    if is_ci?
      create_keychain(
        name: ENV['CI_KEYCHAIN_NAME'],
        password: ENV['CI_KEYCHAIN_PASSWORD'],
        default_keychain: true,
        unlock: true,
        timeout: 3600,
        lock_when_sleeps: false
      )

      import_certificate(
        certificate_path: './ios_distriution.cer',
        keychain_name: ENV['CI_KEYCHAIN_NAME'],
        keychain_password: ENV['CI_KEYCHAIN_PASSWORD']
      )

      import_certificate(
        certificate_path: './enterprise_private_key.p12',
        certificate_password: ENV['IOS_ENTERPRISE_PRIVATE_KEY_PASSWORD'],
        keychain_name: ENV['CI_KEYCHAIN_NAME'],
        keychain_password: ENV['CI_KEYCHAIN_PASSWORD']
      )

      install_provisioning_profile(
        path: './Reece_USA_Physical_Inventory_Test_Distribution.mobileprovision'
      )
    end

    add_badge(dark: true)

    gym(
      scheme: 'BranchInventory (enterprise-beta)',
      workspace: './ios/branchinventory.xcworkspace',
      silent: true,
      clean: true,
      export_method: 'enterprise',
      configuration: 'Enterprise-Beta',
      output_directory: './ios/',
      output_name: 'BranchInventoryEnterprise-Beta.ipa'
    )
  end

  lane :ent_release do
    cocoapods(
      podfile: './ios/Podfile'
    )

    disable_automatic_code_signing(
      path: './ios/branchinventory.xcodeproj'
    )

    if is_ci?
      create_keychain(
        name: ENV['CI_KEYCHAIN_NAME'],
        password: ENV['CI_KEYCHAIN_PASSWORD'],
        default_keychain: true,
        unlock: true,
        timeout: 3600,
        lock_when_sleeps: false
      )

      import_certificate(
        certificate_path: './ios_distriution.cer',
        keychain_name: ENV['CI_KEYCHAIN_NAME'],
        keychain_password: ENV['CI_KEYCHAIN_PASSWORD']
      )

      import_certificate(
        certificate_path: './enterprise_private_key.p12',
        certificate_password: ENV['IOS_ENTERPRISE_PRIVATE_KEY_PASSWORD'],
        keychain_name: ENV['CI_KEYCHAIN_NAME'],
        keychain_password: ENV['CI_KEYCHAIN_PASSWORD']
      )

      install_provisioning_profile(
        path: './US_Physical_Inventory_Distribution.mobileprovision'
      )
    end

    gym(
      scheme: 'BranchInventory (enterprise)',
      workspace: './ios/branchinventory.xcworkspace',
      silent: true,
      clean: true,
      export_method: 'enterprise',
      configuration: 'Enterprise',
      output_directory: './ios/',
      output_name: 'BranchInventoryEnterprise.ipa'
    )
  end
end
