mutation purgeMincronCounts ($input: CountsInput!) {
  purgeMincronCounts (input: $input)
}

mutation addUser($userEmail: String!, $branchId: String!) {
  addUser(userEmail: $userEmail, branchId: $branchId) {
    success
    error {
      code
      message
        details
    }
  }
}

mutation removeUserBranch($userEmail: String!, $branchId: String!) {
  removeUserBranch(userEmail: $userEmail, branchId: $branchId) {
    success
    error {
      code
      message
      details
    }
  }
}

mutation updateUserEmail($oldUserEmail: String!, $newUserEmail: String!) {
  updateUserEmail(oldUserEmail: $oldUserEmail, newUserEmail: $newUserEmail) {
    success
    error {
      code
      message
      details
    }
  }
}

mutation deleteUser($userEmail: String!) {
  deleteUser(userEmail: $userEmail) {
    success
    error {
      code
      message
      details
    }
  }
}

mutation SetSpecialPrices($input: PriceChangeInput!) {
  specialPrices(input: $input) {
    successfulUploads {
      uploadedPath
      uploadedName
    }
  }
}

mutation LoadCount($branchId: String!, $countId: String!) {
  loadCount(branchId: $branchId, countId: $countId) {
    id
    branchId
    countId
    branchName
    status
    errorMessage
    createdAt
    totalProducts
  }
}

mutation removeBranchCounts($input: RemoveBranchCountsInput!){
  removeBranchCounts(input: $input){
    deletedCounts
    {
      countLocations
      countLocationItems
      varianceCountLocationItemQuantities
      countLocationItemQuantities
      writeIns
    }
  }
}