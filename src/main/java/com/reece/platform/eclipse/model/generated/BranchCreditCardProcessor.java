/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse BranchCreditCardProcessor.
 */
@Schema(description = "Object representing an Eclipse BranchCreditCardProcessor.")

public class BranchCreditCardProcessor {
  @JsonProperty("processorId")
  private String processorId = null;

  @JsonProperty("merchantId")
  private String merchantId = null;

  @JsonProperty("deviceId")
  private String deviceId = null;

  @JsonProperty("terminalId")
  private String terminalId = null;

  @JsonProperty("accountId")
  private String accountId = null;

  @JsonProperty("accountToken")
  private String accountToken = null;

  @JsonProperty("elementTerminalId")
  private String elementTerminalId = null;

  @JsonProperty("acceptorId")
  private String acceptorId = null;

  @JsonProperty("pinDebitEnabled")
  private Boolean pinDebitEnabled = null;

  @JsonProperty("encryptedKeyEntryRequired")
  private Boolean encryptedKeyEntryRequired = null;

  public BranchCreditCardProcessor processorId(String processorId) {
    this.processorId = processorId;
    return this;
  }

   /**
   * Desc: The BranchCreditCardProcessor ProcessorId  File: TERRITORY  Attr: 6,x
   * @return processorId
  **/
  @Schema(description = "Desc: The BranchCreditCardProcessor ProcessorId  File: TERRITORY  Attr: 6,x")
  public String getProcessorId() {
    return processorId;
  }

  public void setProcessorId(String processorId) {
    this.processorId = processorId;
  }

  public BranchCreditCardProcessor merchantId(String merchantId) {
    this.merchantId = merchantId;
    return this;
  }

   /**
   * Desc: The BranchCreditCardProcessor MerchantId  File: TERRITORY  Attr: 7,x
   * @return merchantId
  **/
  @Schema(description = "Desc: The BranchCreditCardProcessor MerchantId  File: TERRITORY  Attr: 7,x")
  public String getMerchantId() {
    return merchantId;
  }

  public void setMerchantId(String merchantId) {
    this.merchantId = merchantId;
  }

  public BranchCreditCardProcessor deviceId(String deviceId) {
    this.deviceId = deviceId;
    return this;
  }

   /**
   * Desc: The BranchCreditCardProcessor DeviceId  File: TERRITORY  Attr: 8,x
   * @return deviceId
  **/
  @Schema(description = "Desc: The BranchCreditCardProcessor DeviceId  File: TERRITORY  Attr: 8,x")
  public String getDeviceId() {
    return deviceId;
  }

  public void setDeviceId(String deviceId) {
    this.deviceId = deviceId;
  }

  public BranchCreditCardProcessor terminalId(String terminalId) {
    this.terminalId = terminalId;
    return this;
  }

   /**
   * Desc: The BranchCreditCardProcessor TerminalId  File: TERRITORY  Attr: 9,x
   * @return terminalId
  **/
  @Schema(description = "Desc: The BranchCreditCardProcessor TerminalId  File: TERRITORY  Attr: 9,x")
  public String getTerminalId() {
    return terminalId;
  }

  public void setTerminalId(String terminalId) {
    this.terminalId = terminalId;
  }

  public BranchCreditCardProcessor accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Desc: The AccountId  File: TERRITORY  Attr: 10, x, 1  ELEMENT Only
   * @return accountId
  **/
  @Schema(description = "Desc: The AccountId  File: TERRITORY  Attr: 10, x, 1  ELEMENT Only")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public BranchCreditCardProcessor accountToken(String accountToken) {
    this.accountToken = accountToken;
    return this;
  }

   /**
   * Desc: The AccountTaken  File: TERRITORY  Attr: 10, x, 2  ELEMENT Only
   * @return accountToken
  **/
  @Schema(description = "Desc: The AccountTaken  File: TERRITORY  Attr: 10, x, 2  ELEMENT Only")
  public String getAccountToken() {
    return accountToken;
  }

  public void setAccountToken(String accountToken) {
    this.accountToken = accountToken;
  }

  public BranchCreditCardProcessor elementTerminalId(String elementTerminalId) {
    this.elementTerminalId = elementTerminalId;
    return this;
  }

   /**
   * Desc: The terminalId  File: TERRITORY  Attr: 10, x, 3  ELEMENT Only
   * @return elementTerminalId
  **/
  @Schema(description = "Desc: The terminalId  File: TERRITORY  Attr: 10, x, 3  ELEMENT Only")
  public String getElementTerminalId() {
    return elementTerminalId;
  }

  public void setElementTerminalId(String elementTerminalId) {
    this.elementTerminalId = elementTerminalId;
  }

  public BranchCreditCardProcessor acceptorId(String acceptorId) {
    this.acceptorId = acceptorId;
    return this;
  }

   /**
   * Desc: The AcceptorId  File: TERRITORY  Attr: 10, x, 4  ELEMENT Only
   * @return acceptorId
  **/
  @Schema(description = "Desc: The AcceptorId  File: TERRITORY  Attr: 10, x, 4  ELEMENT Only")
  public String getAcceptorId() {
    return acceptorId;
  }

  public void setAcceptorId(String acceptorId) {
    this.acceptorId = acceptorId;
  }

  public BranchCreditCardProcessor pinDebitEnabled(Boolean pinDebitEnabled) {
    this.pinDebitEnabled = pinDebitEnabled;
    return this;
  }

   /**
   * Desc: The ScPINDebitEnabledhedule  File: TERRITORY  Attr: 10, x, 5  ELEMENT Only
   * @return pinDebitEnabled
  **/
  @Schema(description = "Desc: The ScPINDebitEnabledhedule  File: TERRITORY  Attr: 10, x, 5  ELEMENT Only")
  public Boolean isPinDebitEnabled() {
    return pinDebitEnabled;
  }

  public void setPinDebitEnabled(Boolean pinDebitEnabled) {
    this.pinDebitEnabled = pinDebitEnabled;
  }

  public BranchCreditCardProcessor encryptedKeyEntryRequired(Boolean encryptedKeyEntryRequired) {
    this.encryptedKeyEntryRequired = encryptedKeyEntryRequired;
    return this;
  }

   /**
   * Desc: The EncryptedKeyEntryRequired  File: TERRITORY  Attr: 10, x, 6  ELEMENT Only
   * @return encryptedKeyEntryRequired
  **/
  @Schema(description = "Desc: The EncryptedKeyEntryRequired  File: TERRITORY  Attr: 10, x, 6  ELEMENT Only")
  public Boolean isEncryptedKeyEntryRequired() {
    return encryptedKeyEntryRequired;
  }

  public void setEncryptedKeyEntryRequired(Boolean encryptedKeyEntryRequired) {
    this.encryptedKeyEntryRequired = encryptedKeyEntryRequired;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BranchCreditCardProcessor branchCreditCardProcessor = (BranchCreditCardProcessor) o;
    return Objects.equals(this.processorId, branchCreditCardProcessor.processorId) &&
        Objects.equals(this.merchantId, branchCreditCardProcessor.merchantId) &&
        Objects.equals(this.deviceId, branchCreditCardProcessor.deviceId) &&
        Objects.equals(this.terminalId, branchCreditCardProcessor.terminalId) &&
        Objects.equals(this.accountId, branchCreditCardProcessor.accountId) &&
        Objects.equals(this.accountToken, branchCreditCardProcessor.accountToken) &&
        Objects.equals(this.elementTerminalId, branchCreditCardProcessor.elementTerminalId) &&
        Objects.equals(this.acceptorId, branchCreditCardProcessor.acceptorId) &&
        Objects.equals(this.pinDebitEnabled, branchCreditCardProcessor.pinDebitEnabled) &&
        Objects.equals(this.encryptedKeyEntryRequired, branchCreditCardProcessor.encryptedKeyEntryRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(processorId, merchantId, deviceId, terminalId, accountId, accountToken, elementTerminalId, acceptorId, pinDebitEnabled, encryptedKeyEntryRequired);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BranchCreditCardProcessor {\n");
    
    sb.append("    processorId: ").append(toIndentedString(processorId)).append("\n");
    sb.append("    merchantId: ").append(toIndentedString(merchantId)).append("\n");
    sb.append("    deviceId: ").append(toIndentedString(deviceId)).append("\n");
    sb.append("    terminalId: ").append(toIndentedString(terminalId)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    accountToken: ").append(toIndentedString(accountToken)).append("\n");
    sb.append("    elementTerminalId: ").append(toIndentedString(elementTerminalId)).append("\n");
    sb.append("    acceptorId: ").append(toIndentedString(acceptorId)).append("\n");
    sb.append("    pinDebitEnabled: ").append(toIndentedString(pinDebitEnabled)).append("\n");
    sb.append("    encryptedKeyEntryRequired: ").append(toIndentedString(encryptedKeyEntryRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
