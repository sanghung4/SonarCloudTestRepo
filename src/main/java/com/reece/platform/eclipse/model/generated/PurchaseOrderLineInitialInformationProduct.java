/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse PurchaseOrderLineInitialInformationProduct.
 */
@Schema(description = "Object representing an Eclipse PurchaseOrderLineInitialInformationProduct.")

public class PurchaseOrderLineInitialInformationProduct {
  @JsonProperty("productId")
  private Integer productId = null;

  @JsonProperty("primaryUPC")
  private String primaryUPC = null;

  @JsonProperty("secondaryUPC")
  private String secondaryUPC = null;

  @JsonProperty("catalogNumber")
  private String catalogNumber = null;

  @JsonProperty("vendorPartNumbers")
  private String vendorPartNumbers = null;

  @JsonProperty("keywords")
  private String keywords = null;

  @JsonProperty("productDescription")
  private String productDescription = null;

  @JsonProperty("ean")
  private String ean = null;

  @JsonProperty("quantity")
  private Integer quantity = null;

  @JsonProperty("um")
  private String um = null;

  @JsonProperty("umQuantity")
  private Integer umQuantity = null;

  @JsonProperty("unitCost")
  private Double unitCost = null;

  @JsonProperty("comments")
  private String comments = null;

  @JsonProperty("commentsId")
  private String commentsId = null;

  @JsonProperty("releaseNumber")
  private String releaseNumber = null;

  public PurchaseOrderLineInitialInformationProduct productId(Integer productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct ProdutId
   * @return productId
  **/
  @Schema(description = "Desc: The PurchaseOrderLineInitialInformationProduct ProdutId")
  public Integer getProductId() {
    return productId;
  }

  public void setProductId(Integer productId) {
    this.productId = productId;
  }

  public PurchaseOrderLineInitialInformationProduct primaryUPC(String primaryUPC) {
    this.primaryUPC = primaryUPC;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct PrimaryUPC
   * @return primaryUPC
  **/
  @Schema(description = "Desc: The PurchaseOrderLineInitialInformationProduct PrimaryUPC")
  public String getPrimaryUPC() {
    return primaryUPC;
  }

  public void setPrimaryUPC(String primaryUPC) {
    this.primaryUPC = primaryUPC;
  }

  public PurchaseOrderLineInitialInformationProduct secondaryUPC(String secondaryUPC) {
    this.secondaryUPC = secondaryUPC;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct SecondaryUPC
   * @return secondaryUPC
  **/
  @Schema(description = "Desc: The PurchaseOrderLineInitialInformationProduct SecondaryUPC")
  public String getSecondaryUPC() {
    return secondaryUPC;
  }

  public void setSecondaryUPC(String secondaryUPC) {
    this.secondaryUPC = secondaryUPC;
  }

  public PurchaseOrderLineInitialInformationProduct catalogNumber(String catalogNumber) {
    this.catalogNumber = catalogNumber;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct CatalogNumber
   * @return catalogNumber
  **/
  @Schema(description = "Desc: The PurchaseOrderLineInitialInformationProduct CatalogNumber")
  public String getCatalogNumber() {
    return catalogNumber;
  }

  public void setCatalogNumber(String catalogNumber) {
    this.catalogNumber = catalogNumber;
  }

  public PurchaseOrderLineInitialInformationProduct vendorPartNumbers(String vendorPartNumbers) {
    this.vendorPartNumbers = vendorPartNumbers;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct VendorPartNumbers
   * @return vendorPartNumbers
  **/
  @Schema(description = "Desc: The PurchaseOrderLineInitialInformationProduct VendorPartNumbers")
  public String getVendorPartNumbers() {
    return vendorPartNumbers;
  }

  public void setVendorPartNumbers(String vendorPartNumbers) {
    this.vendorPartNumbers = vendorPartNumbers;
  }

  public PurchaseOrderLineInitialInformationProduct keywords(String keywords) {
    this.keywords = keywords;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct Keywords
   * @return keywords
  **/
  @Schema(description = "Desc: The PurchaseOrderLineInitialInformationProduct Keywords")
  public String getKeywords() {
    return keywords;
  }

  public void setKeywords(String keywords) {
    this.keywords = keywords;
  }

  public PurchaseOrderLineInitialInformationProduct productDescription(String productDescription) {
    this.productDescription = productDescription;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct ProductDescription
   * @return productDescription
  **/
  @Schema(description = "Desc: The PurchaseOrderLineInitialInformationProduct ProductDescription")
  public String getProductDescription() {
    return productDescription;
  }

  public void setProductDescription(String productDescription) {
    this.productDescription = productDescription;
  }

  public PurchaseOrderLineInitialInformationProduct ean(String ean) {
    this.ean = ean;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct EAN
   * @return ean
  **/
  @Schema(description = "Desc: The PurchaseOrderLineInitialInformationProduct EAN")
  public String getEan() {
    return ean;
  }

  public void setEan(String ean) {
    this.ean = ean;
  }

  public PurchaseOrderLineInitialInformationProduct quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct Quantity
   * @return quantity
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The PurchaseOrderLineInitialInformationProduct Quantity")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public PurchaseOrderLineInitialInformationProduct um(String um) {
    this.um = um;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct UM
   * @return um
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The PurchaseOrderLineInitialInformationProduct UM")
  public String getUm() {
    return um;
  }

  public void setUm(String um) {
    this.um = um;
  }

  public PurchaseOrderLineInitialInformationProduct umQuantity(Integer umQuantity) {
    this.umQuantity = umQuantity;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct UMQuantity
   * @return umQuantity
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The PurchaseOrderLineInitialInformationProduct UMQuantity")
  public Integer getUmQuantity() {
    return umQuantity;
  }

  public void setUmQuantity(Integer umQuantity) {
    this.umQuantity = umQuantity;
  }

  public PurchaseOrderLineInitialInformationProduct unitCost(Double unitCost) {
    this.unitCost = unitCost;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct UnitCost
   * @return unitCost
  **/
  @Schema(description = "Desc: The PurchaseOrderLineInitialInformationProduct UnitCost")
  public Double getUnitCost() {
    return unitCost;
  }

  public void setUnitCost(Double unitCost) {
    this.unitCost = unitCost;
  }

  public PurchaseOrderLineInitialInformationProduct comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct Comments
   * @return comments
  **/
  @Schema(description = "Desc: The PurchaseOrderLineInitialInformationProduct Comments")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

  public PurchaseOrderLineInitialInformationProduct commentsId(String commentsId) {
    this.commentsId = commentsId;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct CommentsId
   * @return commentsId
  **/
  @Schema(description = "Desc: The PurchaseOrderLineInitialInformationProduct CommentsId")
  public String getCommentsId() {
    return commentsId;
  }

  public void setCommentsId(String commentsId) {
    this.commentsId = commentsId;
  }

  public PurchaseOrderLineInitialInformationProduct releaseNumber(String releaseNumber) {
    this.releaseNumber = releaseNumber;
    return this;
  }

   /**
   * Desc: The PurchaseOrderLineInitialInformationProduct ReleaseNumber
   * @return releaseNumber
  **/
  @Schema(description = "Desc: The PurchaseOrderLineInitialInformationProduct ReleaseNumber")
  public String getReleaseNumber() {
    return releaseNumber;
  }

  public void setReleaseNumber(String releaseNumber) {
    this.releaseNumber = releaseNumber;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PurchaseOrderLineInitialInformationProduct purchaseOrderLineInitialInformationProduct = (PurchaseOrderLineInitialInformationProduct) o;
    return Objects.equals(this.productId, purchaseOrderLineInitialInformationProduct.productId) &&
        Objects.equals(this.primaryUPC, purchaseOrderLineInitialInformationProduct.primaryUPC) &&
        Objects.equals(this.secondaryUPC, purchaseOrderLineInitialInformationProduct.secondaryUPC) &&
        Objects.equals(this.catalogNumber, purchaseOrderLineInitialInformationProduct.catalogNumber) &&
        Objects.equals(this.vendorPartNumbers, purchaseOrderLineInitialInformationProduct.vendorPartNumbers) &&
        Objects.equals(this.keywords, purchaseOrderLineInitialInformationProduct.keywords) &&
        Objects.equals(this.productDescription, purchaseOrderLineInitialInformationProduct.productDescription) &&
        Objects.equals(this.ean, purchaseOrderLineInitialInformationProduct.ean) &&
        Objects.equals(this.quantity, purchaseOrderLineInitialInformationProduct.quantity) &&
        Objects.equals(this.um, purchaseOrderLineInitialInformationProduct.um) &&
        Objects.equals(this.umQuantity, purchaseOrderLineInitialInformationProduct.umQuantity) &&
        Objects.equals(this.unitCost, purchaseOrderLineInitialInformationProduct.unitCost) &&
        Objects.equals(this.comments, purchaseOrderLineInitialInformationProduct.comments) &&
        Objects.equals(this.commentsId, purchaseOrderLineInitialInformationProduct.commentsId) &&
        Objects.equals(this.releaseNumber, purchaseOrderLineInitialInformationProduct.releaseNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productId, primaryUPC, secondaryUPC, catalogNumber, vendorPartNumbers, keywords, productDescription, ean, quantity, um, umQuantity, unitCost, comments, commentsId, releaseNumber);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PurchaseOrderLineInitialInformationProduct {\n");
    
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    primaryUPC: ").append(toIndentedString(primaryUPC)).append("\n");
    sb.append("    secondaryUPC: ").append(toIndentedString(secondaryUPC)).append("\n");
    sb.append("    catalogNumber: ").append(toIndentedString(catalogNumber)).append("\n");
    sb.append("    vendorPartNumbers: ").append(toIndentedString(vendorPartNumbers)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    productDescription: ").append(toIndentedString(productDescription)).append("\n");
    sb.append("    ean: ").append(toIndentedString(ean)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    um: ").append(toIndentedString(um)).append("\n");
    sb.append("    umQuantity: ").append(toIndentedString(umQuantity)).append("\n");
    sb.append("    unitCost: ").append(toIndentedString(unitCost)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    commentsId: ").append(toIndentedString(commentsId)).append("\n");
    sb.append("    releaseNumber: ").append(toIndentedString(releaseNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
