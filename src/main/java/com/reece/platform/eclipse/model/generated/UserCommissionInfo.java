/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse UserCommissionInfo.
 */
@Schema(description = "Object representing an Eclipse UserCommissionInfo.")

public class UserCommissionInfo {
  @JsonProperty("commissionId")
  private String commissionId = null;

  @JsonProperty("commissionDrawAmount")
  private Double commissionDrawAmount = null;

  @JsonProperty("commissionCalcNegative")
  private Boolean commissionCalcNegative = null;

  public UserCommissionInfo commissionId(String commissionId) {
    this.commissionId = commissionId;
    return this;
  }

   /**
   * Desc: Commission Payroll ID  File: INITIALS  Attr: 102,xx
   * @return commissionId
  **/
  @Schema(description = "Desc: Commission Payroll ID  File: INITIALS  Attr: 102,xx")
  public String getCommissionId() {
    return commissionId;
  }

  public void setCommissionId(String commissionId) {
    this.commissionId = commissionId;
  }

  public UserCommissionInfo commissionDrawAmount(Double commissionDrawAmount) {
    this.commissionDrawAmount = commissionDrawAmount;
    return this;
  }

   /**
   * Desc: Commission Next Draw Amount  File: INITIALS  Attr: 103,xx
   * @return commissionDrawAmount
  **/
  @Schema(description = "Desc: Commission Next Draw Amount  File: INITIALS  Attr: 103,xx")
  public Double getCommissionDrawAmount() {
    return commissionDrawAmount;
  }

  public void setCommissionDrawAmount(Double commissionDrawAmount) {
    this.commissionDrawAmount = commissionDrawAmount;
  }

  public UserCommissionInfo commissionCalcNegative(Boolean commissionCalcNegative) {
    this.commissionCalcNegative = commissionCalcNegative;
    return this;
  }

   /**
   * Desc: Commission Calculate Negatives  File: INITIALS  Attr: 104,x
   * @return commissionCalcNegative
  **/
  @Schema(description = "Desc: Commission Calculate Negatives  File: INITIALS  Attr: 104,x")
  public Boolean isCommissionCalcNegative() {
    return commissionCalcNegative;
  }

  public void setCommissionCalcNegative(Boolean commissionCalcNegative) {
    this.commissionCalcNegative = commissionCalcNegative;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserCommissionInfo userCommissionInfo = (UserCommissionInfo) o;
    return Objects.equals(this.commissionId, userCommissionInfo.commissionId) &&
        Objects.equals(this.commissionDrawAmount, userCommissionInfo.commissionDrawAmount) &&
        Objects.equals(this.commissionCalcNegative, userCommissionInfo.commissionCalcNegative);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commissionId, commissionDrawAmount, commissionCalcNegative);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserCommissionInfo {\n");
    
    sb.append("    commissionId: ").append(toIndentedString(commissionId)).append("\n");
    sb.append("    commissionDrawAmount: ").append(toIndentedString(commissionDrawAmount)).append("\n");
    sb.append("    commissionCalcNegative: ").append(toIndentedString(commissionCalcNegative)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
