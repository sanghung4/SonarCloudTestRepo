/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.PickTaskState;
import com.reece.platform.eclipse.model.generated.ZoneList;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse WarehousePutAwayTote.
 */
@Schema(description = "Object representing an Eclipse WarehousePutAwayTote.")

public class WarehousePutAwayTote {
  @JsonProperty("branchId")
  private String branchId = null;

  @JsonProperty("userId")
  private String userId = null;

  @JsonProperty("tote")
  private String tote = null;

  @JsonProperty("itemCount")
  private Integer itemCount = null;

  @JsonProperty("zoneList")
  private List<ZoneList> zoneList = null;

  @JsonProperty("status")
  private PickTaskState status = null;

  public WarehousePutAwayTote branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Branch Id
   * @return branchId
  **/
  @NotNull
  @Schema(required = true, description = "Branch Id")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public WarehousePutAwayTote userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * User Id
   * @return userId
  **/
  @NotNull
  @Schema(required = true, description = "User Id")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public WarehousePutAwayTote tote(String tote) {
    this.tote = tote;
    return this;
  }

   /**
   * Tote
   * @return tote
  **/
  @NotNull
  @Schema(required = true, description = "Tote")
  public String getTote() {
    return tote;
  }

  public void setTote(String tote) {
    this.tote = tote;
  }

  public WarehousePutAwayTote itemCount(Integer itemCount) {
    this.itemCount = itemCount;
    return this;
  }

   /**
   * Tote Item Count
   * @return itemCount
  **/
  @Schema(description = "Tote Item Count")
  public Integer getItemCount() {
    return itemCount;
  }

  public void setItemCount(Integer itemCount) {
    this.itemCount = itemCount;
  }

  public WarehousePutAwayTote zoneList(List<ZoneList> zoneList) {
    this.zoneList = zoneList;
    return this;
  }

  public WarehousePutAwayTote addZoneListItem(ZoneList zoneListItem) {
    if (this.zoneList == null) {
      this.zoneList = new ArrayList<>();
    }
    this.zoneList.add(zoneListItem);
    return this;
  }

   /**
   * Zone
   * @return zoneList
  **/
  @Valid
  @Schema(description = "Zone")
  public List<ZoneList> getZoneList() {
    return zoneList;
  }

  public void setZoneList(List<ZoneList> zoneList) {
    this.zoneList = zoneList;
  }

  public WarehousePutAwayTote status(PickTaskState status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @NotNull
  @Valid
  @Schema(required = true, description = "")
  public PickTaskState getStatus() {
    return status;
  }

  public void setStatus(PickTaskState status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WarehousePutAwayTote warehousePutAwayTote = (WarehousePutAwayTote) o;
    return Objects.equals(this.branchId, warehousePutAwayTote.branchId) &&
        Objects.equals(this.userId, warehousePutAwayTote.userId) &&
        Objects.equals(this.tote, warehousePutAwayTote.tote) &&
        Objects.equals(this.itemCount, warehousePutAwayTote.itemCount) &&
        Objects.equals(this.zoneList, warehousePutAwayTote.zoneList) &&
        Objects.equals(this.status, warehousePutAwayTote.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branchId, userId, tote, itemCount, zoneList, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WarehousePutAwayTote {\n");
    
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    tote: ").append(toIndentedString(tote)).append("\n");
    sb.append("    itemCount: ").append(toIndentedString(itemCount)).append("\n");
    sb.append("    zoneList: ").append(toIndentedString(zoneList)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
