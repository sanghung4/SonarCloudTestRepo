/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.MenuHeight;
import com.reece.platform.eclipse.model.generated.WorkstationPOSSettings;
import com.reece.platform.eclipse.model.generated.WorkstationPackageSettings;
import com.reece.platform.eclipse.model.generated.WorkstationType;
import com.reece.platform.eclipse.model.generated.YesNoLock;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * object model for Terminal (TTY)  Eclipse File : TTY.DEFINE
 */
@Schema(description = "object model for Terminal (TTY)  Eclipse File : TTY.DEFINE")

public class Workstation {
  @JsonProperty("updateKey")
  private String updateKey = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("priceBranchId")
  private String priceBranchId = null;

  @JsonProperty("printerLocation")
  private String printerLocation = null;

  @JsonProperty("relog")
  private YesNoLock relog = null;

  @JsonProperty("salesSource")
  private String salesSource = null;

  @JsonProperty("slavePrinter")
  private String slavePrinter = null;

  @JsonProperty("printToPDF")
  private Boolean printToPDF = null;

  @JsonProperty("type")
  private WorkstationType type = null;

  @JsonProperty("shipViaId")
  private String shipViaId = null;

  @JsonProperty("form")
  private String form = null;

  @JsonProperty("shipBranchId")
  private String shipBranchId = null;

  @JsonProperty("localStorageBranchIds")
  private List<String> localStorageBranchIds = null;

  @JsonProperty("solarReporterEnabledFlag")
  private Boolean solarReporterEnabledFlag = null;

  @JsonProperty("signatureCaptureURL")
  private String signatureCaptureURL = null;

  @JsonProperty("connectTriposOnCardSelect")
  private Boolean connectTriposOnCardSelect = null;

  @JsonProperty("connectTriposOnSignatureCapture")
  private Boolean connectTriposOnSignatureCapture = null;

  @JsonProperty("physicalBranchIds")
  private List<String> physicalBranchIds = null;

  @JsonProperty("solarMenuHeight")
  private MenuHeight solarMenuHeight = null;

  @JsonProperty("showPricingInCOE")
  private Boolean showPricingInCOE = null;

  @JsonProperty("hideAvailabiltyInCOE")
  private Boolean hideAvailabiltyInCOE = null;

  @JsonProperty("useCOEForSignatureCapture")
  private Boolean useCOEForSignatureCapture = null;

  @JsonProperty("coeAutoShareInOrderEntry")
  private Boolean coeAutoShareInOrderEntry = null;

  @JsonProperty("cartonPackageSettings")
  private WorkstationPackageSettings cartonPackageSettings = null;

  @JsonProperty("pointOfSaleSettings")
  private WorkstationPOSSettings pointOfSaleSettings = null;

  public Workstation updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update key to handle concurrency during updates within Eclipse
   * @return updateKey
  **/
  @Schema(description = "Update key to handle concurrency during updates within Eclipse")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }

  public Workstation id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Eclipse ID for the record
   * @return id
  **/
  @Schema(description = "Eclipse ID for the record")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Workstation priceBranchId(String priceBranchId) {
    this.priceBranchId = priceBranchId;
    return this;
  }

   /**
   * Price Branch  FILE : TTY.DEFINE  Attr : 1
   * @return priceBranchId
  **/
  @Schema(description = "Price Branch  FILE : TTY.DEFINE  Attr : 1")
  public String getPriceBranchId() {
    return priceBranchId;
  }

  public void setPriceBranchId(String priceBranchId) {
    this.priceBranchId = priceBranchId;
  }

  public Workstation printerLocation(String printerLocation) {
    this.printerLocation = printerLocation;
    return this;
  }

   /**
   * Printer Location  File : TTY.DEFINE  Attr : 2
   * @return printerLocation
  **/
  @Schema(description = "Printer Location  File : TTY.DEFINE  Attr : 2")
  public String getPrinterLocation() {
    return printerLocation;
  }

  public void setPrinterLocation(String printerLocation) {
    this.printerLocation = printerLocation;
  }

  public Workstation relog(YesNoLock relog) {
    this.relog = relog;
    return this;
  }

   /**
   * Get relog
   * @return relog
  **/
  @Valid
  @Schema(description = "")
  public YesNoLock getRelog() {
    return relog;
  }

  public void setRelog(YesNoLock relog) {
    this.relog = relog;
  }

  public Workstation salesSource(String salesSource) {
    this.salesSource = salesSource;
    return this;
  }

   /**
   * Inside Sales Source  File : TTY.DEFINE  Attr : 4
   * @return salesSource
  **/
  @Schema(description = "Inside Sales Source  File : TTY.DEFINE  Attr : 4")
  public String getSalesSource() {
    return salesSource;
  }

  public void setSalesSource(String salesSource) {
    this.salesSource = salesSource;
  }

  public Workstation slavePrinter(String slavePrinter) {
    this.slavePrinter = slavePrinter;
    return this;
  }

   /**
   * Slave Printer   File : TTY.DEFINE  Attr : 5
   * @return slavePrinter
  **/
  @Schema(description = "Slave Printer   File : TTY.DEFINE  Attr : 5")
  public String getSlavePrinter() {
    return slavePrinter;
  }

  public void setSlavePrinter(String slavePrinter) {
    this.slavePrinter = slavePrinter;
  }

  public Workstation printToPDF(Boolean printToPDF) {
    this.printToPDF = printToPDF;
    return this;
  }

   /**
   * Print to PDF  File : TTY.DEFINE  Attr : 5  if EclipseForms is enabled, this field would have value
   * @return printToPDF
  **/
  @Schema(description = "Print to PDF  File : TTY.DEFINE  Attr : 5  if EclipseForms is enabled, this field would have value")
  public Boolean isPrintToPDF() {
    return printToPDF;
  }

  public void setPrintToPDF(Boolean printToPDF) {
    this.printToPDF = printToPDF;
  }

  public Workstation type(WorkstationType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Valid
  @Schema(description = "")
  public WorkstationType getType() {
    return type;
  }

  public void setType(WorkstationType type) {
    this.type = type;
  }

  public Workstation shipViaId(String shipViaId) {
    this.shipViaId = shipViaId;
    return this;
  }

   /**
   * Ship Via  File : TTY.DEFINE  Attr : 7
   * @return shipViaId
  **/
  @Schema(description = "Ship Via  File : TTY.DEFINE  Attr : 7")
  public String getShipViaId() {
    return shipViaId;
  }

  public void setShipViaId(String shipViaId) {
    this.shipViaId = shipViaId;
  }

  public Workstation form(String form) {
    this.form = form;
    return this;
  }

   /**
   * Forms Loaded   File : TTY.DEFINE  Attr : 8
   * @return form
  **/
  @Schema(description = "Forms Loaded   File : TTY.DEFINE  Attr : 8")
  public String getForm() {
    return form;
  }

  public void setForm(String form) {
    this.form = form;
  }

  public Workstation shipBranchId(String shipBranchId) {
    this.shipBranchId = shipBranchId;
    return this;
  }

   /**
   * Shipping Branch  File : TTY.DEFINE  Attr : 9
   * @return shipBranchId
  **/
  @Schema(description = "Shipping Branch  File : TTY.DEFINE  Attr : 9")
  public String getShipBranchId() {
    return shipBranchId;
  }

  public void setShipBranchId(String shipBranchId) {
    this.shipBranchId = shipBranchId;
  }

  public Workstation localStorageBranchIds(List<String> localStorageBranchIds) {
    this.localStorageBranchIds = localStorageBranchIds;
    return this;
  }

  public Workstation addLocalStorageBranchIdsItem(String localStorageBranchIdsItem) {
    if (this.localStorageBranchIds == null) {
      this.localStorageBranchIds = new ArrayList<>();
    }
    this.localStorageBranchIds.add(localStorageBranchIdsItem);
    return this;
  }

   /**
   * Local Storage Branch  File : TTY.DEFINE  Attr : 10
   * @return localStorageBranchIds
  **/
  @Schema(description = "Local Storage Branch  File : TTY.DEFINE  Attr : 10")
  public List<String> getLocalStorageBranchIds() {
    return localStorageBranchIds;
  }

  public void setLocalStorageBranchIds(List<String> localStorageBranchIds) {
    this.localStorageBranchIds = localStorageBranchIds;
  }

  public Workstation solarReporterEnabledFlag(Boolean solarReporterEnabledFlag) {
    this.solarReporterEnabledFlag = solarReporterEnabledFlag;
    return this;
  }

   /**
   * Desc: The Terminal SolarReporterEnabledFlag  File: TTY.DEFINE  Attr: 11
   * @return solarReporterEnabledFlag
  **/
  @Schema(description = "Desc: The Terminal SolarReporterEnabledFlag  File: TTY.DEFINE  Attr: 11")
  public Boolean isSolarReporterEnabledFlag() {
    return solarReporterEnabledFlag;
  }

  public void setSolarReporterEnabledFlag(Boolean solarReporterEnabledFlag) {
    this.solarReporterEnabledFlag = solarReporterEnabledFlag;
  }

  public Workstation signatureCaptureURL(String signatureCaptureURL) {
    this.signatureCaptureURL = signatureCaptureURL;
    return this;
  }

   /**
   * Close counter order Signature capture URL  File : TTY.DEFINE  Attr : 12,10
   * @return signatureCaptureURL
  **/
  @Schema(description = "Close counter order Signature capture URL  File : TTY.DEFINE  Attr : 12,10")
  public String getSignatureCaptureURL() {
    return signatureCaptureURL;
  }

  public void setSignatureCaptureURL(String signatureCaptureURL) {
    this.signatureCaptureURL = signatureCaptureURL;
  }

  public Workstation connectTriposOnCardSelect(Boolean connectTriposOnCardSelect) {
    this.connectTriposOnCardSelect = connectTriposOnCardSelect;
    return this;
  }

   /**
   * Connect to Tripos when Card Present is Selected  File : TTY.DEFINE  Attr : 12,11
   * @return connectTriposOnCardSelect
  **/
  @Schema(description = "Connect to Tripos when Card Present is Selected  File : TTY.DEFINE  Attr : 12,11")
  public Boolean isConnectTriposOnCardSelect() {
    return connectTriposOnCardSelect;
  }

  public void setConnectTriposOnCardSelect(Boolean connectTriposOnCardSelect) {
    this.connectTriposOnCardSelect = connectTriposOnCardSelect;
  }

  public Workstation connectTriposOnSignatureCapture(Boolean connectTriposOnSignatureCapture) {
    this.connectTriposOnSignatureCapture = connectTriposOnSignatureCapture;
    return this;
  }

   /**
   * Connect to Tripos on Signature Capture Only  File : TTY.DEFINE  Attr : 12,12
   * @return connectTriposOnSignatureCapture
  **/
  @Schema(description = "Connect to Tripos on Signature Capture Only  File : TTY.DEFINE  Attr : 12,12")
  public Boolean isConnectTriposOnSignatureCapture() {
    return connectTriposOnSignatureCapture;
  }

  public void setConnectTriposOnSignatureCapture(Boolean connectTriposOnSignatureCapture) {
    this.connectTriposOnSignatureCapture = connectTriposOnSignatureCapture;
  }

  public Workstation physicalBranchIds(List<String> physicalBranchIds) {
    this.physicalBranchIds = physicalBranchIds;
    return this;
  }

  public Workstation addPhysicalBranchIdsItem(String physicalBranchIdsItem) {
    if (this.physicalBranchIds == null) {
      this.physicalBranchIds = new ArrayList<>();
    }
    this.physicalBranchIds.add(physicalBranchIdsItem);
    return this;
  }

   /**
   * Physical Branch  File : TTY.DEFINE  Attr : 13
   * @return physicalBranchIds
  **/
  @Schema(description = "Physical Branch  File : TTY.DEFINE  Attr : 13")
  public List<String> getPhysicalBranchIds() {
    return physicalBranchIds;
  }

  public void setPhysicalBranchIds(List<String> physicalBranchIds) {
    this.physicalBranchIds = physicalBranchIds;
  }

  public Workstation solarMenuHeight(MenuHeight solarMenuHeight) {
    this.solarMenuHeight = solarMenuHeight;
    return this;
  }

   /**
   * Get solarMenuHeight
   * @return solarMenuHeight
  **/
  @Valid
  @Schema(description = "")
  public MenuHeight getSolarMenuHeight() {
    return solarMenuHeight;
  }

  public void setSolarMenuHeight(MenuHeight solarMenuHeight) {
    this.solarMenuHeight = solarMenuHeight;
  }

  public Workstation showPricingInCOE(Boolean showPricingInCOE) {
    this.showPricingInCOE = showPricingInCOE;
    return this;
  }

   /**
   * Show Pricing in COE  File : TTY.DEFINE  Attr : 16
   * @return showPricingInCOE
  **/
  @Schema(description = "Show Pricing in COE  File : TTY.DEFINE  Attr : 16")
  public Boolean isShowPricingInCOE() {
    return showPricingInCOE;
  }

  public void setShowPricingInCOE(Boolean showPricingInCOE) {
    this.showPricingInCOE = showPricingInCOE;
  }

  public Workstation hideAvailabiltyInCOE(Boolean hideAvailabiltyInCOE) {
    this.hideAvailabiltyInCOE = hideAvailabiltyInCOE;
    return this;
  }

   /**
   * Hide Availability in  COE   File : TTY.DEFINE  Attr : 17
   * @return hideAvailabiltyInCOE
  **/
  @Schema(description = "Hide Availability in  COE   File : TTY.DEFINE  Attr : 17")
  public Boolean isHideAvailabiltyInCOE() {
    return hideAvailabiltyInCOE;
  }

  public void setHideAvailabiltyInCOE(Boolean hideAvailabiltyInCOE) {
    this.hideAvailabiltyInCOE = hideAvailabiltyInCOE;
  }

  public Workstation useCOEForSignatureCapture(Boolean useCOEForSignatureCapture) {
    this.useCOEForSignatureCapture = useCOEForSignatureCapture;
    return this;
  }

   /**
   * Use COE For Signature Capture   File : TTY.DEFINE  Attr : 18
   * @return useCOEForSignatureCapture
  **/
  @Schema(description = "Use COE For Signature Capture   File : TTY.DEFINE  Attr : 18")
  public Boolean isUseCOEForSignatureCapture() {
    return useCOEForSignatureCapture;
  }

  public void setUseCOEForSignatureCapture(Boolean useCOEForSignatureCapture) {
    this.useCOEForSignatureCapture = useCOEForSignatureCapture;
  }

  public Workstation coeAutoShareInOrderEntry(Boolean coeAutoShareInOrderEntry) {
    this.coeAutoShareInOrderEntry = coeAutoShareInOrderEntry;
    return this;
  }

   /**
   * COE Auto Share in OE   File : TTY.DEFINE  Attr : 19
   * @return coeAutoShareInOrderEntry
  **/
  @Schema(description = "COE Auto Share in OE   File : TTY.DEFINE  Attr : 19")
  public Boolean isCoeAutoShareInOrderEntry() {
    return coeAutoShareInOrderEntry;
  }

  public void setCoeAutoShareInOrderEntry(Boolean coeAutoShareInOrderEntry) {
    this.coeAutoShareInOrderEntry = coeAutoShareInOrderEntry;
  }

  public Workstation cartonPackageSettings(WorkstationPackageSettings cartonPackageSettings) {
    this.cartonPackageSettings = cartonPackageSettings;
    return this;
  }

   /**
   * Get cartonPackageSettings
   * @return cartonPackageSettings
  **/
  @Valid
  @Schema(description = "")
  public WorkstationPackageSettings getCartonPackageSettings() {
    return cartonPackageSettings;
  }

  public void setCartonPackageSettings(WorkstationPackageSettings cartonPackageSettings) {
    this.cartonPackageSettings = cartonPackageSettings;
  }

  public Workstation pointOfSaleSettings(WorkstationPOSSettings pointOfSaleSettings) {
    this.pointOfSaleSettings = pointOfSaleSettings;
    return this;
  }

   /**
   * Get pointOfSaleSettings
   * @return pointOfSaleSettings
  **/
  @Valid
  @Schema(description = "")
  public WorkstationPOSSettings getPointOfSaleSettings() {
    return pointOfSaleSettings;
  }

  public void setPointOfSaleSettings(WorkstationPOSSettings pointOfSaleSettings) {
    this.pointOfSaleSettings = pointOfSaleSettings;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Workstation workstation = (Workstation) o;
    return Objects.equals(this.updateKey, workstation.updateKey) &&
        Objects.equals(this.id, workstation.id) &&
        Objects.equals(this.priceBranchId, workstation.priceBranchId) &&
        Objects.equals(this.printerLocation, workstation.printerLocation) &&
        Objects.equals(this.relog, workstation.relog) &&
        Objects.equals(this.salesSource, workstation.salesSource) &&
        Objects.equals(this.slavePrinter, workstation.slavePrinter) &&
        Objects.equals(this.printToPDF, workstation.printToPDF) &&
        Objects.equals(this.type, workstation.type) &&
        Objects.equals(this.shipViaId, workstation.shipViaId) &&
        Objects.equals(this.form, workstation.form) &&
        Objects.equals(this.shipBranchId, workstation.shipBranchId) &&
        Objects.equals(this.localStorageBranchIds, workstation.localStorageBranchIds) &&
        Objects.equals(this.solarReporterEnabledFlag, workstation.solarReporterEnabledFlag) &&
        Objects.equals(this.signatureCaptureURL, workstation.signatureCaptureURL) &&
        Objects.equals(this.connectTriposOnCardSelect, workstation.connectTriposOnCardSelect) &&
        Objects.equals(this.connectTriposOnSignatureCapture, workstation.connectTriposOnSignatureCapture) &&
        Objects.equals(this.physicalBranchIds, workstation.physicalBranchIds) &&
        Objects.equals(this.solarMenuHeight, workstation.solarMenuHeight) &&
        Objects.equals(this.showPricingInCOE, workstation.showPricingInCOE) &&
        Objects.equals(this.hideAvailabiltyInCOE, workstation.hideAvailabiltyInCOE) &&
        Objects.equals(this.useCOEForSignatureCapture, workstation.useCOEForSignatureCapture) &&
        Objects.equals(this.coeAutoShareInOrderEntry, workstation.coeAutoShareInOrderEntry) &&
        Objects.equals(this.cartonPackageSettings, workstation.cartonPackageSettings) &&
        Objects.equals(this.pointOfSaleSettings, workstation.pointOfSaleSettings);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateKey, id, priceBranchId, printerLocation, relog, salesSource, slavePrinter, printToPDF, type, shipViaId, form, shipBranchId, localStorageBranchIds, solarReporterEnabledFlag, signatureCaptureURL, connectTriposOnCardSelect, connectTriposOnSignatureCapture, physicalBranchIds, solarMenuHeight, showPricingInCOE, hideAvailabiltyInCOE, useCOEForSignatureCapture, coeAutoShareInOrderEntry, cartonPackageSettings, pointOfSaleSettings);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Workstation {\n");
    
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    priceBranchId: ").append(toIndentedString(priceBranchId)).append("\n");
    sb.append("    printerLocation: ").append(toIndentedString(printerLocation)).append("\n");
    sb.append("    relog: ").append(toIndentedString(relog)).append("\n");
    sb.append("    salesSource: ").append(toIndentedString(salesSource)).append("\n");
    sb.append("    slavePrinter: ").append(toIndentedString(slavePrinter)).append("\n");
    sb.append("    printToPDF: ").append(toIndentedString(printToPDF)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    shipViaId: ").append(toIndentedString(shipViaId)).append("\n");
    sb.append("    form: ").append(toIndentedString(form)).append("\n");
    sb.append("    shipBranchId: ").append(toIndentedString(shipBranchId)).append("\n");
    sb.append("    localStorageBranchIds: ").append(toIndentedString(localStorageBranchIds)).append("\n");
    sb.append("    solarReporterEnabledFlag: ").append(toIndentedString(solarReporterEnabledFlag)).append("\n");
    sb.append("    signatureCaptureURL: ").append(toIndentedString(signatureCaptureURL)).append("\n");
    sb.append("    connectTriposOnCardSelect: ").append(toIndentedString(connectTriposOnCardSelect)).append("\n");
    sb.append("    connectTriposOnSignatureCapture: ").append(toIndentedString(connectTriposOnSignatureCapture)).append("\n");
    sb.append("    physicalBranchIds: ").append(toIndentedString(physicalBranchIds)).append("\n");
    sb.append("    solarMenuHeight: ").append(toIndentedString(solarMenuHeight)).append("\n");
    sb.append("    showPricingInCOE: ").append(toIndentedString(showPricingInCOE)).append("\n");
    sb.append("    hideAvailabiltyInCOE: ").append(toIndentedString(hideAvailabiltyInCOE)).append("\n");
    sb.append("    useCOEForSignatureCapture: ").append(toIndentedString(useCOEForSignatureCapture)).append("\n");
    sb.append("    coeAutoShareInOrderEntry: ").append(toIndentedString(coeAutoShareInOrderEntry)).append("\n");
    sb.append("    cartonPackageSettings: ").append(toIndentedString(cartonPackageSettings)).append("\n");
    sb.append("    pointOfSaleSettings: ").append(toIndentedString(pointOfSaleSettings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
