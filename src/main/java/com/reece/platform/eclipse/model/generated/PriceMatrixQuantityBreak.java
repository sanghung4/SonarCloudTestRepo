/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse PriceMatrixQuantityBreak.
 */
@Schema(description = "Object representing an Eclipse PriceMatrixQuantityBreak.")

public class PriceMatrixQuantityBreak {
  @JsonProperty("qty")
  private Integer qty = null;

  @JsonProperty("uom")
  private String uom = null;

  @JsonProperty("basis")
  private String basis = null;

  @JsonProperty("formula")
  private String formula = null;

  public PriceMatrixQuantityBreak qty(Integer qty) {
    this.qty = qty;
    return this;
  }

   /**
   * Desc: The PriceMatrix QtyBreakQty  File: MATRIX  Attr: 5,x
   * @return qty
  **/
  @Schema(description = "Desc: The PriceMatrix QtyBreakQty  File: MATRIX  Attr: 5,x")
  public Integer getQty() {
    return qty;
  }

  public void setQty(Integer qty) {
    this.qty = qty;
  }

  public PriceMatrixQuantityBreak uom(String uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Desc: The PriceMatrix QtyBreakUom  File: MATRIX  Attr: 6,x
   * @return uom
  **/
  @Schema(description = "Desc: The PriceMatrix QtyBreakUom  File: MATRIX  Attr: 6,x")
  public String getUom() {
    return uom;
  }

  public void setUom(String uom) {
    this.uom = uom;
  }

  public PriceMatrixQuantityBreak basis(String basis) {
    this.basis = basis;
    return this;
  }

   /**
   * Desc: The PriceMatrix QtyBreakBasis  File: MATRIX  Attr: 7,x
   * @return basis
  **/
  @Schema(description = "Desc: The PriceMatrix QtyBreakBasis  File: MATRIX  Attr: 7,x")
  public String getBasis() {
    return basis;
  }

  public void setBasis(String basis) {
    this.basis = basis;
  }

  public PriceMatrixQuantityBreak formula(String formula) {
    this.formula = formula;
    return this;
  }

   /**
   * Desc: The PriceMatrix QtyBreakFormula  File: MATRIX  Attr: 8,x
   * @return formula
  **/
  @Schema(description = "Desc: The PriceMatrix QtyBreakFormula  File: MATRIX  Attr: 8,x")
  public String getFormula() {
    return formula;
  }

  public void setFormula(String formula) {
    this.formula = formula;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceMatrixQuantityBreak priceMatrixQuantityBreak = (PriceMatrixQuantityBreak) o;
    return Objects.equals(this.qty, priceMatrixQuantityBreak.qty) &&
        Objects.equals(this.uom, priceMatrixQuantityBreak.uom) &&
        Objects.equals(this.basis, priceMatrixQuantityBreak.basis) &&
        Objects.equals(this.formula, priceMatrixQuantityBreak.formula);
  }

  @Override
  public int hashCode() {
    return Objects.hash(qty, uom, basis, formula);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceMatrixQuantityBreak {\n");
    
    sb.append("    qty: ").append(toIndentedString(qty)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    basis: ").append(toIndentedString(basis)).append("\n");
    sb.append("    formula: ").append(toIndentedString(formula)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
