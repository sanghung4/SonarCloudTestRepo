/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.AccountType;
import com.reece.platform.eclipse.model.generated.BalanceSheetFlag;
import com.reece.platform.eclipse.model.generated.CurrencyExchangeFlag;
import com.reece.platform.eclipse.model.generated.GlAccountAbcPool;
import com.reece.platform.eclipse.model.generated.GlAccountBranchAccess;
import com.reece.platform.eclipse.model.generated.GlAccountSubLedgerList;
import com.reece.platform.eclipse.model.generated.SubLedgerAllowedFlag;
import com.reece.platform.eclipse.model.generated.Type;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse GlAccount.
 */
@Schema(description = "Object representing an Eclipse GlAccount.")

public class GlAccount {
  @JsonProperty("updateKey")
  private String updateKey = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("accountType")
  private AccountType accountType = null;

  @JsonProperty("structuredAccountNumber")
  private String structuredAccountNumber = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("shortDescription")
  private String shortDescription = null;

  @JsonProperty("internalDescription")
  private String internalDescription = null;

  @JsonProperty("creditAdjustmentAllowed")
  private Boolean creditAdjustmentAllowed = null;

  @JsonProperty("accountsPayableAdjustmentAllowed")
  private Boolean accountsPayableAdjustmentAllowed = null;

  @JsonProperty("inventoryAdjustmentAllowed")
  private Boolean inventoryAdjustmentAllowed = null;

  @JsonProperty("miscChargeAllowed")
  private Boolean miscChargeAllowed = null;

  @JsonProperty("inventoryOverrideAllowed")
  private Boolean inventoryOverrideAllowed = null;

  @JsonProperty("activeFlag")
  private Boolean activeFlag = null;

  @JsonProperty("inactiveFlag")
  private Boolean inactiveFlag = null;

  @JsonProperty("branchDetailFlag")
  private Boolean branchDetailFlag = null;

  @JsonProperty("keywords")
  private String keywords = null;

  @JsonProperty("balanceSheetFlag")
  private BalanceSheetFlag balanceSheetFlag = null;

  @JsonProperty("currencyExchangeFlag")
  private CurrencyExchangeFlag currencyExchangeFlag = null;

  @JsonProperty("createDate")
  private LocalDateTime createDate = null;

  @JsonProperty("subLedgerAllowedFlag")
  private SubLedgerAllowedFlag subLedgerAllowedFlag = null;

  @JsonProperty("subLedgerValidationFlag")
  private String subLedgerValidationFlag = null;

  @JsonProperty("subLedgerFileSubroutine")
  private String subLedgerFileSubroutine = null;

  @JsonProperty("exportDetailFlag")
  private Boolean exportDetailFlag = null;

  @JsonProperty("type")
  private Type type = null;

  @JsonProperty("abcPools")
  private List<GlAccountAbcPool> abcPools = null;

  @JsonProperty("branchAccessList")
  private List<GlAccountBranchAccess> branchAccessList = null;

  @JsonProperty("subLedgerLists")
  private List<GlAccountSubLedgerList> subLedgerLists = null;

  public GlAccount updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update key to handle concurrency during updates within Eclipse
   * @return updateKey
  **/
  @Schema(description = "Update key to handle concurrency during updates within Eclipse")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }

  public GlAccount id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Eclipse ID for the record
   * @return id
  **/
  @Schema(description = "Eclipse ID for the record")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public GlAccount accountType(AccountType accountType) {
    this.accountType = accountType;
    return this;
  }

   /**
   * Get accountType
   * @return accountType
  **/
  @NotNull
  @Valid
  @Schema(required = true, description = "")
  public AccountType getAccountType() {
    return accountType;
  }

  public void setAccountType(AccountType accountType) {
    this.accountType = accountType;
  }

  public GlAccount structuredAccountNumber(String structuredAccountNumber) {
    this.structuredAccountNumber = structuredAccountNumber;
    return this;
  }

   /**
   * Desc: The GlAccount StructuredAccountNumber  File: GENLED  Attr: 2
   * @return structuredAccountNumber
  **/
  @Schema(description = "Desc: The GlAccount StructuredAccountNumber  File: GENLED  Attr: 2")
  public String getStructuredAccountNumber() {
    return structuredAccountNumber;
  }

  public void setStructuredAccountNumber(String structuredAccountNumber) {
    this.structuredAccountNumber = structuredAccountNumber;
  }

  public GlAccount description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Desc: The GlAccount Description  File: GENLED  Attr: 3
   * @return description
  **/
  @Schema(description = "Desc: The GlAccount Description  File: GENLED  Attr: 3")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public GlAccount shortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

   /**
   * Desc: The GlAccount ShortDescription  File: GENLED  Attr: 4
   * @return shortDescription
  **/
  @Schema(description = "Desc: The GlAccount ShortDescription  File: GENLED  Attr: 4")
  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }

  public GlAccount internalDescription(String internalDescription) {
    this.internalDescription = internalDescription;
    return this;
  }

   /**
   * Desc: The GlAccount InternalDescription  File: GENLED  Attr: 5
   * @return internalDescription
  **/
  @Schema(description = "Desc: The GlAccount InternalDescription  File: GENLED  Attr: 5")
  public String getInternalDescription() {
    return internalDescription;
  }

  public void setInternalDescription(String internalDescription) {
    this.internalDescription = internalDescription;
  }

  public GlAccount creditAdjustmentAllowed(Boolean creditAdjustmentAllowed) {
    this.creditAdjustmentAllowed = creditAdjustmentAllowed;
    return this;
  }

   /**
   * Desc: The GlAccount CreditAdjustmentAllowed flag  File: GENLED  Attr: 6,1
   * @return creditAdjustmentAllowed
  **/
  @Schema(description = "Desc: The GlAccount CreditAdjustmentAllowed flag  File: GENLED  Attr: 6,1")
  public Boolean isCreditAdjustmentAllowed() {
    return creditAdjustmentAllowed;
  }

  public void setCreditAdjustmentAllowed(Boolean creditAdjustmentAllowed) {
    this.creditAdjustmentAllowed = creditAdjustmentAllowed;
  }

  public GlAccount accountsPayableAdjustmentAllowed(Boolean accountsPayableAdjustmentAllowed) {
    this.accountsPayableAdjustmentAllowed = accountsPayableAdjustmentAllowed;
    return this;
  }

   /**
   * Desc: The GlAccount AccountsPayableAdjustmentAllowed flag  File: GENLED  Attr: 6,2
   * @return accountsPayableAdjustmentAllowed
  **/
  @Schema(description = "Desc: The GlAccount AccountsPayableAdjustmentAllowed flag  File: GENLED  Attr: 6,2")
  public Boolean isAccountsPayableAdjustmentAllowed() {
    return accountsPayableAdjustmentAllowed;
  }

  public void setAccountsPayableAdjustmentAllowed(Boolean accountsPayableAdjustmentAllowed) {
    this.accountsPayableAdjustmentAllowed = accountsPayableAdjustmentAllowed;
  }

  public GlAccount inventoryAdjustmentAllowed(Boolean inventoryAdjustmentAllowed) {
    this.inventoryAdjustmentAllowed = inventoryAdjustmentAllowed;
    return this;
  }

   /**
   * Desc: The GlAccount InventoryAdjustmentAllowed flag  File: GENLED  Attr: 6,3
   * @return inventoryAdjustmentAllowed
  **/
  @Schema(description = "Desc: The GlAccount InventoryAdjustmentAllowed flag  File: GENLED  Attr: 6,3")
  public Boolean isInventoryAdjustmentAllowed() {
    return inventoryAdjustmentAllowed;
  }

  public void setInventoryAdjustmentAllowed(Boolean inventoryAdjustmentAllowed) {
    this.inventoryAdjustmentAllowed = inventoryAdjustmentAllowed;
  }

  public GlAccount miscChargeAllowed(Boolean miscChargeAllowed) {
    this.miscChargeAllowed = miscChargeAllowed;
    return this;
  }

   /**
   * Desc: The GlAccount MiscChargeAllowed flag  File: GENLED  Attr: 6,4
   * @return miscChargeAllowed
  **/
  @Schema(description = "Desc: The GlAccount MiscChargeAllowed flag  File: GENLED  Attr: 6,4")
  public Boolean isMiscChargeAllowed() {
    return miscChargeAllowed;
  }

  public void setMiscChargeAllowed(Boolean miscChargeAllowed) {
    this.miscChargeAllowed = miscChargeAllowed;
  }

  public GlAccount inventoryOverrideAllowed(Boolean inventoryOverrideAllowed) {
    this.inventoryOverrideAllowed = inventoryOverrideAllowed;
    return this;
  }

   /**
   * Desc: The GlAccount InventoryOverrideAllowed flag  File: GENLED  Attr: 6,5
   * @return inventoryOverrideAllowed
  **/
  @Schema(description = "Desc: The GlAccount InventoryOverrideAllowed flag  File: GENLED  Attr: 6,5")
  public Boolean isInventoryOverrideAllowed() {
    return inventoryOverrideAllowed;
  }

  public void setInventoryOverrideAllowed(Boolean inventoryOverrideAllowed) {
    this.inventoryOverrideAllowed = inventoryOverrideAllowed;
  }

  public GlAccount activeFlag(Boolean activeFlag) {
    this.activeFlag = activeFlag;
    return this;
  }

   /**
   * Desc: The GlAccount ActiveFlag  File: GENLED  Attr: 8,1
   * @return activeFlag
  **/
  @Schema(description = "Desc: The GlAccount ActiveFlag  File: GENLED  Attr: 8,1")
  public Boolean isActiveFlag() {
    return activeFlag;
  }

  public void setActiveFlag(Boolean activeFlag) {
    this.activeFlag = activeFlag;
  }

  public GlAccount inactiveFlag(Boolean inactiveFlag) {
    this.inactiveFlag = inactiveFlag;
    return this;
  }

   /**
   * Desc: The GlAccount InactiveFlag  File: GENLED  Attr: 8,2
   * @return inactiveFlag
  **/
  @Schema(description = "Desc: The GlAccount InactiveFlag  File: GENLED  Attr: 8,2")
  public Boolean isInactiveFlag() {
    return inactiveFlag;
  }

  public void setInactiveFlag(Boolean inactiveFlag) {
    this.inactiveFlag = inactiveFlag;
  }

  public GlAccount branchDetailFlag(Boolean branchDetailFlag) {
    this.branchDetailFlag = branchDetailFlag;
    return this;
  }

   /**
   * Desc: The GlAccount BranchDetailFlag  File: GENLED  Attr: 9
   * @return branchDetailFlag
  **/
  @Schema(description = "Desc: The GlAccount BranchDetailFlag  File: GENLED  Attr: 9")
  public Boolean isBranchDetailFlag() {
    return branchDetailFlag;
  }

  public void setBranchDetailFlag(Boolean branchDetailFlag) {
    this.branchDetailFlag = branchDetailFlag;
  }

  public GlAccount keywords(String keywords) {
    this.keywords = keywords;
    return this;
  }

   /**
   * Desc: The GlAccount Keywords  File: GENLED  Attr: 27
   * @return keywords
  **/
  @Schema(description = "Desc: The GlAccount Keywords  File: GENLED  Attr: 27")
  public String getKeywords() {
    return keywords;
  }

  public void setKeywords(String keywords) {
    this.keywords = keywords;
  }

  public GlAccount balanceSheetFlag(BalanceSheetFlag balanceSheetFlag) {
    this.balanceSheetFlag = balanceSheetFlag;
    return this;
  }

   /**
   * Get balanceSheetFlag
   * @return balanceSheetFlag
  **/
  @NotNull
  @Valid
  @Schema(required = true, description = "")
  public BalanceSheetFlag getBalanceSheetFlag() {
    return balanceSheetFlag;
  }

  public void setBalanceSheetFlag(BalanceSheetFlag balanceSheetFlag) {
    this.balanceSheetFlag = balanceSheetFlag;
  }

  public GlAccount currencyExchangeFlag(CurrencyExchangeFlag currencyExchangeFlag) {
    this.currencyExchangeFlag = currencyExchangeFlag;
    return this;
  }

   /**
   * Get currencyExchangeFlag
   * @return currencyExchangeFlag
  **/
  @NotNull
  @Valid
  @Schema(required = true, description = "")
  public CurrencyExchangeFlag getCurrencyExchangeFlag() {
    return currencyExchangeFlag;
  }

  public void setCurrencyExchangeFlag(CurrencyExchangeFlag currencyExchangeFlag) {
    this.currencyExchangeFlag = currencyExchangeFlag;
  }

  public GlAccount createDate(LocalDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Desc: The GlAccount CreateDate (Read Only)  File: GENLED  Attr: 30
   * @return createDate
  **/
  @Valid
  @Schema(description = "Desc: The GlAccount CreateDate (Read Only)  File: GENLED  Attr: 30")
  public LocalDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(LocalDateTime createDate) {
    this.createDate = createDate;
  }

  public GlAccount subLedgerAllowedFlag(SubLedgerAllowedFlag subLedgerAllowedFlag) {
    this.subLedgerAllowedFlag = subLedgerAllowedFlag;
    return this;
  }

   /**
   * Get subLedgerAllowedFlag
   * @return subLedgerAllowedFlag
  **/
  @NotNull
  @Valid
  @Schema(required = true, description = "")
  public SubLedgerAllowedFlag getSubLedgerAllowedFlag() {
    return subLedgerAllowedFlag;
  }

  public void setSubLedgerAllowedFlag(SubLedgerAllowedFlag subLedgerAllowedFlag) {
    this.subLedgerAllowedFlag = subLedgerAllowedFlag;
  }

  public GlAccount subLedgerValidationFlag(String subLedgerValidationFlag) {
    this.subLedgerValidationFlag = subLedgerValidationFlag;
    return this;
  }

   /**
   * Desc: The GlAccount SubLedgerValidationFlag  File: GENLED  Attr: 32
   * @return subLedgerValidationFlag
  **/
  @Schema(description = "Desc: The GlAccount SubLedgerValidationFlag  File: GENLED  Attr: 32")
  public String getSubLedgerValidationFlag() {
    return subLedgerValidationFlag;
  }

  public void setSubLedgerValidationFlag(String subLedgerValidationFlag) {
    this.subLedgerValidationFlag = subLedgerValidationFlag;
  }

  public GlAccount subLedgerFileSubroutine(String subLedgerFileSubroutine) {
    this.subLedgerFileSubroutine = subLedgerFileSubroutine;
    return this;
  }

   /**
   * Desc: The GlAccount SubLedgerFileSubroutine  File: GENLED  Attr: 33
   * @return subLedgerFileSubroutine
  **/
  @Schema(description = "Desc: The GlAccount SubLedgerFileSubroutine  File: GENLED  Attr: 33")
  public String getSubLedgerFileSubroutine() {
    return subLedgerFileSubroutine;
  }

  public void setSubLedgerFileSubroutine(String subLedgerFileSubroutine) {
    this.subLedgerFileSubroutine = subLedgerFileSubroutine;
  }

  public GlAccount exportDetailFlag(Boolean exportDetailFlag) {
    this.exportDetailFlag = exportDetailFlag;
    return this;
  }

   /**
   * Desc: The GlAccount ExportDetailFlag  File: GENLED  Attr: 36
   * @return exportDetailFlag
  **/
  @Schema(description = "Desc: The GlAccount ExportDetailFlag  File: GENLED  Attr: 36")
  public Boolean isExportDetailFlag() {
    return exportDetailFlag;
  }

  public void setExportDetailFlag(Boolean exportDetailFlag) {
    this.exportDetailFlag = exportDetailFlag;
  }

  public GlAccount type(Type type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @NotNull
  @Valid
  @Schema(required = true, description = "")
  public Type getType() {
    return type;
  }

  public void setType(Type type) {
    this.type = type;
  }

  public GlAccount abcPools(List<GlAccountAbcPool> abcPools) {
    this.abcPools = abcPools;
    return this;
  }

  public GlAccount addAbcPoolsItem(GlAccountAbcPool abcPoolsItem) {
    if (this.abcPools == null) {
      this.abcPools = new ArrayList<>();
    }
    this.abcPools.add(abcPoolsItem);
    return this;
  }

   /**
   * A list of GlAccount AbcPools
   * @return abcPools
  **/
  @Valid
  @Schema(description = "A list of GlAccount AbcPools")
  public List<GlAccountAbcPool> getAbcPools() {
    return abcPools;
  }

  public void setAbcPools(List<GlAccountAbcPool> abcPools) {
    this.abcPools = abcPools;
  }

  public GlAccount branchAccessList(List<GlAccountBranchAccess> branchAccessList) {
    this.branchAccessList = branchAccessList;
    return this;
  }

  public GlAccount addBranchAccessListItem(GlAccountBranchAccess branchAccessListItem) {
    if (this.branchAccessList == null) {
      this.branchAccessList = new ArrayList<>();
    }
    this.branchAccessList.add(branchAccessListItem);
    return this;
  }

   /**
   * A list of GlAccount BranchAccessList  File: GENLED  Attr 37,2
   * @return branchAccessList
  **/
  @Valid
  @Schema(description = "A list of GlAccount BranchAccessList  File: GENLED  Attr 37,2")
  public List<GlAccountBranchAccess> getBranchAccessList() {
    return branchAccessList;
  }

  public void setBranchAccessList(List<GlAccountBranchAccess> branchAccessList) {
    this.branchAccessList = branchAccessList;
  }

  public GlAccount subLedgerLists(List<GlAccountSubLedgerList> subLedgerLists) {
    this.subLedgerLists = subLedgerLists;
    return this;
  }

  public GlAccount addSubLedgerListsItem(GlAccountSubLedgerList subLedgerListsItem) {
    if (this.subLedgerLists == null) {
      this.subLedgerLists = new ArrayList<>();
    }
    this.subLedgerLists.add(subLedgerListsItem);
    return this;
  }

   /**
   * A list of GlAccount SubLedgerLists
   * @return subLedgerLists
  **/
  @Valid
  @Schema(description = "A list of GlAccount SubLedgerLists")
  public List<GlAccountSubLedgerList> getSubLedgerLists() {
    return subLedgerLists;
  }

  public void setSubLedgerLists(List<GlAccountSubLedgerList> subLedgerLists) {
    this.subLedgerLists = subLedgerLists;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlAccount glAccount = (GlAccount) o;
    return Objects.equals(this.updateKey, glAccount.updateKey) &&
        Objects.equals(this.id, glAccount.id) &&
        Objects.equals(this.accountType, glAccount.accountType) &&
        Objects.equals(this.structuredAccountNumber, glAccount.structuredAccountNumber) &&
        Objects.equals(this.description, glAccount.description) &&
        Objects.equals(this.shortDescription, glAccount.shortDescription) &&
        Objects.equals(this.internalDescription, glAccount.internalDescription) &&
        Objects.equals(this.creditAdjustmentAllowed, glAccount.creditAdjustmentAllowed) &&
        Objects.equals(this.accountsPayableAdjustmentAllowed, glAccount.accountsPayableAdjustmentAllowed) &&
        Objects.equals(this.inventoryAdjustmentAllowed, glAccount.inventoryAdjustmentAllowed) &&
        Objects.equals(this.miscChargeAllowed, glAccount.miscChargeAllowed) &&
        Objects.equals(this.inventoryOverrideAllowed, glAccount.inventoryOverrideAllowed) &&
        Objects.equals(this.activeFlag, glAccount.activeFlag) &&
        Objects.equals(this.inactiveFlag, glAccount.inactiveFlag) &&
        Objects.equals(this.branchDetailFlag, glAccount.branchDetailFlag) &&
        Objects.equals(this.keywords, glAccount.keywords) &&
        Objects.equals(this.balanceSheetFlag, glAccount.balanceSheetFlag) &&
        Objects.equals(this.currencyExchangeFlag, glAccount.currencyExchangeFlag) &&
        Objects.equals(this.createDate, glAccount.createDate) &&
        Objects.equals(this.subLedgerAllowedFlag, glAccount.subLedgerAllowedFlag) &&
        Objects.equals(this.subLedgerValidationFlag, glAccount.subLedgerValidationFlag) &&
        Objects.equals(this.subLedgerFileSubroutine, glAccount.subLedgerFileSubroutine) &&
        Objects.equals(this.exportDetailFlag, glAccount.exportDetailFlag) &&
        Objects.equals(this.type, glAccount.type) &&
        Objects.equals(this.abcPools, glAccount.abcPools) &&
        Objects.equals(this.branchAccessList, glAccount.branchAccessList) &&
        Objects.equals(this.subLedgerLists, glAccount.subLedgerLists);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateKey, id, accountType, structuredAccountNumber, description, shortDescription, internalDescription, creditAdjustmentAllowed, accountsPayableAdjustmentAllowed, inventoryAdjustmentAllowed, miscChargeAllowed, inventoryOverrideAllowed, activeFlag, inactiveFlag, branchDetailFlag, keywords, balanceSheetFlag, currencyExchangeFlag, createDate, subLedgerAllowedFlag, subLedgerValidationFlag, subLedgerFileSubroutine, exportDetailFlag, type, abcPools, branchAccessList, subLedgerLists);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlAccount {\n");
    
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    structuredAccountNumber: ").append(toIndentedString(structuredAccountNumber)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    internalDescription: ").append(toIndentedString(internalDescription)).append("\n");
    sb.append("    creditAdjustmentAllowed: ").append(toIndentedString(creditAdjustmentAllowed)).append("\n");
    sb.append("    accountsPayableAdjustmentAllowed: ").append(toIndentedString(accountsPayableAdjustmentAllowed)).append("\n");
    sb.append("    inventoryAdjustmentAllowed: ").append(toIndentedString(inventoryAdjustmentAllowed)).append("\n");
    sb.append("    miscChargeAllowed: ").append(toIndentedString(miscChargeAllowed)).append("\n");
    sb.append("    inventoryOverrideAllowed: ").append(toIndentedString(inventoryOverrideAllowed)).append("\n");
    sb.append("    activeFlag: ").append(toIndentedString(activeFlag)).append("\n");
    sb.append("    inactiveFlag: ").append(toIndentedString(inactiveFlag)).append("\n");
    sb.append("    branchDetailFlag: ").append(toIndentedString(branchDetailFlag)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    balanceSheetFlag: ").append(toIndentedString(balanceSheetFlag)).append("\n");
    sb.append("    currencyExchangeFlag: ").append(toIndentedString(currencyExchangeFlag)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    subLedgerAllowedFlag: ").append(toIndentedString(subLedgerAllowedFlag)).append("\n");
    sb.append("    subLedgerValidationFlag: ").append(toIndentedString(subLedgerValidationFlag)).append("\n");
    sb.append("    subLedgerFileSubroutine: ").append(toIndentedString(subLedgerFileSubroutine)).append("\n");
    sb.append("    exportDetailFlag: ").append(toIndentedString(exportDetailFlag)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    abcPools: ").append(toIndentedString(abcPools)).append("\n");
    sb.append("    branchAccessList: ").append(toIndentedString(branchAccessList)).append("\n");
    sb.append("    subLedgerLists: ").append(toIndentedString(subLedgerLists)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
