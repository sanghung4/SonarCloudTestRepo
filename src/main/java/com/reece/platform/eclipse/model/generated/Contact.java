/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.ContactAccessList;
import com.reece.platform.eclipse.model.generated.ContactClassification;
import com.reece.platform.eclipse.model.generated.ContactElementCreditCard;
import com.reece.platform.eclipse.model.generated.ContactEmail;
import com.reece.platform.eclipse.model.generated.ContactEntity;
import com.reece.platform.eclipse.model.generated.ContactKeyword;
import com.reece.platform.eclipse.model.generated.ContactPhone;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse Contact.
 */
@Schema(description = "Object representing an Eclipse Contact.")

public class Contact {
  @JsonProperty("updateKey")
  private String updateKey = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("firstName")
  private String firstName = null;

  @JsonProperty("middleName")
  private String middleName = null;

  @JsonProperty("lastName")
  private String lastName = null;

  @JsonProperty("salutation")
  private String salutation = null;

  @JsonProperty("sortBy")
  private String sortBy = null;

  @JsonProperty("useEntityAddress")
  private Boolean useEntityAddress = null;

  @JsonProperty("addressLine1")
  private String addressLine1 = null;

  @JsonProperty("addressLine2")
  private String addressLine2 = null;

  @JsonProperty("city")
  private String city = null;

  @JsonProperty("state")
  private String state = null;

  @JsonProperty("postalCode")
  private String postalCode = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("website")
  private String website = null;

  @JsonProperty("entities")
  private List<ContactEntity> entities = null;

  @JsonProperty("lastUpdateDateTime")
  private LocalDateTime lastUpdateDateTime = null;

  @JsonProperty("companyName")
  private String companyName = null;

  @JsonProperty("inactive")
  private Boolean inactive = null;

  @JsonProperty("webEnabled")
  private Boolean webEnabled = null;

  @JsonProperty("keywords")
  private List<ContactKeyword> keywords = null;

  @JsonProperty("accessLists")
  private List<ContactAccessList> accessLists = null;

  @JsonProperty("emails")
  private List<ContactEmail> emails = null;

  @JsonProperty("phones")
  private List<ContactPhone> phones = null;

  @JsonProperty("classifications")
  private List<ContactClassification> classifications = null;

  @JsonProperty("elementCreditCards")
  private List<ContactElementCreditCard> elementCreditCards = null;

  public Contact updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update key to handle concurrency during updates within Eclipse
   * @return updateKey
  **/
  @Schema(description = "Update key to handle concurrency during updates within Eclipse")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }

  public Contact id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Eclipse ID for the record
   * @return id
  **/
  @Schema(description = "Eclipse ID for the record")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Contact firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * Desc: The Contact FirstName  File: CONTACT  Attr: 1
   * @return firstName
  **/
  @Schema(description = "Desc: The Contact FirstName  File: CONTACT  Attr: 1")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public Contact middleName(String middleName) {
    this.middleName = middleName;
    return this;
  }

   /**
   * Desc: The Contact MiddleName  File: CONTACT  Attr: 2
   * @return middleName
  **/
  @Schema(description = "Desc: The Contact MiddleName  File: CONTACT  Attr: 2")
  public String getMiddleName() {
    return middleName;
  }

  public void setMiddleName(String middleName) {
    this.middleName = middleName;
  }

  public Contact lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Desc: The Contact LastName  File: CONTACT  Attr: 3
   * @return lastName
  **/
  @Schema(description = "Desc: The Contact LastName  File: CONTACT  Attr: 3")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public Contact salutation(String salutation) {
    this.salutation = salutation;
    return this;
  }

   /**
   * Desc: The Contact Salutation  File: CONTACT  Attr: 4
   * @return salutation
  **/
  @Schema(description = "Desc: The Contact Salutation  File: CONTACT  Attr: 4")
  public String getSalutation() {
    return salutation;
  }

  public void setSalutation(String salutation) {
    this.salutation = salutation;
  }

  public Contact sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Desc: The Contact SortBy  File: CONTACT  Attr: 5
   * @return sortBy
  **/
  @Schema(description = "Desc: The Contact SortBy  File: CONTACT  Attr: 5")
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }

  public Contact useEntityAddress(Boolean useEntityAddress) {
    this.useEntityAddress = useEntityAddress;
    return this;
  }

   /**
   * Desc: The Contact UseEntityAddress flag  File: CONTACT  Attr: 6
   * @return useEntityAddress
  **/
  @Schema(description = "Desc: The Contact UseEntityAddress flag  File: CONTACT  Attr: 6")
  public Boolean isUseEntityAddress() {
    return useEntityAddress;
  }

  public void setUseEntityAddress(Boolean useEntityAddress) {
    this.useEntityAddress = useEntityAddress;
  }

  public Contact addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Desc: The Contact AddressLine1  File: CONTACT  Attr: 7,1
   * @return addressLine1
  **/
  @Schema(description = "Desc: The Contact AddressLine1  File: CONTACT  Attr: 7,1")
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }

  public Contact addressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Desc: The Contact AddressLine2  File: CONTACT  Attr: 7,2
   * @return addressLine2
  **/
  @Schema(description = "Desc: The Contact AddressLine2  File: CONTACT  Attr: 7,2")
  public String getAddressLine2() {
    return addressLine2;
  }

  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }

  public Contact city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Desc: The Contact City  File: CONTACT  Attr: 8
   * @return city
  **/
  @Schema(description = "Desc: The Contact City  File: CONTACT  Attr: 8")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public Contact state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Desc: The Contact State  File: CONTACT  Attr: 9
   * @return state
  **/
  @Schema(description = "Desc: The Contact State  File: CONTACT  Attr: 9")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public Contact postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Desc: The Contact PostalCode  File: CONTACT  Attr: 10
   * @return postalCode
  **/
  @Schema(description = "Desc: The Contact PostalCode  File: CONTACT  Attr: 10")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public Contact title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Desc: The Contact Title  File: CONTACT  Attr: 12
   * @return title
  **/
  @Schema(description = "Desc: The Contact Title  File: CONTACT  Attr: 12")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public Contact website(String website) {
    this.website = website;
    return this;
  }

   /**
   * Desc: The Contact Website  File: CONTACT  Attr: 13
   * @return website
  **/
  @Schema(description = "Desc: The Contact Website  File: CONTACT  Attr: 13")
  public String getWebsite() {
    return website;
  }

  public void setWebsite(String website) {
    this.website = website;
  }

  public Contact entities(List<ContactEntity> entities) {
    this.entities = entities;
    return this;
  }

  public Contact addEntitiesItem(ContactEntity entitiesItem) {
    if (this.entities == null) {
      this.entities = new ArrayList<>();
    }
    this.entities.add(entitiesItem);
    return this;
  }

   /**
   * Desc: The Contact Entities  File: CONTACT  Attr: 16,1
   * @return entities
  **/
  @Valid
  @Schema(description = "Desc: The Contact Entities  File: CONTACT  Attr: 16,1")
  public List<ContactEntity> getEntities() {
    return entities;
  }

  public void setEntities(List<ContactEntity> entities) {
    this.entities = entities;
  }

  public Contact lastUpdateDateTime(LocalDateTime lastUpdateDateTime) {
    this.lastUpdateDateTime = lastUpdateDateTime;
    return this;
  }

   /**
   * Desc: The Contact LastUpdateDateTime  File: CONTACT  Attr: 19
   * @return lastUpdateDateTime
  **/
  @Valid
  @Schema(description = "Desc: The Contact LastUpdateDateTime  File: CONTACT  Attr: 19")
  public LocalDateTime getLastUpdateDateTime() {
    return lastUpdateDateTime;
  }

  public void setLastUpdateDateTime(LocalDateTime lastUpdateDateTime) {
    this.lastUpdateDateTime = lastUpdateDateTime;
  }

  public Contact companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

   /**
   * Desc: The Contact CompanyName  File: CONTACT  Attr: 23
   * @return companyName
  **/
  @Schema(description = "Desc: The Contact CompanyName  File: CONTACT  Attr: 23")
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }

  public Contact inactive(Boolean inactive) {
    this.inactive = inactive;
    return this;
  }

   /**
   * Desc: The Contact Inactive  File: CONTACT  Attr: 32
   * @return inactive
  **/
  @Schema(description = "Desc: The Contact Inactive  File: CONTACT  Attr: 32")
  public Boolean isInactive() {
    return inactive;
  }

  public void setInactive(Boolean inactive) {
    this.inactive = inactive;
  }

  public Contact webEnabled(Boolean webEnabled) {
    this.webEnabled = webEnabled;
    return this;
  }

   /**
   * Desc: The Contact Web Enabled  File: CONTACT  Attr: 34
   * @return webEnabled
  **/
  @Schema(description = "Desc: The Contact Web Enabled  File: CONTACT  Attr: 34")
  public Boolean isWebEnabled() {
    return webEnabled;
  }

  public void setWebEnabled(Boolean webEnabled) {
    this.webEnabled = webEnabled;
  }

  public Contact keywords(List<ContactKeyword> keywords) {
    this.keywords = keywords;
    return this;
  }

  public Contact addKeywordsItem(ContactKeyword keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

   /**
   * A list of Contact Keywords
   * @return keywords
  **/
  @Valid
  @Schema(description = "A list of Contact Keywords")
  public List<ContactKeyword> getKeywords() {
    return keywords;
  }

  public void setKeywords(List<ContactKeyword> keywords) {
    this.keywords = keywords;
  }

  public Contact accessLists(List<ContactAccessList> accessLists) {
    this.accessLists = accessLists;
    return this;
  }

  public Contact addAccessListsItem(ContactAccessList accessListsItem) {
    if (this.accessLists == null) {
      this.accessLists = new ArrayList<>();
    }
    this.accessLists.add(accessListsItem);
    return this;
  }

   /**
   * A list of Contact AccessLists
   * @return accessLists
  **/
  @Valid
  @Schema(description = "A list of Contact AccessLists")
  public List<ContactAccessList> getAccessLists() {
    return accessLists;
  }

  public void setAccessLists(List<ContactAccessList> accessLists) {
    this.accessLists = accessLists;
  }

  public Contact emails(List<ContactEmail> emails) {
    this.emails = emails;
    return this;
  }

  public Contact addEmailsItem(ContactEmail emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * A list of Contact Emails
   * @return emails
  **/
  @Valid
  @Schema(description = "A list of Contact Emails")
  public List<ContactEmail> getEmails() {
    return emails;
  }

  public void setEmails(List<ContactEmail> emails) {
    this.emails = emails;
  }

  public Contact phones(List<ContactPhone> phones) {
    this.phones = phones;
    return this;
  }

  public Contact addPhonesItem(ContactPhone phonesItem) {
    if (this.phones == null) {
      this.phones = new ArrayList<>();
    }
    this.phones.add(phonesItem);
    return this;
  }

   /**
   * A list of Contact Phones
   * @return phones
  **/
  @Valid
  @Schema(description = "A list of Contact Phones")
  public List<ContactPhone> getPhones() {
    return phones;
  }

  public void setPhones(List<ContactPhone> phones) {
    this.phones = phones;
  }

  public Contact classifications(List<ContactClassification> classifications) {
    this.classifications = classifications;
    return this;
  }

  public Contact addClassificationsItem(ContactClassification classificationsItem) {
    if (this.classifications == null) {
      this.classifications = new ArrayList<>();
    }
    this.classifications.add(classificationsItem);
    return this;
  }

   /**
   * A list of Contact Classification
   * @return classifications
  **/
  @Valid
  @Schema(description = "A list of Contact Classification")
  public List<ContactClassification> getClassifications() {
    return classifications;
  }

  public void setClassifications(List<ContactClassification> classifications) {
    this.classifications = classifications;
  }

  public Contact elementCreditCards(List<ContactElementCreditCard> elementCreditCards) {
    this.elementCreditCards = elementCreditCards;
    return this;
  }

  public Contact addElementCreditCardsItem(ContactElementCreditCard elementCreditCardsItem) {
    if (this.elementCreditCards == null) {
      this.elementCreditCards = new ArrayList<>();
    }
    this.elementCreditCards.add(elementCreditCardsItem);
    return this;
  }

   /**
   * A list of Contact Element Credit Cards
   * @return elementCreditCards
  **/
  @Valid
  @Schema(description = "A list of Contact Element Credit Cards")
  public List<ContactElementCreditCard> getElementCreditCards() {
    return elementCreditCards;
  }

  public void setElementCreditCards(List<ContactElementCreditCard> elementCreditCards) {
    this.elementCreditCards = elementCreditCards;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Contact contact = (Contact) o;
    return Objects.equals(this.updateKey, contact.updateKey) &&
        Objects.equals(this.id, contact.id) &&
        Objects.equals(this.firstName, contact.firstName) &&
        Objects.equals(this.middleName, contact.middleName) &&
        Objects.equals(this.lastName, contact.lastName) &&
        Objects.equals(this.salutation, contact.salutation) &&
        Objects.equals(this.sortBy, contact.sortBy) &&
        Objects.equals(this.useEntityAddress, contact.useEntityAddress) &&
        Objects.equals(this.addressLine1, contact.addressLine1) &&
        Objects.equals(this.addressLine2, contact.addressLine2) &&
        Objects.equals(this.city, contact.city) &&
        Objects.equals(this.state, contact.state) &&
        Objects.equals(this.postalCode, contact.postalCode) &&
        Objects.equals(this.title, contact.title) &&
        Objects.equals(this.website, contact.website) &&
        Objects.equals(this.entities, contact.entities) &&
        Objects.equals(this.lastUpdateDateTime, contact.lastUpdateDateTime) &&
        Objects.equals(this.companyName, contact.companyName) &&
        Objects.equals(this.inactive, contact.inactive) &&
        Objects.equals(this.webEnabled, contact.webEnabled) &&
        Objects.equals(this.keywords, contact.keywords) &&
        Objects.equals(this.accessLists, contact.accessLists) &&
        Objects.equals(this.emails, contact.emails) &&
        Objects.equals(this.phones, contact.phones) &&
        Objects.equals(this.classifications, contact.classifications) &&
        Objects.equals(this.elementCreditCards, contact.elementCreditCards);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateKey, id, firstName, middleName, lastName, salutation, sortBy, useEntityAddress, addressLine1, addressLine2, city, state, postalCode, title, website, entities, lastUpdateDateTime, companyName, inactive, webEnabled, keywords, accessLists, emails, phones, classifications, elementCreditCards);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Contact {\n");
    
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    salutation: ").append(toIndentedString(salutation)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    useEntityAddress: ").append(toIndentedString(useEntityAddress)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    website: ").append(toIndentedString(website)).append("\n");
    sb.append("    entities: ").append(toIndentedString(entities)).append("\n");
    sb.append("    lastUpdateDateTime: ").append(toIndentedString(lastUpdateDateTime)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    inactive: ").append(toIndentedString(inactive)).append("\n");
    sb.append("    webEnabled: ").append(toIndentedString(webEnabled)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    accessLists: ").append(toIndentedString(accessLists)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    classifications: ").append(toIndentedString(classifications)).append("\n");
    sb.append("    elementCreditCards: ").append(toIndentedString(elementCreditCards)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
