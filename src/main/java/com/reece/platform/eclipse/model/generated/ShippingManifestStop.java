/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.ShippingManifestStopTicket;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse ShippingManifestStop.
 */
@Schema(description = "Object representing an Eclipse ShippingManifestStop.")

public class ShippingManifestStop {
  @JsonProperty("deliveryTimeEstimate")
  private LocalDateTime deliveryTimeEstimate = null;

  @JsonProperty("deliveredFlag")
  private Boolean deliveredFlag = null;

  @JsonProperty("arrivalTimeActual")
  private LocalDateTime arrivalTimeActual = null;

  @JsonProperty("departureTimeActual")
  private LocalDateTime departureTimeActual = null;

  @JsonProperty("holdPickingFlag")
  private Boolean holdPickingFlag = null;

  @JsonProperty("stageLocation")
  private String stageLocation = null;

  @JsonProperty("holdStopFlag")
  private Boolean holdStopFlag = null;

  @JsonProperty("status")
  private String status = null;

  @JsonProperty("package1Qty")
  private Integer package1Qty = null;

  @JsonProperty("package2Qty")
  private Integer package2Qty = null;

  @JsonProperty("package3Qty")
  private Integer package3Qty = null;

  @JsonProperty("package4Qty")
  private Integer package4Qty = null;

  @JsonProperty("tickets")
  private List<ShippingManifestStopTicket> tickets = null;

  @JsonProperty("totes")
  private List<String> totes = null;

  public ShippingManifestStop deliveryTimeEstimate(LocalDateTime deliveryTimeEstimate) {
    this.deliveryTimeEstimate = deliveryTimeEstimate;
    return this;
  }

   /**
   * Desc: The ShippingManifestStop DeliveryTimeEstimate  File: MANIFESTS  Attr: 11,x
   * @return deliveryTimeEstimate
  **/
  @Valid
  @Schema(description = "Desc: The ShippingManifestStop DeliveryTimeEstimate  File: MANIFESTS  Attr: 11,x")
  public LocalDateTime getDeliveryTimeEstimate() {
    return deliveryTimeEstimate;
  }

  public void setDeliveryTimeEstimate(LocalDateTime deliveryTimeEstimate) {
    this.deliveryTimeEstimate = deliveryTimeEstimate;
  }

  public ShippingManifestStop deliveredFlag(Boolean deliveredFlag) {
    this.deliveredFlag = deliveredFlag;
    return this;
  }

   /**
   * Desc: The ShippingManifestStop DeliveredFlag  File: MANIFESTS  Attr: 12,x
   * @return deliveredFlag
  **/
  @Schema(description = "Desc: The ShippingManifestStop DeliveredFlag  File: MANIFESTS  Attr: 12,x")
  public Boolean isDeliveredFlag() {
    return deliveredFlag;
  }

  public void setDeliveredFlag(Boolean deliveredFlag) {
    this.deliveredFlag = deliveredFlag;
  }

  public ShippingManifestStop arrivalTimeActual(LocalDateTime arrivalTimeActual) {
    this.arrivalTimeActual = arrivalTimeActual;
    return this;
  }

   /**
   * Desc: The ShippingManifestStop ArrivalTimeActual  File: MANIFESTS  Attr: 32,x,1
   * @return arrivalTimeActual
  **/
  @Valid
  @Schema(description = "Desc: The ShippingManifestStop ArrivalTimeActual  File: MANIFESTS  Attr: 32,x,1")
  public LocalDateTime getArrivalTimeActual() {
    return arrivalTimeActual;
  }

  public void setArrivalTimeActual(LocalDateTime arrivalTimeActual) {
    this.arrivalTimeActual = arrivalTimeActual;
  }

  public ShippingManifestStop departureTimeActual(LocalDateTime departureTimeActual) {
    this.departureTimeActual = departureTimeActual;
    return this;
  }

   /**
   * Desc: The ShippingManifestStop DepartureTimeActual  File: MANIFESTS  Attr: 32,x,2
   * @return departureTimeActual
  **/
  @Valid
  @Schema(description = "Desc: The ShippingManifestStop DepartureTimeActual  File: MANIFESTS  Attr: 32,x,2")
  public LocalDateTime getDepartureTimeActual() {
    return departureTimeActual;
  }

  public void setDepartureTimeActual(LocalDateTime departureTimeActual) {
    this.departureTimeActual = departureTimeActual;
  }

  public ShippingManifestStop holdPickingFlag(Boolean holdPickingFlag) {
    this.holdPickingFlag = holdPickingFlag;
    return this;
  }

   /**
   * Desc: The ShippingManifestStop HoldPickingFlag  File: MANIFESTS  Attr: 35,x
   * @return holdPickingFlag
  **/
  @Schema(description = "Desc: The ShippingManifestStop HoldPickingFlag  File: MANIFESTS  Attr: 35,x")
  public Boolean isHoldPickingFlag() {
    return holdPickingFlag;
  }

  public void setHoldPickingFlag(Boolean holdPickingFlag) {
    this.holdPickingFlag = holdPickingFlag;
  }

  public ShippingManifestStop stageLocation(String stageLocation) {
    this.stageLocation = stageLocation;
    return this;
  }

   /**
   * Desc: The ShippingManifestStop StageLocation  File: MANIFESTS  Attr: 36,x
   * @return stageLocation
  **/
  @Schema(description = "Desc: The ShippingManifestStop StageLocation  File: MANIFESTS  Attr: 36,x")
  public String getStageLocation() {
    return stageLocation;
  }

  public void setStageLocation(String stageLocation) {
    this.stageLocation = stageLocation;
  }

  public ShippingManifestStop holdStopFlag(Boolean holdStopFlag) {
    this.holdStopFlag = holdStopFlag;
    return this;
  }

   /**
   * Desc: The ShippingManifestStop HoldStopFlag  File: MANIFESTS  Attr: 37,x
   * @return holdStopFlag
  **/
  @Schema(description = "Desc: The ShippingManifestStop HoldStopFlag  File: MANIFESTS  Attr: 37,x")
  public Boolean isHoldStopFlag() {
    return holdStopFlag;
  }

  public void setHoldStopFlag(Boolean holdStopFlag) {
    this.holdStopFlag = holdStopFlag;
  }

  public ShippingManifestStop status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Desc: The ShippingManifestStop Status  File: MANIFESTS  Attr: 39,x
   * @return status
  **/
  @Schema(description = "Desc: The ShippingManifestStop Status  File: MANIFESTS  Attr: 39,x")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public ShippingManifestStop package1Qty(Integer package1Qty) {
    this.package1Qty = package1Qty;
    return this;
  }

   /**
   * Desc: The ShippingManifestStop Package1Qty  File: MANIFESTS  Attr: 42,x,1
   * @return package1Qty
  **/
  @Schema(description = "Desc: The ShippingManifestStop Package1Qty  File: MANIFESTS  Attr: 42,x,1")
  public Integer getPackage1Qty() {
    return package1Qty;
  }

  public void setPackage1Qty(Integer package1Qty) {
    this.package1Qty = package1Qty;
  }

  public ShippingManifestStop package2Qty(Integer package2Qty) {
    this.package2Qty = package2Qty;
    return this;
  }

   /**
   * Desc: The ShippingManifestStop Package2Qty  File: MANIFESTS  Attr: 42,x,2
   * @return package2Qty
  **/
  @Schema(description = "Desc: The ShippingManifestStop Package2Qty  File: MANIFESTS  Attr: 42,x,2")
  public Integer getPackage2Qty() {
    return package2Qty;
  }

  public void setPackage2Qty(Integer package2Qty) {
    this.package2Qty = package2Qty;
  }

  public ShippingManifestStop package3Qty(Integer package3Qty) {
    this.package3Qty = package3Qty;
    return this;
  }

   /**
   * Desc: The ShippingManifestStop Package3Qty  File: MANIFESTS  Attr: 42,x,3
   * @return package3Qty
  **/
  @Schema(description = "Desc: The ShippingManifestStop Package3Qty  File: MANIFESTS  Attr: 42,x,3")
  public Integer getPackage3Qty() {
    return package3Qty;
  }

  public void setPackage3Qty(Integer package3Qty) {
    this.package3Qty = package3Qty;
  }

  public ShippingManifestStop package4Qty(Integer package4Qty) {
    this.package4Qty = package4Qty;
    return this;
  }

   /**
   * Desc: The ShippingManifestStop Package4Qty  File: MANIFESTS  Attr: 42,x,4
   * @return package4Qty
  **/
  @Schema(description = "Desc: The ShippingManifestStop Package4Qty  File: MANIFESTS  Attr: 42,x,4")
  public Integer getPackage4Qty() {
    return package4Qty;
  }

  public void setPackage4Qty(Integer package4Qty) {
    this.package4Qty = package4Qty;
  }

  public ShippingManifestStop tickets(List<ShippingManifestStopTicket> tickets) {
    this.tickets = tickets;
    return this;
  }

  public ShippingManifestStop addTicketsItem(ShippingManifestStopTicket ticketsItem) {
    if (this.tickets == null) {
      this.tickets = new ArrayList<>();
    }
    this.tickets.add(ticketsItem);
    return this;
  }

   /**
   * A list of ShippingManifestStop Tickets
   * @return tickets
  **/
  @Valid
  @Schema(description = "A list of ShippingManifestStop Tickets")
  public List<ShippingManifestStopTicket> getTickets() {
    return tickets;
  }

  public void setTickets(List<ShippingManifestStopTicket> tickets) {
    this.tickets = tickets;
  }

  public ShippingManifestStop totes(List<String> totes) {
    this.totes = totes;
    return this;
  }

  public ShippingManifestStop addTotesItem(String totesItem) {
    if (this.totes == null) {
      this.totes = new ArrayList<>();
    }
    this.totes.add(totesItem);
    return this;
  }

   /**
   * A list of Totes loaded by the warehouse for this stop.
   * @return totes
  **/
  @Schema(description = "A list of Totes loaded by the warehouse for this stop.")
  public List<String> getTotes() {
    return totes;
  }

  public void setTotes(List<String> totes) {
    this.totes = totes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingManifestStop shippingManifestStop = (ShippingManifestStop) o;
    return Objects.equals(this.deliveryTimeEstimate, shippingManifestStop.deliveryTimeEstimate) &&
        Objects.equals(this.deliveredFlag, shippingManifestStop.deliveredFlag) &&
        Objects.equals(this.arrivalTimeActual, shippingManifestStop.arrivalTimeActual) &&
        Objects.equals(this.departureTimeActual, shippingManifestStop.departureTimeActual) &&
        Objects.equals(this.holdPickingFlag, shippingManifestStop.holdPickingFlag) &&
        Objects.equals(this.stageLocation, shippingManifestStop.stageLocation) &&
        Objects.equals(this.holdStopFlag, shippingManifestStop.holdStopFlag) &&
        Objects.equals(this.status, shippingManifestStop.status) &&
        Objects.equals(this.package1Qty, shippingManifestStop.package1Qty) &&
        Objects.equals(this.package2Qty, shippingManifestStop.package2Qty) &&
        Objects.equals(this.package3Qty, shippingManifestStop.package3Qty) &&
        Objects.equals(this.package4Qty, shippingManifestStop.package4Qty) &&
        Objects.equals(this.tickets, shippingManifestStop.tickets) &&
        Objects.equals(this.totes, shippingManifestStop.totes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(deliveryTimeEstimate, deliveredFlag, arrivalTimeActual, departureTimeActual, holdPickingFlag, stageLocation, holdStopFlag, status, package1Qty, package2Qty, package3Qty, package4Qty, tickets, totes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingManifestStop {\n");
    
    sb.append("    deliveryTimeEstimate: ").append(toIndentedString(deliveryTimeEstimate)).append("\n");
    sb.append("    deliveredFlag: ").append(toIndentedString(deliveredFlag)).append("\n");
    sb.append("    arrivalTimeActual: ").append(toIndentedString(arrivalTimeActual)).append("\n");
    sb.append("    departureTimeActual: ").append(toIndentedString(departureTimeActual)).append("\n");
    sb.append("    holdPickingFlag: ").append(toIndentedString(holdPickingFlag)).append("\n");
    sb.append("    stageLocation: ").append(toIndentedString(stageLocation)).append("\n");
    sb.append("    holdStopFlag: ").append(toIndentedString(holdStopFlag)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    package1Qty: ").append(toIndentedString(package1Qty)).append("\n");
    sb.append("    package2Qty: ").append(toIndentedString(package2Qty)).append("\n");
    sb.append("    package3Qty: ").append(toIndentedString(package3Qty)).append("\n");
    sb.append("    package4Qty: ").append(toIndentedString(package4Qty)).append("\n");
    sb.append("    tickets: ").append(toIndentedString(tickets)).append("\n");
    sb.append("    totes: ").append(toIndentedString(totes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
