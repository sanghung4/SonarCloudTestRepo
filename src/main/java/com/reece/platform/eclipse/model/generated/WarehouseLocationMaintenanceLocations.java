/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * This will store the locations and their respective data.
 */
@Schema(description = "This will store the locations and their respective data.")

public class WarehouseLocationMaintenanceLocations {
  @JsonProperty("location")
  private String location = null;

  @JsonProperty("onHandQuantity")
  private Double onHandQuantity = null;

  @JsonProperty("locationStatus")
  private String locationStatus = null;

  @JsonProperty("locationType")
  private String locationType = null;

  @JsonProperty("lot")
  private String lot = null;

  @JsonProperty("serial")
  private String serial = null;

  @JsonProperty("warehouseStatus")
  private String warehouseStatus = null;

  @JsonProperty("homeLocation")
  private String homeLocation = null;

  @JsonProperty("minQuantity")
  private Integer minQuantity = null;

  @JsonProperty("maxQuantity")
  private Integer maxQuantity = null;

  @JsonProperty("lastCount")
  private LocalDateTime lastCount = null;

  @JsonProperty("expirationDate")
  private LocalDateTime expirationDate = null;

  @JsonProperty("receiveDate")
  private LocalDateTime receiveDate = null;

  @JsonProperty("uom")
  private String uom = null;

  @JsonProperty("rType")
  private String rType = null;

  @JsonProperty("oldType")
  private String oldType = null;

  @JsonProperty("locationKey")
  private String locationKey = null;

  @JsonProperty("fullLocation")
  private String fullLocation = null;

  @JsonProperty("lastSortBy")
  private String lastSortBy = null;

  @JsonProperty("pickLocation")
  private String pickLocation = null;

  @JsonProperty("prePackageQuantity")
  private Integer prePackageQuantity = null;

  @JsonProperty("lastPutAwayDate")
  private LocalDateTime lastPutAwayDate = null;

  @JsonProperty("rowId")
  private Integer rowId = null;

  @JsonProperty("isInProcess")
  private Boolean isInProcess = null;

  public WarehouseLocationMaintenanceLocations location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Location
   * @return location
  **/
  @Schema(description = "Location")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public WarehouseLocationMaintenanceLocations onHandQuantity(Double onHandQuantity) {
    this.onHandQuantity = onHandQuantity;
    return this;
  }

   /**
   * On-Hand Quantity
   * @return onHandQuantity
  **/
  @Schema(description = "On-Hand Quantity")
  public Double getOnHandQuantity() {
    return onHandQuantity;
  }

  public void setOnHandQuantity(Double onHandQuantity) {
    this.onHandQuantity = onHandQuantity;
  }

  public WarehouseLocationMaintenanceLocations locationStatus(String locationStatus) {
    this.locationStatus = locationStatus;
    return this;
  }

   /**
   * Location Status
   * @return locationStatus
  **/
  @Schema(description = "Location Status")
  public String getLocationStatus() {
    return locationStatus;
  }

  public void setLocationStatus(String locationStatus) {
    this.locationStatus = locationStatus;
  }

  public WarehouseLocationMaintenanceLocations locationType(String locationType) {
    this.locationType = locationType;
    return this;
  }

   /**
   * Location Type
   * @return locationType
  **/
  @Schema(description = "Location Type")
  public String getLocationType() {
    return locationType;
  }

  public void setLocationType(String locationType) {
    this.locationType = locationType;
  }

  public WarehouseLocationMaintenanceLocations lot(String lot) {
    this.lot = lot;
    return this;
  }

   /**
   * Lot number
   * @return lot
  **/
  @Schema(description = "Lot number")
  public String getLot() {
    return lot;
  }

  public void setLot(String lot) {
    this.lot = lot;
  }

  public WarehouseLocationMaintenanceLocations serial(String serial) {
    this.serial = serial;
    return this;
  }

   /**
   * Serial
   * @return serial
  **/
  @Schema(description = "Serial")
  public String getSerial() {
    return serial;
  }

  public void setSerial(String serial) {
    this.serial = serial;
  }

  public WarehouseLocationMaintenanceLocations warehouseStatus(String warehouseStatus) {
    this.warehouseStatus = warehouseStatus;
    return this;
  }

   /**
   * Warehouse Status
   * @return warehouseStatus
  **/
  @Schema(description = "Warehouse Status")
  public String getWarehouseStatus() {
    return warehouseStatus;
  }

  public void setWarehouseStatus(String warehouseStatus) {
    this.warehouseStatus = warehouseStatus;
  }

  public WarehouseLocationMaintenanceLocations homeLocation(String homeLocation) {
    this.homeLocation = homeLocation;
    return this;
  }

   /**
   * Home Location
   * @return homeLocation
  **/
  @Schema(description = "Home Location")
  public String getHomeLocation() {
    return homeLocation;
  }

  public void setHomeLocation(String homeLocation) {
    this.homeLocation = homeLocation;
  }

  public WarehouseLocationMaintenanceLocations minQuantity(Integer minQuantity) {
    this.minQuantity = minQuantity;
    return this;
  }

   /**
   * Minimum amount of quantity
   * @return minQuantity
  **/
  @Schema(description = "Minimum amount of quantity")
  public Integer getMinQuantity() {
    return minQuantity;
  }

  public void setMinQuantity(Integer minQuantity) {
    this.minQuantity = minQuantity;
  }

  public WarehouseLocationMaintenanceLocations maxQuantity(Integer maxQuantity) {
    this.maxQuantity = maxQuantity;
    return this;
  }

   /**
   * Maximum amount of quantity
   * @return maxQuantity
  **/
  @Schema(description = "Maximum amount of quantity")
  public Integer getMaxQuantity() {
    return maxQuantity;
  }

  public void setMaxQuantity(Integer maxQuantity) {
    this.maxQuantity = maxQuantity;
  }

  public WarehouseLocationMaintenanceLocations lastCount(LocalDateTime lastCount) {
    this.lastCount = lastCount;
    return this;
  }

   /**
   * Date of last count
   * @return lastCount
  **/
  @Valid
  @Schema(description = "Date of last count")
  public LocalDateTime getLastCount() {
    return lastCount;
  }

  public void setLastCount(LocalDateTime lastCount) {
    this.lastCount = lastCount;
  }

  public WarehouseLocationMaintenanceLocations expirationDate(LocalDateTime expirationDate) {
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Expiration Date
   * @return expirationDate
  **/
  @Valid
  @Schema(description = "Expiration Date")
  public LocalDateTime getExpirationDate() {
    return expirationDate;
  }

  public void setExpirationDate(LocalDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }

  public WarehouseLocationMaintenanceLocations receiveDate(LocalDateTime receiveDate) {
    this.receiveDate = receiveDate;
    return this;
  }

   /**
   * Receive Date
   * @return receiveDate
  **/
  @Valid
  @Schema(description = "Receive Date")
  public LocalDateTime getReceiveDate() {
    return receiveDate;
  }

  public void setReceiveDate(LocalDateTime receiveDate) {
    this.receiveDate = receiveDate;
  }

  public WarehouseLocationMaintenanceLocations uom(String uom) {
    this.uom = uom;
    return this;
  }

   /**
   * Unit of Measure
   * @return uom
  **/
  @Schema(description = "Unit of Measure")
  public String getUom() {
    return uom;
  }

  public void setUom(String uom) {
    this.uom = uom;
  }

  public WarehouseLocationMaintenanceLocations rType(String rType) {
    this.rType = rType;
    return this;
  }

   /**
   * Review Type
   * @return rType
  **/
  @Schema(description = "Review Type")
  public String getRType() {
    return rType;
  }

  public void setRType(String rType) {
    this.rType = rType;
  }

  public WarehouseLocationMaintenanceLocations oldType(String oldType) {
    this.oldType = oldType;
    return this;
  }

   /**
   * Old Type
   * @return oldType
  **/
  @Schema(description = "Old Type")
  public String getOldType() {
    return oldType;
  }

  public void setOldType(String oldType) {
    this.oldType = oldType;
  }

  public WarehouseLocationMaintenanceLocations locationKey(String locationKey) {
    this.locationKey = locationKey;
    return this;
  }

   /**
   * Location Key
   * @return locationKey
  **/
  @Schema(description = "Location Key")
  public String getLocationKey() {
    return locationKey;
  }

  public void setLocationKey(String locationKey) {
    this.locationKey = locationKey;
  }

  public WarehouseLocationMaintenanceLocations fullLocation(String fullLocation) {
    this.fullLocation = fullLocation;
    return this;
  }

   /**
   * Full Location
   * @return fullLocation
  **/
  @Schema(description = "Full Location")
  public String getFullLocation() {
    return fullLocation;
  }

  public void setFullLocation(String fullLocation) {
    this.fullLocation = fullLocation;
  }

  public WarehouseLocationMaintenanceLocations lastSortBy(String lastSortBy) {
    this.lastSortBy = lastSortBy;
    return this;
  }

   /**
   * Last Sort-By
   * @return lastSortBy
  **/
  @Schema(description = "Last Sort-By")
  public String getLastSortBy() {
    return lastSortBy;
  }

  public void setLastSortBy(String lastSortBy) {
    this.lastSortBy = lastSortBy;
  }

  public WarehouseLocationMaintenanceLocations pickLocation(String pickLocation) {
    this.pickLocation = pickLocation;
    return this;
  }

   /**
   * Pick Location
   * @return pickLocation
  **/
  @Schema(description = "Pick Location")
  public String getPickLocation() {
    return pickLocation;
  }

  public void setPickLocation(String pickLocation) {
    this.pickLocation = pickLocation;
  }

  public WarehouseLocationMaintenanceLocations prePackageQuantity(Integer prePackageQuantity) {
    this.prePackageQuantity = prePackageQuantity;
    return this;
  }

   /**
   * Pre-package quantity
   * @return prePackageQuantity
  **/
  @Schema(description = "Pre-package quantity")
  public Integer getPrePackageQuantity() {
    return prePackageQuantity;
  }

  public void setPrePackageQuantity(Integer prePackageQuantity) {
    this.prePackageQuantity = prePackageQuantity;
  }

  public WarehouseLocationMaintenanceLocations lastPutAwayDate(LocalDateTime lastPutAwayDate) {
    this.lastPutAwayDate = lastPutAwayDate;
    return this;
  }

   /**
   * Last Put Away Date
   * @return lastPutAwayDate
  **/
  @Valid
  @Schema(description = "Last Put Away Date")
  public LocalDateTime getLastPutAwayDate() {
    return lastPutAwayDate;
  }

  public void setLastPutAwayDate(LocalDateTime lastPutAwayDate) {
    this.lastPutAwayDate = lastPutAwayDate;
  }

  public WarehouseLocationMaintenanceLocations rowId(Integer rowId) {
    this.rowId = rowId;
    return this;
  }

   /**
   * Row ID
   * @return rowId
  **/
  @Schema(description = "Row ID")
  public Integer getRowId() {
    return rowId;
  }

  public void setRowId(Integer rowId) {
    this.rowId = rowId;
  }

  public WarehouseLocationMaintenanceLocations isInProcess(Boolean isInProcess) {
    this.isInProcess = isInProcess;
    return this;
  }

   /**
   * True if the location is in process.
   * @return isInProcess
  **/
  @Schema(description = "True if the location is in process.")
  public Boolean isIsInProcess() {
    return isInProcess;
  }

  public void setIsInProcess(Boolean isInProcess) {
    this.isInProcess = isInProcess;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WarehouseLocationMaintenanceLocations warehouseLocationMaintenanceLocations = (WarehouseLocationMaintenanceLocations) o;
    return Objects.equals(this.location, warehouseLocationMaintenanceLocations.location) &&
        Objects.equals(this.onHandQuantity, warehouseLocationMaintenanceLocations.onHandQuantity) &&
        Objects.equals(this.locationStatus, warehouseLocationMaintenanceLocations.locationStatus) &&
        Objects.equals(this.locationType, warehouseLocationMaintenanceLocations.locationType) &&
        Objects.equals(this.lot, warehouseLocationMaintenanceLocations.lot) &&
        Objects.equals(this.serial, warehouseLocationMaintenanceLocations.serial) &&
        Objects.equals(this.warehouseStatus, warehouseLocationMaintenanceLocations.warehouseStatus) &&
        Objects.equals(this.homeLocation, warehouseLocationMaintenanceLocations.homeLocation) &&
        Objects.equals(this.minQuantity, warehouseLocationMaintenanceLocations.minQuantity) &&
        Objects.equals(this.maxQuantity, warehouseLocationMaintenanceLocations.maxQuantity) &&
        Objects.equals(this.lastCount, warehouseLocationMaintenanceLocations.lastCount) &&
        Objects.equals(this.expirationDate, warehouseLocationMaintenanceLocations.expirationDate) &&
        Objects.equals(this.receiveDate, warehouseLocationMaintenanceLocations.receiveDate) &&
        Objects.equals(this.uom, warehouseLocationMaintenanceLocations.uom) &&
        Objects.equals(this.rType, warehouseLocationMaintenanceLocations.rType) &&
        Objects.equals(this.oldType, warehouseLocationMaintenanceLocations.oldType) &&
        Objects.equals(this.locationKey, warehouseLocationMaintenanceLocations.locationKey) &&
        Objects.equals(this.fullLocation, warehouseLocationMaintenanceLocations.fullLocation) &&
        Objects.equals(this.lastSortBy, warehouseLocationMaintenanceLocations.lastSortBy) &&
        Objects.equals(this.pickLocation, warehouseLocationMaintenanceLocations.pickLocation) &&
        Objects.equals(this.prePackageQuantity, warehouseLocationMaintenanceLocations.prePackageQuantity) &&
        Objects.equals(this.lastPutAwayDate, warehouseLocationMaintenanceLocations.lastPutAwayDate) &&
        Objects.equals(this.rowId, warehouseLocationMaintenanceLocations.rowId) &&
        Objects.equals(this.isInProcess, warehouseLocationMaintenanceLocations.isInProcess);
  }

  @Override
  public int hashCode() {
    return Objects.hash(location, onHandQuantity, locationStatus, locationType, lot, serial, warehouseStatus, homeLocation, minQuantity, maxQuantity, lastCount, expirationDate, receiveDate, uom, rType, oldType, locationKey, fullLocation, lastSortBy, pickLocation, prePackageQuantity, lastPutAwayDate, rowId, isInProcess);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WarehouseLocationMaintenanceLocations {\n");
    
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    onHandQuantity: ").append(toIndentedString(onHandQuantity)).append("\n");
    sb.append("    locationStatus: ").append(toIndentedString(locationStatus)).append("\n");
    sb.append("    locationType: ").append(toIndentedString(locationType)).append("\n");
    sb.append("    lot: ").append(toIndentedString(lot)).append("\n");
    sb.append("    serial: ").append(toIndentedString(serial)).append("\n");
    sb.append("    warehouseStatus: ").append(toIndentedString(warehouseStatus)).append("\n");
    sb.append("    homeLocation: ").append(toIndentedString(homeLocation)).append("\n");
    sb.append("    minQuantity: ").append(toIndentedString(minQuantity)).append("\n");
    sb.append("    maxQuantity: ").append(toIndentedString(maxQuantity)).append("\n");
    sb.append("    lastCount: ").append(toIndentedString(lastCount)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    receiveDate: ").append(toIndentedString(receiveDate)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    rType: ").append(toIndentedString(rType)).append("\n");
    sb.append("    oldType: ").append(toIndentedString(oldType)).append("\n");
    sb.append("    locationKey: ").append(toIndentedString(locationKey)).append("\n");
    sb.append("    fullLocation: ").append(toIndentedString(fullLocation)).append("\n");
    sb.append("    lastSortBy: ").append(toIndentedString(lastSortBy)).append("\n");
    sb.append("    pickLocation: ").append(toIndentedString(pickLocation)).append("\n");
    sb.append("    prePackageQuantity: ").append(toIndentedString(prePackageQuantity)).append("\n");
    sb.append("    lastPutAwayDate: ").append(toIndentedString(lastPutAwayDate)).append("\n");
    sb.append("    rowId: ").append(toIndentedString(rowId)).append("\n");
    sb.append("    isInProcess: ").append(toIndentedString(isInProcess)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
