/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.ProductInventoryLocation;
import com.reece.platform.eclipse.model.generated.ProductInventoryLocationDTS;
import com.reece.platform.eclipse.model.generated.ProductInventoryLocationRentals;
import com.reece.platform.eclipse.model.generated.ProductInventoryLocationSerialNumber;
import com.reece.platform.eclipse.model.generated.ProductInventoryOpenBid;
import com.reece.platform.eclipse.model.generated.ProductInventoryOpenOrder;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse ProductInventory.
 */
@Schema(description = "Object representing an Eclipse ProductInventory.")

public class ProductInventory {
  @JsonProperty("updateKey")
  private String updateKey = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("productId")
  private Integer productId = null;

  @JsonProperty("branchId")
  private String branchId = null;

  @JsonProperty("lastAvailQty")
  private Long lastAvailQty = null;

  @JsonProperty("lastAvailQtyDate")
  private LocalDateTime lastAvailQtyDate = null;

  @JsonProperty("locations")
  private List<ProductInventoryLocation> locations = null;

  @JsonProperty("openBids")
  private List<ProductInventoryOpenBid> openBids = null;

  @JsonProperty("openOrders")
  private List<ProductInventoryOpenOrder> openOrders = null;

  @JsonProperty("serialNumbers")
  private List<ProductInventoryLocationSerialNumber> serialNumbers = null;

  @JsonProperty("rentals")
  private List<ProductInventoryLocationRentals> rentals = null;

  @JsonProperty("dtsLocations")
  private List<ProductInventoryLocationDTS> dtsLocations = null;

  public ProductInventory updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update key to handle concurrency during updates within Eclipse
   * @return updateKey
  **/
  @Schema(description = "Update key to handle concurrency during updates within Eclipse")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }

  public ProductInventory id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Eclipse ID for the record
   * @return id
  **/
  @Schema(description = "Eclipse ID for the record")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProductInventory productId(Integer productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Desc: The ProductInventory ProductId  File: PROD.DYNAM  Attr: 0
   * @return productId
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The ProductInventory ProductId  File: PROD.DYNAM  Attr: 0")
  public Integer getProductId() {
    return productId;
  }

  public void setProductId(Integer productId) {
    this.productId = productId;
  }

  public ProductInventory branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Desc: The ProductInventory BranchId  File: PROD.DYNAM  Attr: 0
   * @return branchId
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The ProductInventory BranchId  File: PROD.DYNAM  Attr: 0")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public ProductInventory lastAvailQty(Long lastAvailQty) {
    this.lastAvailQty = lastAvailQty;
    return this;
  }

   /**
   * Desc: The ProductInventory LastAvailQty  File: PROD.DYNAM  Attr: 29,1
   * @return lastAvailQty
  **/
  @Schema(description = "Desc: The ProductInventory LastAvailQty  File: PROD.DYNAM  Attr: 29,1")
  public Long getLastAvailQty() {
    return lastAvailQty;
  }

  public void setLastAvailQty(Long lastAvailQty) {
    this.lastAvailQty = lastAvailQty;
  }

  public ProductInventory lastAvailQtyDate(LocalDateTime lastAvailQtyDate) {
    this.lastAvailQtyDate = lastAvailQtyDate;
    return this;
  }

   /**
   * Desc: The ProductInventory LastAvailQtyDate  File: PROD.DYNAM  Attr: 29,2
   * @return lastAvailQtyDate
  **/
  @Valid
  @Schema(description = "Desc: The ProductInventory LastAvailQtyDate  File: PROD.DYNAM  Attr: 29,2")
  public LocalDateTime getLastAvailQtyDate() {
    return lastAvailQtyDate;
  }

  public void setLastAvailQtyDate(LocalDateTime lastAvailQtyDate) {
    this.lastAvailQtyDate = lastAvailQtyDate;
  }

  public ProductInventory locations(List<ProductInventoryLocation> locations) {
    this.locations = locations;
    return this;
  }

  public ProductInventory addLocationsItem(ProductInventoryLocation locationsItem) {
    if (this.locations == null) {
      this.locations = new ArrayList<>();
    }
    this.locations.add(locationsItem);
    return this;
  }

   /**
   * A list of ProductInventory Locations
   * @return locations
  **/
  @Valid
  @Schema(description = "A list of ProductInventory Locations")
  public List<ProductInventoryLocation> getLocations() {
    return locations;
  }

  public void setLocations(List<ProductInventoryLocation> locations) {
    this.locations = locations;
  }

  public ProductInventory openBids(List<ProductInventoryOpenBid> openBids) {
    this.openBids = openBids;
    return this;
  }

  public ProductInventory addOpenBidsItem(ProductInventoryOpenBid openBidsItem) {
    if (this.openBids == null) {
      this.openBids = new ArrayList<>();
    }
    this.openBids.add(openBidsItem);
    return this;
  }

   /**
   * A list of ProductInventory OpenBids
   * @return openBids
  **/
  @Valid
  @Schema(description = "A list of ProductInventory OpenBids")
  public List<ProductInventoryOpenBid> getOpenBids() {
    return openBids;
  }

  public void setOpenBids(List<ProductInventoryOpenBid> openBids) {
    this.openBids = openBids;
  }

  public ProductInventory openOrders(List<ProductInventoryOpenOrder> openOrders) {
    this.openOrders = openOrders;
    return this;
  }

  public ProductInventory addOpenOrdersItem(ProductInventoryOpenOrder openOrdersItem) {
    if (this.openOrders == null) {
      this.openOrders = new ArrayList<>();
    }
    this.openOrders.add(openOrdersItem);
    return this;
  }

   /**
   * A list of ProductInventory OpenOrders
   * @return openOrders
  **/
  @Valid
  @Schema(description = "A list of ProductInventory OpenOrders")
  public List<ProductInventoryOpenOrder> getOpenOrders() {
    return openOrders;
  }

  public void setOpenOrders(List<ProductInventoryOpenOrder> openOrders) {
    this.openOrders = openOrders;
  }

  public ProductInventory serialNumbers(List<ProductInventoryLocationSerialNumber> serialNumbers) {
    this.serialNumbers = serialNumbers;
    return this;
  }

  public ProductInventory addSerialNumbersItem(ProductInventoryLocationSerialNumber serialNumbersItem) {
    if (this.serialNumbers == null) {
      this.serialNumbers = new ArrayList<>();
    }
    this.serialNumbers.add(serialNumbersItem);
    return this;
  }

   /**
   * A list of ProductInventory SerialNumbers
   * @return serialNumbers
  **/
  @Valid
  @Schema(description = "A list of ProductInventory SerialNumbers")
  public List<ProductInventoryLocationSerialNumber> getSerialNumbers() {
    return serialNumbers;
  }

  public void setSerialNumbers(List<ProductInventoryLocationSerialNumber> serialNumbers) {
    this.serialNumbers = serialNumbers;
  }

  public ProductInventory rentals(List<ProductInventoryLocationRentals> rentals) {
    this.rentals = rentals;
    return this;
  }

  public ProductInventory addRentalsItem(ProductInventoryLocationRentals rentalsItem) {
    if (this.rentals == null) {
      this.rentals = new ArrayList<>();
    }
    this.rentals.add(rentalsItem);
    return this;
  }

   /**
   * A list of ProductInventory Rentals
   * @return rentals
  **/
  @Valid
  @Schema(description = "A list of ProductInventory Rentals")
  public List<ProductInventoryLocationRentals> getRentals() {
    return rentals;
  }

  public void setRentals(List<ProductInventoryLocationRentals> rentals) {
    this.rentals = rentals;
  }

  public ProductInventory dtsLocations(List<ProductInventoryLocationDTS> dtsLocations) {
    this.dtsLocations = dtsLocations;
    return this;
  }

  public ProductInventory addDtsLocationsItem(ProductInventoryLocationDTS dtsLocationsItem) {
    if (this.dtsLocations == null) {
      this.dtsLocations = new ArrayList<>();
    }
    this.dtsLocations.add(dtsLocationsItem);
    return this;
  }

   /**
   * A list of ProductInventory DTSLocations
   * @return dtsLocations
  **/
  @Valid
  @Schema(description = "A list of ProductInventory DTSLocations")
  public List<ProductInventoryLocationDTS> getDtsLocations() {
    return dtsLocations;
  }

  public void setDtsLocations(List<ProductInventoryLocationDTS> dtsLocations) {
    this.dtsLocations = dtsLocations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductInventory productInventory = (ProductInventory) o;
    return Objects.equals(this.updateKey, productInventory.updateKey) &&
        Objects.equals(this.id, productInventory.id) &&
        Objects.equals(this.productId, productInventory.productId) &&
        Objects.equals(this.branchId, productInventory.branchId) &&
        Objects.equals(this.lastAvailQty, productInventory.lastAvailQty) &&
        Objects.equals(this.lastAvailQtyDate, productInventory.lastAvailQtyDate) &&
        Objects.equals(this.locations, productInventory.locations) &&
        Objects.equals(this.openBids, productInventory.openBids) &&
        Objects.equals(this.openOrders, productInventory.openOrders) &&
        Objects.equals(this.serialNumbers, productInventory.serialNumbers) &&
        Objects.equals(this.rentals, productInventory.rentals) &&
        Objects.equals(this.dtsLocations, productInventory.dtsLocations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateKey, id, productId, branchId, lastAvailQty, lastAvailQtyDate, locations, openBids, openOrders, serialNumbers, rentals, dtsLocations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductInventory {\n");
    
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    lastAvailQty: ").append(toIndentedString(lastAvailQty)).append("\n");
    sb.append("    lastAvailQtyDate: ").append(toIndentedString(lastAvailQtyDate)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    openBids: ").append(toIndentedString(openBids)).append("\n");
    sb.append("    openOrders: ").append(toIndentedString(openOrders)).append("\n");
    sb.append("    serialNumbers: ").append(toIndentedString(serialNumbers)).append("\n");
    sb.append("    rentals: ").append(toIndentedString(rentals)).append("\n");
    sb.append("    dtsLocations: ").append(toIndentedString(dtsLocations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
