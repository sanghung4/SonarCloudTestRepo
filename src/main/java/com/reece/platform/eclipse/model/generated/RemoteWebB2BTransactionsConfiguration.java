/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.RemoteWebB2BPostURLParameters;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing the B2B Transactions configurations.
 */
@Schema(description = "Object representing the B2B Transactions configurations.")

public class RemoteWebB2BTransactionsConfiguration {
  @JsonProperty("baseURL")
  private String baseURL = null;

  @JsonProperty("partner")
  private String partner = null;

  @JsonProperty("urlParameters")
  private List<RemoteWebB2BPostURLParameters> urlParameters = null;

  public RemoteWebB2BTransactionsConfiguration baseURL(String baseURL) {
    this.baseURL = baseURL;
    return this;
  }

   /**
   * Desc: Tx Base URL  File: ENTITY  Attr: 229,x,1
   * @return baseURL
  **/
  @Schema(description = "Desc: Tx Base URL  File: ENTITY  Attr: 229,x,1")
  public String getBaseURL() {
    return baseURL;
  }

  public void setBaseURL(String baseURL) {
    this.baseURL = baseURL;
  }

  public RemoteWebB2BTransactionsConfiguration partner(String partner) {
    this.partner = partner;
    return this;
  }

   /**
   * Desc: Tx Partner  File: ENTITY  Attr: 229,x,2
   * @return partner
  **/
  @Schema(description = "Desc: Tx Partner  File: ENTITY  Attr: 229,x,2")
  public String getPartner() {
    return partner;
  }

  public void setPartner(String partner) {
    this.partner = partner;
  }

  public RemoteWebB2BTransactionsConfiguration urlParameters(List<RemoteWebB2BPostURLParameters> urlParameters) {
    this.urlParameters = urlParameters;
    return this;
  }

  public RemoteWebB2BTransactionsConfiguration addUrlParametersItem(RemoteWebB2BPostURLParameters urlParametersItem) {
    if (this.urlParameters == null) {
      this.urlParameters = new ArrayList<>();
    }
    this.urlParameters.add(urlParametersItem);
    return this;
  }

   /**
   * List of URL Parameters
   * @return urlParameters
  **/
  @Valid
  @Schema(description = "List of URL Parameters")
  public List<RemoteWebB2BPostURLParameters> getUrlParameters() {
    return urlParameters;
  }

  public void setUrlParameters(List<RemoteWebB2BPostURLParameters> urlParameters) {
    this.urlParameters = urlParameters;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RemoteWebB2BTransactionsConfiguration remoteWebB2BTransactionsConfiguration = (RemoteWebB2BTransactionsConfiguration) o;
    return Objects.equals(this.baseURL, remoteWebB2BTransactionsConfiguration.baseURL) &&
        Objects.equals(this.partner, remoteWebB2BTransactionsConfiguration.partner) &&
        Objects.equals(this.urlParameters, remoteWebB2BTransactionsConfiguration.urlParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseURL, partner, urlParameters);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RemoteWebB2BTransactionsConfiguration {\n");
    
    sb.append("    baseURL: ").append(toIndentedString(baseURL)).append("\n");
    sb.append("    partner: ").append(toIndentedString(partner)).append("\n");
    sb.append("    urlParameters: ").append(toIndentedString(urlParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
