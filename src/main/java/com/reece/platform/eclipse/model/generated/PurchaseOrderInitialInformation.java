/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.PurchaseOrderLineInitialInformation;
import com.reece.platform.eclipse.model.generated.PurchaseOrderStatusType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse PurchaseOrderInitialInformation.
 */
@Schema(description = "Object representing an Eclipse PurchaseOrderInitialInformation.")

public class PurchaseOrderInitialInformation {
  @JsonProperty("priceBranch")
  private String priceBranch = null;

  @JsonProperty("receiveBranch")
  private String receiveBranch = null;

  @JsonProperty("payToVendor")
  private String payToVendor = null;

  @JsonProperty("shipFromVendor")
  private String shipFromVendor = null;

  @JsonProperty("orderStatus")
  private PurchaseOrderStatusType orderStatus = null;

  @JsonProperty("receiveDate")
  private LocalDateTime receiveDate = null;

  @JsonProperty("requiredDate")
  private LocalDateTime requiredDate = null;

  @JsonProperty("shipVia")
  private String shipVia = null;

  @JsonProperty("orderId")
  private String orderId = null;

  @JsonProperty("jobBidId")
  private String jobBidId = null;

  @JsonProperty("orderedWith")
  private String orderedWith = null;

  @JsonProperty("writer")
  private String writer = null;

  @JsonProperty("telephone")
  private String telephone = null;

  @JsonProperty("email")
  private String email = null;

  @JsonProperty("street1")
  private String street1 = null;

  @JsonProperty("street2")
  private String street2 = null;

  @JsonProperty("city")
  private String city = null;

  @JsonProperty("state")
  private String state = null;

  @JsonProperty("postalCode")
  private String postalCode = null;

  @JsonProperty("country")
  private String country = null;

  @JsonProperty("internalNotes")
  private String internalNotes = null;

  @JsonProperty("vendorInstructions")
  private String vendorInstructions = null;

  @JsonProperty("paymentTermsCode")
  private String paymentTermsCode = null;

  @JsonProperty("freightTermsCode")
  private String freightTermsCode = null;

  @JsonProperty("freightCharges")
  private Double freightCharges = null;

  @JsonProperty("handlingCharges")
  private Double handlingCharges = null;

  @JsonProperty("isConsignmentPO")
  private Boolean isConsignmentPO = null;

  @JsonProperty("lines")
  private List<PurchaseOrderLineInitialInformation> lines = null;

  public PurchaseOrderInitialInformation priceBranch(String priceBranch) {
    this.priceBranch = priceBranch;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation PriceBranch
   * @return priceBranch
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The PurchaseOrderInitialInformation PriceBranch")
  public String getPriceBranch() {
    return priceBranch;
  }

  public void setPriceBranch(String priceBranch) {
    this.priceBranch = priceBranch;
  }

  public PurchaseOrderInitialInformation receiveBranch(String receiveBranch) {
    this.receiveBranch = receiveBranch;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation ReceiveBranch
   * @return receiveBranch
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The PurchaseOrderInitialInformation ReceiveBranch")
  public String getReceiveBranch() {
    return receiveBranch;
  }

  public void setReceiveBranch(String receiveBranch) {
    this.receiveBranch = receiveBranch;
  }

  public PurchaseOrderInitialInformation payToVendor(String payToVendor) {
    this.payToVendor = payToVendor;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation PayToVendor
   * @return payToVendor
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The PurchaseOrderInitialInformation PayToVendor")
  public String getPayToVendor() {
    return payToVendor;
  }

  public void setPayToVendor(String payToVendor) {
    this.payToVendor = payToVendor;
  }

  public PurchaseOrderInitialInformation shipFromVendor(String shipFromVendor) {
    this.shipFromVendor = shipFromVendor;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation ShipFromVendor
   * @return shipFromVendor
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The PurchaseOrderInitialInformation ShipFromVendor")
  public String getShipFromVendor() {
    return shipFromVendor;
  }

  public void setShipFromVendor(String shipFromVendor) {
    this.shipFromVendor = shipFromVendor;
  }

  public PurchaseOrderInitialInformation orderStatus(PurchaseOrderStatusType orderStatus) {
    this.orderStatus = orderStatus;
    return this;
  }

   /**
   * Get orderStatus
   * @return orderStatus
  **/
  @Valid
  @Schema(description = "")
  public PurchaseOrderStatusType getOrderStatus() {
    return orderStatus;
  }

  public void setOrderStatus(PurchaseOrderStatusType orderStatus) {
    this.orderStatus = orderStatus;
  }

  public PurchaseOrderInitialInformation receiveDate(LocalDateTime receiveDate) {
    this.receiveDate = receiveDate;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation ReceiveDate
   * @return receiveDate
  **/
  @Valid
  @Schema(description = "Desc: The PurchaseOrderInitialInformation ReceiveDate")
  public LocalDateTime getReceiveDate() {
    return receiveDate;
  }

  public void setReceiveDate(LocalDateTime receiveDate) {
    this.receiveDate = receiveDate;
  }

  public PurchaseOrderInitialInformation requiredDate(LocalDateTime requiredDate) {
    this.requiredDate = requiredDate;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation RequiredDate
   * @return requiredDate
  **/
  @Valid
  @Schema(description = "Desc: The PurchaseOrderInitialInformation RequiredDate")
  public LocalDateTime getRequiredDate() {
    return requiredDate;
  }

  public void setRequiredDate(LocalDateTime requiredDate) {
    this.requiredDate = requiredDate;
  }

  public PurchaseOrderInitialInformation shipVia(String shipVia) {
    this.shipVia = shipVia;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation ShipVia
   * @return shipVia
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation ShipVia")
  public String getShipVia() {
    return shipVia;
  }

  public void setShipVia(String shipVia) {
    this.shipVia = shipVia;
  }

  public PurchaseOrderInitialInformation orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation OrderId
   * @return orderId
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation OrderId")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public PurchaseOrderInitialInformation jobBidId(String jobBidId) {
    this.jobBidId = jobBidId;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation JobBidId
   * @return jobBidId
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation JobBidId")
  public String getJobBidId() {
    return jobBidId;
  }

  public void setJobBidId(String jobBidId) {
    this.jobBidId = jobBidId;
  }

  public PurchaseOrderInitialInformation orderedWith(String orderedWith) {
    this.orderedWith = orderedWith;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation OrderedWith
   * @return orderedWith
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation OrderedWith")
  public String getOrderedWith() {
    return orderedWith;
  }

  public void setOrderedWith(String orderedWith) {
    this.orderedWith = orderedWith;
  }

  public PurchaseOrderInitialInformation writer(String writer) {
    this.writer = writer;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation Writer
   * @return writer
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation Writer")
  public String getWriter() {
    return writer;
  }

  public void setWriter(String writer) {
    this.writer = writer;
  }

  public PurchaseOrderInitialInformation telephone(String telephone) {
    this.telephone = telephone;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation Telephone
   * @return telephone
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation Telephone")
  public String getTelephone() {
    return telephone;
  }

  public void setTelephone(String telephone) {
    this.telephone = telephone;
  }

  public PurchaseOrderInitialInformation email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation Email
   * @return email
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation Email")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public PurchaseOrderInitialInformation street1(String street1) {
    this.street1 = street1;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation Street1
   * @return street1
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation Street1")
  public String getStreet1() {
    return street1;
  }

  public void setStreet1(String street1) {
    this.street1 = street1;
  }

  public PurchaseOrderInitialInformation street2(String street2) {
    this.street2 = street2;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation Street2
   * @return street2
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation Street2")
  public String getStreet2() {
    return street2;
  }

  public void setStreet2(String street2) {
    this.street2 = street2;
  }

  public PurchaseOrderInitialInformation city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation City
   * @return city
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation City")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public PurchaseOrderInitialInformation state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation State
   * @return state
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation State")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public PurchaseOrderInitialInformation postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation PostalCode
   * @return postalCode
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation PostalCode")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public PurchaseOrderInitialInformation country(String country) {
    this.country = country;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation Country
   * @return country
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation Country")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public PurchaseOrderInitialInformation internalNotes(String internalNotes) {
    this.internalNotes = internalNotes;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation InternalNotes
   * @return internalNotes
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation InternalNotes")
  public String getInternalNotes() {
    return internalNotes;
  }

  public void setInternalNotes(String internalNotes) {
    this.internalNotes = internalNotes;
  }

  public PurchaseOrderInitialInformation vendorInstructions(String vendorInstructions) {
    this.vendorInstructions = vendorInstructions;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation VendorInstructions
   * @return vendorInstructions
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation VendorInstructions")
  public String getVendorInstructions() {
    return vendorInstructions;
  }

  public void setVendorInstructions(String vendorInstructions) {
    this.vendorInstructions = vendorInstructions;
  }

  public PurchaseOrderInitialInformation paymentTermsCode(String paymentTermsCode) {
    this.paymentTermsCode = paymentTermsCode;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation PaymentTermsCode
   * @return paymentTermsCode
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation PaymentTermsCode")
  public String getPaymentTermsCode() {
    return paymentTermsCode;
  }

  public void setPaymentTermsCode(String paymentTermsCode) {
    this.paymentTermsCode = paymentTermsCode;
  }

  public PurchaseOrderInitialInformation freightTermsCode(String freightTermsCode) {
    this.freightTermsCode = freightTermsCode;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation FreightTermsCode
   * @return freightTermsCode
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation FreightTermsCode")
  public String getFreightTermsCode() {
    return freightTermsCode;
  }

  public void setFreightTermsCode(String freightTermsCode) {
    this.freightTermsCode = freightTermsCode;
  }

  public PurchaseOrderInitialInformation freightCharges(Double freightCharges) {
    this.freightCharges = freightCharges;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation FreightCharges
   * @return freightCharges
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation FreightCharges")
  public Double getFreightCharges() {
    return freightCharges;
  }

  public void setFreightCharges(Double freightCharges) {
    this.freightCharges = freightCharges;
  }

  public PurchaseOrderInitialInformation handlingCharges(Double handlingCharges) {
    this.handlingCharges = handlingCharges;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation HandlingCharges
   * @return handlingCharges
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation HandlingCharges")
  public Double getHandlingCharges() {
    return handlingCharges;
  }

  public void setHandlingCharges(Double handlingCharges) {
    this.handlingCharges = handlingCharges;
  }

  public PurchaseOrderInitialInformation isConsignmentPO(Boolean isConsignmentPO) {
    this.isConsignmentPO = isConsignmentPO;
    return this;
  }

   /**
   * Desc: The PurchaseOrderInitialInformation IsConsignmentPO
   * @return isConsignmentPO
  **/
  @Schema(description = "Desc: The PurchaseOrderInitialInformation IsConsignmentPO")
  public Boolean isIsConsignmentPO() {
    return isConsignmentPO;
  }

  public void setIsConsignmentPO(Boolean isConsignmentPO) {
    this.isConsignmentPO = isConsignmentPO;
  }

  public PurchaseOrderInitialInformation lines(List<PurchaseOrderLineInitialInformation> lines) {
    this.lines = lines;
    return this;
  }

  public PurchaseOrderInitialInformation addLinesItem(PurchaseOrderLineInitialInformation linesItem) {
    if (this.lines == null) {
      this.lines = new ArrayList<>();
    }
    this.lines.add(linesItem);
    return this;
  }

   /**
   * A list of PurchaseOrder Lines
   * @return lines
  **/
  @Valid
  @Schema(description = "A list of PurchaseOrder Lines")
  public List<PurchaseOrderLineInitialInformation> getLines() {
    return lines;
  }

  public void setLines(List<PurchaseOrderLineInitialInformation> lines) {
    this.lines = lines;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PurchaseOrderInitialInformation purchaseOrderInitialInformation = (PurchaseOrderInitialInformation) o;
    return Objects.equals(this.priceBranch, purchaseOrderInitialInformation.priceBranch) &&
        Objects.equals(this.receiveBranch, purchaseOrderInitialInformation.receiveBranch) &&
        Objects.equals(this.payToVendor, purchaseOrderInitialInformation.payToVendor) &&
        Objects.equals(this.shipFromVendor, purchaseOrderInitialInformation.shipFromVendor) &&
        Objects.equals(this.orderStatus, purchaseOrderInitialInformation.orderStatus) &&
        Objects.equals(this.receiveDate, purchaseOrderInitialInformation.receiveDate) &&
        Objects.equals(this.requiredDate, purchaseOrderInitialInformation.requiredDate) &&
        Objects.equals(this.shipVia, purchaseOrderInitialInformation.shipVia) &&
        Objects.equals(this.orderId, purchaseOrderInitialInformation.orderId) &&
        Objects.equals(this.jobBidId, purchaseOrderInitialInformation.jobBidId) &&
        Objects.equals(this.orderedWith, purchaseOrderInitialInformation.orderedWith) &&
        Objects.equals(this.writer, purchaseOrderInitialInformation.writer) &&
        Objects.equals(this.telephone, purchaseOrderInitialInformation.telephone) &&
        Objects.equals(this.email, purchaseOrderInitialInformation.email) &&
        Objects.equals(this.street1, purchaseOrderInitialInformation.street1) &&
        Objects.equals(this.street2, purchaseOrderInitialInformation.street2) &&
        Objects.equals(this.city, purchaseOrderInitialInformation.city) &&
        Objects.equals(this.state, purchaseOrderInitialInformation.state) &&
        Objects.equals(this.postalCode, purchaseOrderInitialInformation.postalCode) &&
        Objects.equals(this.country, purchaseOrderInitialInformation.country) &&
        Objects.equals(this.internalNotes, purchaseOrderInitialInformation.internalNotes) &&
        Objects.equals(this.vendorInstructions, purchaseOrderInitialInformation.vendorInstructions) &&
        Objects.equals(this.paymentTermsCode, purchaseOrderInitialInformation.paymentTermsCode) &&
        Objects.equals(this.freightTermsCode, purchaseOrderInitialInformation.freightTermsCode) &&
        Objects.equals(this.freightCharges, purchaseOrderInitialInformation.freightCharges) &&
        Objects.equals(this.handlingCharges, purchaseOrderInitialInformation.handlingCharges) &&
        Objects.equals(this.isConsignmentPO, purchaseOrderInitialInformation.isConsignmentPO) &&
        Objects.equals(this.lines, purchaseOrderInitialInformation.lines);
  }

  @Override
  public int hashCode() {
    return Objects.hash(priceBranch, receiveBranch, payToVendor, shipFromVendor, orderStatus, receiveDate, requiredDate, shipVia, orderId, jobBidId, orderedWith, writer, telephone, email, street1, street2, city, state, postalCode, country, internalNotes, vendorInstructions, paymentTermsCode, freightTermsCode, freightCharges, handlingCharges, isConsignmentPO, lines);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PurchaseOrderInitialInformation {\n");
    
    sb.append("    priceBranch: ").append(toIndentedString(priceBranch)).append("\n");
    sb.append("    receiveBranch: ").append(toIndentedString(receiveBranch)).append("\n");
    sb.append("    payToVendor: ").append(toIndentedString(payToVendor)).append("\n");
    sb.append("    shipFromVendor: ").append(toIndentedString(shipFromVendor)).append("\n");
    sb.append("    orderStatus: ").append(toIndentedString(orderStatus)).append("\n");
    sb.append("    receiveDate: ").append(toIndentedString(receiveDate)).append("\n");
    sb.append("    requiredDate: ").append(toIndentedString(requiredDate)).append("\n");
    sb.append("    shipVia: ").append(toIndentedString(shipVia)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    jobBidId: ").append(toIndentedString(jobBidId)).append("\n");
    sb.append("    orderedWith: ").append(toIndentedString(orderedWith)).append("\n");
    sb.append("    writer: ").append(toIndentedString(writer)).append("\n");
    sb.append("    telephone: ").append(toIndentedString(telephone)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    street1: ").append(toIndentedString(street1)).append("\n");
    sb.append("    street2: ").append(toIndentedString(street2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    internalNotes: ").append(toIndentedString(internalNotes)).append("\n");
    sb.append("    vendorInstructions: ").append(toIndentedString(vendorInstructions)).append("\n");
    sb.append("    paymentTermsCode: ").append(toIndentedString(paymentTermsCode)).append("\n");
    sb.append("    freightTermsCode: ").append(toIndentedString(freightTermsCode)).append("\n");
    sb.append("    freightCharges: ").append(toIndentedString(freightCharges)).append("\n");
    sb.append("    handlingCharges: ").append(toIndentedString(handlingCharges)).append("\n");
    sb.append("    isConsignmentPO: ").append(toIndentedString(isConsignmentPO)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
