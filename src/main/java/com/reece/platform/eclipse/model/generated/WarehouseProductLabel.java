/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.WarehouseBranchList;
import com.reece.platform.eclipse.model.generated.WarehousePriceLineList;
import com.reece.platform.eclipse.model.generated.WarehouseProductList;
import com.reece.platform.eclipse.model.generated.WarehouseStatusList;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Warehouse RF Labels Print Task
 */
@Schema(description = "Warehouse RF Labels Print Task")

public class WarehouseProductLabel {
  @JsonProperty("productList")
  private List<WarehouseProductList> productList = null;

  @JsonProperty("branchList")
  private List<WarehouseBranchList> branchList = null;

  @JsonProperty("priceLineList")
  private List<WarehousePriceLineList> priceLineList = null;

  @JsonProperty("printLocation")
  private String printLocation = null;

  @JsonProperty("productStatusList")
  private List<WarehouseStatusList> productStatusList = null;

  @JsonProperty("serialNumber")
  private String serialNumber = null;

  @JsonProperty("labelFormatName")
  private String labelFormatName = null;

  @JsonProperty("labelQuantity")
  private Integer labelQuantity = null;

  @JsonProperty("confirmPrintFlag")
  private Boolean confirmPrintFlag = null;

  public WarehouseProductLabel productList(List<WarehouseProductList> productList) {
    this.productList = productList;
    return this;
  }

  public WarehouseProductLabel addProductListItem(WarehouseProductList productListItem) {
    if (this.productList == null) {
      this.productList = new ArrayList<>();
    }
    this.productList.add(productListItem);
    return this;
  }

   /**
   * List of orders to print
   * @return productList
  **/
  @Valid
  @Schema(description = "List of orders to print")
  public List<WarehouseProductList> getProductList() {
    return productList;
  }

  public void setProductList(List<WarehouseProductList> productList) {
    this.productList = productList;
  }

  public WarehouseProductLabel branchList(List<WarehouseBranchList> branchList) {
    this.branchList = branchList;
    return this;
  }

  public WarehouseProductLabel addBranchListItem(WarehouseBranchList branchListItem) {
    if (this.branchList == null) {
      this.branchList = new ArrayList<>();
    }
    this.branchList.add(branchListItem);
    return this;
  }

   /**
   * List of Branches to print
   * @return branchList
  **/
  @Valid
  @Schema(description = "List of Branches to print")
  public List<WarehouseBranchList> getBranchList() {
    return branchList;
  }

  public void setBranchList(List<WarehouseBranchList> branchList) {
    this.branchList = branchList;
  }

  public WarehouseProductLabel priceLineList(List<WarehousePriceLineList> priceLineList) {
    this.priceLineList = priceLineList;
    return this;
  }

  public WarehouseProductLabel addPriceLineListItem(WarehousePriceLineList priceLineListItem) {
    if (this.priceLineList == null) {
      this.priceLineList = new ArrayList<>();
    }
    this.priceLineList.add(priceLineListItem);
    return this;
  }

   /**
   * List of Price Lines to print
   * @return priceLineList
  **/
  @Valid
  @Schema(description = "List of Price Lines to print")
  public List<WarehousePriceLineList> getPriceLineList() {
    return priceLineList;
  }

  public void setPriceLineList(List<WarehousePriceLineList> priceLineList) {
    this.priceLineList = priceLineList;
  }

  public WarehouseProductLabel printLocation(String printLocation) {
    this.printLocation = printLocation;
    return this;
  }

   /**
   * Location
   * @return printLocation
  **/
  @Schema(description = "Location")
  public String getPrintLocation() {
    return printLocation;
  }

  public void setPrintLocation(String printLocation) {
    this.printLocation = printLocation;
  }

  public WarehouseProductLabel productStatusList(List<WarehouseStatusList> productStatusList) {
    this.productStatusList = productStatusList;
    return this;
  }

  public WarehouseProductLabel addProductStatusListItem(WarehouseStatusList productStatusListItem) {
    if (this.productStatusList == null) {
      this.productStatusList = new ArrayList<>();
    }
    this.productStatusList.add(productStatusListItem);
    return this;
  }

   /**
   * List of Statuses
   * @return productStatusList
  **/
  @Valid
  @Schema(description = "List of Statuses")
  public List<WarehouseStatusList> getProductStatusList() {
    return productStatusList;
  }

  public void setProductStatusList(List<WarehouseStatusList> productStatusList) {
    this.productStatusList = productStatusList;
  }

  public WarehouseProductLabel serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * Serial Number
   * @return serialNumber
  **/
  @Schema(description = "Serial Number")
  public String getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }

  public WarehouseProductLabel labelFormatName(String labelFormatName) {
    this.labelFormatName = labelFormatName;
    return this;
  }

   /**
   * Label format name
   * @return labelFormatName
  **/
  @Schema(description = "Label format name")
  public String getLabelFormatName() {
    return labelFormatName;
  }

  public void setLabelFormatName(String labelFormatName) {
    this.labelFormatName = labelFormatName;
  }

  public WarehouseProductLabel labelQuantity(Integer labelQuantity) {
    this.labelQuantity = labelQuantity;
    return this;
  }

   /**
   * Label quantity count
   * minimum: 1
   * maximum: 2147483647
   * @return labelQuantity
  **/
  @NotNull
 @Min(1) @Max(2147483647)  @Schema(required = true, description = "Label quantity count")
  public Integer getLabelQuantity() {
    return labelQuantity;
  }

  public void setLabelQuantity(Integer labelQuantity) {
    this.labelQuantity = labelQuantity;
  }

  public WarehouseProductLabel confirmPrintFlag(Boolean confirmPrintFlag) {
    this.confirmPrintFlag = confirmPrintFlag;
    return this;
  }

   /**
   * If true, confirm \&quot;Continue\&quot; to prompt message
   * @return confirmPrintFlag
  **/
  @Schema(description = "If true, confirm \"Continue\" to prompt message")
  public Boolean isConfirmPrintFlag() {
    return confirmPrintFlag;
  }

  public void setConfirmPrintFlag(Boolean confirmPrintFlag) {
    this.confirmPrintFlag = confirmPrintFlag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WarehouseProductLabel warehouseProductLabel = (WarehouseProductLabel) o;
    return Objects.equals(this.productList, warehouseProductLabel.productList) &&
        Objects.equals(this.branchList, warehouseProductLabel.branchList) &&
        Objects.equals(this.priceLineList, warehouseProductLabel.priceLineList) &&
        Objects.equals(this.printLocation, warehouseProductLabel.printLocation) &&
        Objects.equals(this.productStatusList, warehouseProductLabel.productStatusList) &&
        Objects.equals(this.serialNumber, warehouseProductLabel.serialNumber) &&
        Objects.equals(this.labelFormatName, warehouseProductLabel.labelFormatName) &&
        Objects.equals(this.labelQuantity, warehouseProductLabel.labelQuantity) &&
        Objects.equals(this.confirmPrintFlag, warehouseProductLabel.confirmPrintFlag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productList, branchList, priceLineList, printLocation, productStatusList, serialNumber, labelFormatName, labelQuantity, confirmPrintFlag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WarehouseProductLabel {\n");
    
    sb.append("    productList: ").append(toIndentedString(productList)).append("\n");
    sb.append("    branchList: ").append(toIndentedString(branchList)).append("\n");
    sb.append("    priceLineList: ").append(toIndentedString(priceLineList)).append("\n");
    sb.append("    printLocation: ").append(toIndentedString(printLocation)).append("\n");
    sb.append("    productStatusList: ").append(toIndentedString(productStatusList)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    labelFormatName: ").append(toIndentedString(labelFormatName)).append("\n");
    sb.append("    labelQuantity: ").append(toIndentedString(labelQuantity)).append("\n");
    sb.append("    confirmPrintFlag: ").append(toIndentedString(confirmPrintFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
