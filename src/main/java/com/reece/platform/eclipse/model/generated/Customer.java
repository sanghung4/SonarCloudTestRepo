/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.DTO.MoneyDTO;
import com.reece.platform.eclipse.model.generated.BackOrderStatusType;
import com.reece.platform.eclipse.model.generated.CreditControlParameter;
import com.reece.platform.eclipse.model.generated.CustomerAccessList;
import com.reece.platform.eclipse.model.generated.CustomerAllowedPoNumber;
import com.reece.platform.eclipse.model.generated.CustomerAllowedPriceLine;
import com.reece.platform.eclipse.model.generated.CustomerAlternateShippingAddress;
import com.reece.platform.eclipse.model.generated.CustomerCreditAuthPersonnel;
import com.reece.platform.eclipse.model.generated.CustomerCreditEft;
import com.reece.platform.eclipse.model.generated.CustomerEdiContractUploadList;
import com.reece.platform.eclipse.model.generated.CustomerEmail;
import com.reece.platform.eclipse.model.generated.CustomerFreightCarrierInfo;
import com.reece.platform.eclipse.model.generated.CustomerOrderEntryPrompt;
import com.reece.platform.eclipse.model.generated.CustomerPhone;
import com.reece.platform.eclipse.model.generated.CustomerPriceClassOverride;
import com.reece.platform.eclipse.model.generated.CustomerPricingContractCustomerList;
import com.reece.platform.eclipse.model.generated.CustomerProductCertification;
import com.reece.platform.eclipse.model.generated.CustomerProductZone;
import com.reece.platform.eclipse.model.generated.CustomerRebate;
import com.reece.platform.eclipse.model.generated.CustomerRemoteChangeOrderMessageUser;
import com.reece.platform.eclipse.model.generated.CustomerRemoteEcommerce;
import com.reece.platform.eclipse.model.generated.CustomerRemoteErrorMessageUser;
import com.reece.platform.eclipse.model.generated.CustomerRemoteLoginMessageUser;
import com.reece.platform.eclipse.model.generated.CustomerRemoteNewOrderMessageUser;
import com.reece.platform.eclipse.model.generated.CustomerRemoteReviewQueueUser;
import com.reece.platform.eclipse.model.generated.CustomerRemoteValidMessageUser;
import com.reece.platform.eclipse.model.generated.CustomerRemoteValidOrderStatus;
import com.reece.platform.eclipse.model.generated.CustomerRemoteValidShipVia;
import com.reece.platform.eclipse.model.generated.CustomerRestrictedVendorList;
import com.reece.platform.eclipse.model.generated.CustomerSalesOrderEntryPrinterDocument;
import com.reece.platform.eclipse.model.generated.CustomerShipToList;
import com.reece.platform.eclipse.model.generated.CustomerStagingLocation;
import com.reece.platform.eclipse.model.generated.CustomerTaxExceptionGroup;
import com.reece.platform.eclipse.model.generated.CustomerTaxExemptInfo;
import com.reece.platform.eclipse.model.generated.CustomerType;
import com.reece.platform.eclipse.model.generated.CustomerValidPoNumber;
import com.reece.platform.eclipse.model.generated.CustomerVirtualSupplierInfo;
import com.reece.platform.eclipse.model.generated.POReleaseNumberRequired;
import com.reece.platform.eclipse.model.generated.PrintStatementTypes;
import com.reece.platform.eclipse.model.generated.TaxableCode;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse Customer.
 */
@Schema(description = "Object representing an Eclipse Customer.")

public class Customer {
  @JsonProperty("updateKey")
  private String updateKey = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("addressLine1")
  private String addressLine1 = null;

  @JsonProperty("addressLine2")
  private String addressLine2 = null;

  @JsonProperty("addressLine3")
  private String addressLine3 = null;

  @JsonProperty("addressLine4")
  private String addressLine4 = null;

  @JsonProperty("city")
  private String city = null;

  @JsonProperty("state")
  private String state = null;

  @JsonProperty("postalCode")
  private String postalCode = null;

  @JsonProperty("countryCode")
  private String countryCode = null;

  @JsonProperty("isBillTo")
  private Boolean isBillTo = null;

  @JsonProperty("isShipTo")
  private Boolean isShipTo = null;

  @JsonProperty("isBranch")
  private Boolean isBranch = null;

  @JsonProperty("isBranchCash")
  private Boolean isBranchCash = null;

  @JsonProperty("isProspect")
  private Boolean isProspect = null;

  @JsonProperty("sortBy")
  private String sortBy = null;

  @JsonProperty("nameIndex")
  private String nameIndex = null;

  @JsonProperty("billToId")
  private Integer billToId = null;

  @JsonProperty("defaultPriceClass")
  private String defaultPriceClass = null;

  @JsonProperty("ediId")
  private String ediId = null;

  @JsonProperty("orderEntryMessage")
  private String orderEntryMessage = null;

  @JsonProperty("creditLimit")
  private MoneyDTO creditLimit = null;

  @JsonProperty("pastDueLimit")
  private MoneyDTO pastDueLimit = null;

  @JsonProperty("jobLimit")
  private MoneyDTO jobLimit = null;

  @JsonProperty("pastDueDays")
  private Integer pastDueDays = null;

  @JsonProperty("stockDepositPercentage")
  private Integer stockDepositPercentage = null;

  @JsonProperty("nonstockDepositPercentage")
  private Integer nonstockDepositPercentage = null;

  @JsonProperty("alwaysCod")
  private Boolean alwaysCod = null;

  @JsonProperty("codWhenCreditExceeded")
  private Boolean codWhenCreditExceeded = null;

  @JsonProperty("approvalRequired")
  private Boolean approvalRequired = null;

  @JsonProperty("approvalRequiredWhenCreditExceeded")
  private Boolean approvalRequiredWhenCreditExceeded = null;

  @JsonProperty("noOrderEntry")
  private Boolean noOrderEntry = null;

  @JsonProperty("noOrderEntryWhenCreditExceeded")
  private Boolean noOrderEntryWhenCreditExceeded = null;

  @JsonProperty("noOrderEntryUnlessAuth")
  private Boolean noOrderEntryUnlessAuth = null;

  @JsonProperty("noPrintShipTicketWhenCreditExceeded")
  private Boolean noPrintShipTicketWhenCreditExceeded = null;

  @JsonProperty("noPrintShipTicketUnlessAuth")
  private Boolean noPrintShipTicketUnlessAuth = null;

  @JsonProperty("doNotSaveCreditCardInfo")
  private Boolean doNotSaveCreditCardInfo = null;

  @JsonProperty("totalCreditHoldFlag")
  private Boolean totalCreditHoldFlag = null;

  @JsonProperty("overrideInvoiceTerms")
  private Boolean overrideInvoiceTerms = null;

  @JsonProperty("authPersonnelOnly")
  private Boolean authPersonnelOnly = null;

  @JsonProperty("defaultTerms")
  private String defaultTerms = null;

  @JsonProperty("directTerms")
  private String directTerms = null;

  @JsonProperty("companyCheckAccepted")
  private Boolean companyCheckAccepted = null;

  @JsonProperty("personalCheckAccepted")
  private Boolean personalCheckAccepted = null;

  @JsonProperty("taxJurisdictionOverride")
  private String taxJurisdictionOverride = null;

  @JsonProperty("applyCreditsToOldestAr")
  private Boolean applyCreditsToOldestAr = null;

  @JsonProperty("creditControlType")
  private CreditControlParameter creditControlType = null;

  @JsonProperty("freightOutExempt")
  private Boolean freightOutExempt = null;

  @JsonProperty("freightInExempt")
  private Boolean freightInExempt = null;

  @JsonProperty("separateAr")
  private Boolean separateAr = null;

  @JsonProperty("outsideSalesperson")
  private String outsideSalesperson = null;

  @JsonProperty("defaultPrintStyle")
  private String defaultPrintStyle = null;

  @JsonProperty("invoicePrintStyle")
  private String invoicePrintStyle = null;

  @JsonProperty("backOrderStatus")
  private BackOrderStatusType backOrderStatus = null;

  @JsonProperty("insideSalesperson")
  private String insideSalesperson = null;

  @JsonProperty("poNumberRequired")
  private POReleaseNumberRequired poNumberRequired = null;

  @JsonProperty("defaultPoNumber")
  private String defaultPoNumber = null;

  @JsonProperty("defaultReleaseNumber")
  private String defaultReleaseNumber = null;

  @JsonProperty("defaultShipVia")
  private String defaultShipVia = null;

  @JsonProperty("sixMonthAverageAr")
  private Double sixMonthAverageAr = null;

  @JsonProperty("sixMonthHighAr")
  private Double sixMonthHighAr = null;

  @JsonProperty("sixMonthAveragePaymentDays")
  private String sixMonthAveragePaymentDays = null;

  @JsonProperty("twelveMonthAverageAr")
  private String twelveMonthAverageAr = null;

  @JsonProperty("twelveMonthHighAr")
  private String twelveMonthHighAr = null;

  @JsonProperty("twelveMonthAveragePaymentDays")
  private String twelveMonthAveragePaymentDays = null;

  @JsonProperty("createDate")
  private LocalDateTime createDate = null;

  @JsonProperty("invoicePrintCopiesSetting")
  private String invoicePrintCopiesSetting = null;

  @JsonProperty("invoiceFaxCopiesSetting")
  private String invoiceFaxCopiesSetting = null;

  @JsonProperty("disableFtpBilling")
  private Boolean disableFtpBilling = null;

  @JsonProperty("emailBatchInvoiceGroupingMethod")
  private String emailBatchInvoiceGroupingMethod = null;

  @JsonProperty("invoiceSelectCode")
  private String invoiceSelectCode = null;

  @JsonProperty("orderEntryShippingInstructions")
  private String orderEntryShippingInstructions = null;

  @JsonProperty("homeBranch")
  private String homeBranch = null;

  @JsonProperty("homeTerritory")
  private String homeTerritory = null;

  @JsonProperty("parentCustomerStatementType")
  private String parentCustomerStatementType = null;

  @JsonProperty("statementType")
  private PrintStatementTypes statementType = null;

  @JsonProperty("batchStatementSetting")
  private String batchStatementSetting = null;

  @JsonProperty("autoDelete")
  private Boolean autoDelete = null;

  @JsonProperty("customerPartNumberAlternateCustomer")
  private String customerPartNumberAlternateCustomer = null;

  @JsonProperty("remoteLogBidsForReview")
  private String remoteLogBidsForReview = null;

  @JsonProperty("remoteLogOrdersForReview")
  private String remoteLogOrdersForReview = null;

  @JsonProperty("remoteSlavePrinter")
  private String remoteSlavePrinter = null;

  @JsonProperty("remoteWebLoginMessage")
  private String remoteWebLoginMessage = null;

  @JsonProperty("remoteDisplayProductAvail")
  private String remoteDisplayProductAvail = null;

  @JsonProperty("remoteDefaultOrderStatus")
  private String remoteDefaultOrderStatus = null;

  @JsonProperty("remoteWebPassword")
  private String remoteWebPassword = null;

  @JsonProperty("remoteOnlyLogOrdersWithErrors")
  private Boolean remoteOnlyLogOrdersWithErrors = null;

  @JsonProperty("remoteRoundToSellPackageQty")
  private String remoteRoundToSellPackageQty = null;

  @JsonProperty("remoteBranchAvailOption")
  private String remoteBranchAvailOption = null;

  @JsonProperty("remoteWebDiscountPercentage")
  private Double remoteWebDiscountPercentage = null;

  @JsonProperty("remoteWebArPassword")
  private String remoteWebArPassword = null;

  @JsonProperty("remoteWebDisplayListPrice")
  private Boolean remoteWebDisplayListPrice = null;

  @JsonProperty("remoteWebCreditCardPaymentRequired")
  private Boolean remoteWebCreditCardPaymentRequired = null;

  @JsonProperty("remoteWebOrderedByRequired")
  private Boolean remoteWebOrderedByRequired = null;

  @JsonProperty("remoteWebEnableShipToCreate")
  private Boolean remoteWebEnableShipToCreate = null;

  @JsonProperty("remoteWebHideArLedger")
  private Boolean remoteWebHideArLedger = null;

  @JsonProperty("remoteWebHideArInquiry")
  private Boolean remoteWebHideArInquiry = null;

  @JsonProperty("remoteWebB2bPostUrlDefault")
  private String remoteWebB2bPostUrlDefault = null;

  @JsonProperty("remoteWebB2bPostUrlAcknowledgement")
  private String remoteWebB2bPostUrlAcknowledgement = null;

  @JsonProperty("remoteWebB2bPostUrlAdvanceShipNotice")
  private String remoteWebB2bPostUrlAdvanceShipNotice = null;

  @JsonProperty("remoteWebB2bPostUrlInvoice")
  private String remoteWebB2bPostUrlInvoice = null;

  @JsonProperty("remoteWebLogoffUrl")
  private String remoteWebLogoffUrl = null;

  @JsonProperty("remoteWebHideZeroPriceProducts")
  private Boolean remoteWebHideZeroPriceProducts = null;

  @JsonProperty("remoteWebNumberOfShipTosToDisplay")
  private String remoteWebNumberOfShipTosToDisplay = null;

  @JsonProperty("remoteWebDisplayPdwItems")
  private Boolean remoteWebDisplayPdwItems = null;

  @JsonProperty("remoteWebDisplayCatalogItems")
  private Boolean remoteWebDisplayCatalogItems = null;

  @JsonProperty("remoteWebAllowedPricingVarianceType")
  private String remoteWebAllowedPricingVarianceType = null;

  @JsonProperty("remoteWebAllowedPricingVarianceValue")
  private String remoteWebAllowedPricingVarianceValue = null;

  @JsonProperty("remoteWebBidViewOnly")
  private Boolean remoteWebBidViewOnly = null;

  @JsonProperty("remoteWebXmlVendorId")
  private String remoteWebXmlVendorId = null;

  @JsonProperty("remoteWebXmlVendorLogin")
  private String remoteWebXmlVendorLogin = null;

  @JsonProperty("remoteWebXmlVendorPassword")
  private String remoteWebXmlVendorPassword = null;

  @JsonProperty("remoteWebXmlUsePartnerPricing")
  private String remoteWebXmlUsePartnerPricing = null;

  @JsonProperty("remoteWebEnableShipBranchOverride")
  private Boolean remoteWebEnableShipBranchOverride = null;

  @JsonProperty("remoteWebCategoryDisplayId")
  private String remoteWebCategoryDisplayId = null;

  @JsonProperty("remoteVerifyProductAvailability")
  private Boolean remoteVerifyProductAvailability = null;

  @JsonProperty("remoteWebEnableShipToEdit")
  private Boolean remoteWebEnableShipToEdit = null;

  @JsonProperty("remoteWebAccessControlMethod")
  private String remoteWebAccessControlMethod = null;

  @JsonProperty("orderStatusOverride")
  private String orderStatusOverride = null;

  @JsonProperty("salesSourceOverride")
  private String salesSourceOverride = null;

  @JsonProperty("shipBranchOverride")
  private String shipBranchOverride = null;

  @JsonProperty("priceBranchOverride")
  private String priceBranchOverride = null;

  @JsonProperty("printKitComponentOverride")
  private String printKitComponentOverride = null;

  @JsonProperty("requiredDateLeadTime")
  private String requiredDateLeadTime = null;

  @JsonProperty("maxEarlyShipDays")
  private String maxEarlyShipDays = null;

  @JsonProperty("sicCode")
  private String sicCode = null;

  @JsonProperty("customerSelectCodeId")
  private String customerSelectCodeId = null;

  @JsonProperty("parentStatementCustomerId")
  private String parentStatementCustomerId = null;

  @JsonProperty("rankNumber1")
  private String rankNumber1 = null;

  @JsonProperty("rankNumber2")
  private String rankNumber2 = null;

  @JsonProperty("rankNumber3")
  private String rankNumber3 = null;

  @JsonProperty("rankNumber4")
  private String rankNumber4 = null;

  @JsonProperty("rankNumber5")
  private String rankNumber5 = null;

  @JsonProperty("singleInvoice")
  private Boolean singleInvoice = null;

  @JsonProperty("maxCollectionDays")
  private Integer maxCollectionDays = null;

  @JsonProperty("uetAllowedEarlyDays")
  private Integer uetAllowedEarlyDays = null;

  @JsonProperty("uetAllowedLateDays")
  private Integer uetAllowedLateDays = null;

  @JsonProperty("normalDeliveryTime")
  private LocalDateTime normalDeliveryTime = null;

  @JsonProperty("dunnBradstreetNumber")
  private String dunnBradstreetNumber = null;

  @JsonProperty("currencyCode")
  private String currencyCode = null;

  @JsonProperty("alternateBillingName")
  private String alternateBillingName = null;

  @JsonProperty("alternateBillingAddressLine1")
  private String alternateBillingAddressLine1 = null;

  @JsonProperty("alternateBillingAddressLine2")
  private String alternateBillingAddressLine2 = null;

  @JsonProperty("alternateBillingAddressLine3")
  private String alternateBillingAddressLine3 = null;

  @JsonProperty("alternateBillingAddressLine4")
  private String alternateBillingAddressLine4 = null;

  @JsonProperty("alternateBillingCity")
  private String alternateBillingCity = null;

  @JsonProperty("alternateBillingState")
  private String alternateBillingState = null;

  @JsonProperty("alternateBillingPostalCode")
  private String alternateBillingPostalCode = null;

  @JsonProperty("alternateBillingFax")
  private String alternateBillingFax = null;

  @JsonProperty("alternateBillingSortBy")
  private String alternateBillingSortBy = null;

  @JsonProperty("alternateBillingUseShipToAddress")
  private Boolean alternateBillingUseShipToAddress = null;

  @JsonProperty("glAccountOverride")
  private Integer glAccountOverride = null;

  @JsonProperty("substituteProductsOk")
  private Boolean substituteProductsOk = null;

  @JsonProperty("lineItemTaxableCode")
  private TaxableCode lineItemTaxableCode = null;

  @JsonProperty("disableDuplicatePoCheck")
  private Boolean disableDuplicatePoCheck = null;

  @JsonProperty("webUrl")
  private String webUrl = null;

  @JsonProperty("handlingExempt")
  private Boolean handlingExempt = null;

  @JsonProperty("freightInsuranceRequired")
  private Boolean freightInsuranceRequired = null;

  @JsonProperty("extraHandlingCharge")
  private Boolean extraHandlingCharge = null;

  @JsonProperty("freightExemptMinimumAmount")
  private Double freightExemptMinimumAmount = null;

  @JsonProperty("residentialAddress")
  private Boolean residentialAddress = null;

  @JsonProperty("commissionOverrideWriterPercentage")
  private Double commissionOverrideWriterPercentage = null;

  @JsonProperty("commissionOverrideInsideSalesRepPercentage")
  private Double commissionOverrideInsideSalesRepPercentage = null;

  @JsonProperty("commissionOverrideOutsideSalesRepPercentage")
  private Double commissionOverrideOutsideSalesRepPercentage = null;

  @JsonProperty("commissionReviewDate")
  private LocalDateTime commissionReviewDate = null;

  @JsonProperty("commissionReason")
  private String commissionReason = null;

  @JsonProperty("invoiceTiffPdfOption")
  private String invoiceTiffPdfOption = null;

  @JsonProperty("statementTiffPdfOption")
  private String statementTiffPdfOption = null;

  @JsonProperty("orderEntryInternalNotes")
  private String orderEntryInternalNotes = null;

  @JsonProperty("productLastPriceCheck")
  private String productLastPriceCheck = null;

  @JsonProperty("consignedInventoryFlag")
  private Boolean consignedInventoryFlag = null;

  @JsonProperty("consignedInventoryShipTo")
  private Integer consignedInventoryShipTo = null;

  @JsonProperty("creditManager")
  private String creditManager = null;

  @JsonProperty("enableAnticipationCredit")
  private Boolean enableAnticipationCredit = null;

  @JsonProperty("lastUpdateDateTime")
  private LocalDateTime lastUpdateDateTime = null;

  @JsonProperty("includeServiceChargeInServiceChargeCalc")
  private Boolean includeServiceChargeInServiceChargeCalc = null;

  @JsonProperty("additionalKeywords")
  private String additionalKeywords = null;

  @JsonProperty("commissionPlan")
  private String commissionPlan = null;

  @JsonProperty("excludeFromSearchIndex")
  private Boolean excludeFromSearchIndex = null;

  @JsonProperty("timeZone")
  private String timeZone = null;

  @JsonProperty("pricePrecisionNumberOfDecimals")
  private String pricePrecisionNumberOfDecimals = null;

  @JsonProperty("excludeServiceCharges")
  private Boolean excludeServiceCharges = null;

  @JsonProperty("remitToOverrideId")
  private String remitToOverrideId = null;

  @JsonProperty("backOrderPrintingOption")
  private String backOrderPrintingOption = null;

  @JsonProperty("productDemandOverrideBranchId")
  private String productDemandOverrideBranchId = null;

  @JsonProperty("arCollectionLastCallDate")
  private LocalDateTime arCollectionLastCallDate = null;

  @JsonProperty("arCollectionNextCallDate")
  private LocalDateTime arCollectionNextCallDate = null;

  @JsonProperty("arCollectionSentLetterFlag")
  private Boolean arCollectionSentLetterFlag = null;

  @JsonProperty("arCollectionLetterTypeId")
  private String arCollectionLetterTypeId = null;

  @JsonProperty("arCollectionTotalCallCount")
  private Integer arCollectionTotalCallCount = null;

  @JsonProperty("arCollectionExcludeOverdueInvoicePrint")
  private Boolean arCollectionExcludeOverdueInvoicePrint = null;

  @JsonProperty("virtualSupplierAlternateCustomerId")
  private String virtualSupplierAlternateCustomerId = null;

  @JsonProperty("virtualSupplierPassThroughDirect")
  private Boolean virtualSupplierPassThroughDirect = null;

  @JsonProperty("virtualSupplierDefaultVendorId")
  private String virtualSupplierDefaultVendorId = null;

  @JsonProperty("virtualSupplierDefaultShipBranchId")
  private String virtualSupplierDefaultShipBranchId = null;

  @JsonProperty("virtualSupplierDefaultPriceBranchId")
  private String virtualSupplierDefaultPriceBranchId = null;

  @JsonProperty("excludeConsignmentBillingCredit")
  private Boolean excludeConsignmentBillingCredit = null;

  @JsonProperty("restrictPriceChangesInOrderEntry")
  private Boolean restrictPriceChangesInOrderEntry = null;

  @JsonProperty("additionalName")
  private String additionalName = null;

  @JsonProperty("passAlongDiscountPercentage")
  private Double passAlongDiscountPercentage = null;

  @JsonProperty("requireCheckVerification")
  private Boolean requireCheckVerification = null;

  @JsonProperty("consolidateInvoiceFlag")
  private Boolean consolidateInvoiceFlag = null;

  @JsonProperty("statementCycleCode")
  private String statementCycleCode = null;

  @JsonProperty("accountManager")
  private String accountManager = null;

  @JsonProperty("orderEntryFillRatePercentage")
  private Integer orderEntryFillRatePercentage = null;

  @JsonProperty("orderEntryFillRateMeasurement")
  private String orderEntryFillRateMeasurement = null;

  @JsonProperty("emailInvoicePrintStyle")
  private String emailInvoicePrintStyle = null;

  @JsonProperty("emailBidPrintStyle")
  private String emailBidPrintStyle = null;

  @JsonProperty("emailShipTicketPrintStyle")
  private String emailShipTicketPrintStyle = null;

  @JsonProperty("emailAcknowledgementPrintStyle")
  private String emailAcknowledgementPrintStyle = null;

  @JsonProperty("activityTriggerInheritOption")
  private String activityTriggerInheritOption = null;

  @JsonProperty("calculateOrderLevelSplitTaxFlag")
  private Boolean calculateOrderLevelSplitTaxFlag = null;

  @JsonProperty("rfPickingAllowQtyIncrease")
  private Boolean rfPickingAllowQtyIncrease = null;

  @JsonProperty("telemarketingQueueAddToCallLog")
  private Boolean telemarketingQueueAddToCallLog = null;

  @JsonProperty("telemarketingQueueFollowUpDateDays")
  private String telemarketingQueueFollowUpDateDays = null;

  @JsonProperty("strategicPricingCustomerCategory")
  private String strategicPricingCustomerCategory = null;

  @JsonProperty("strategicPricingListPriceCostMethod")
  private String strategicPricingListPriceCostMethod = null;

  @JsonProperty("strategicPricingCustomerSize")
  private String strategicPricingCustomerSize = null;

  @JsonProperty("strategicPricingCustomerSizeLastUpdated")
  private LocalDateTime strategicPricingCustomerSizeLastUpdated = null;

  @JsonProperty("requiresSpecialLabels")
  private Boolean requiresSpecialLabels = null;

  @JsonProperty("requiresSpecialPackaging")
  private Boolean requiresSpecialPackaging = null;

  @JsonProperty("excludeFromAutomaticWriteOffOfCashReceipts")
  private Boolean excludeFromAutomaticWriteOffOfCashReceipts = null;

  @JsonProperty("excludeFromAutomaticWriteOffOfInvoice")
  private Boolean excludeFromAutomaticWriteOffOfInvoice = null;

  @JsonProperty("excludeFromDemandCalcAsofDate")
  private LocalDateTime excludeFromDemandCalcAsofDate = null;

  @JsonProperty("accessLists")
  private List<CustomerAccessList> accessLists = null;

  @JsonProperty("allowedPoNumbers")
  private List<CustomerAllowedPoNumber> allowedPoNumbers = null;

  @JsonProperty("allowedPriceLines")
  private List<CustomerAllowedPriceLine> allowedPriceLines = null;

  @JsonProperty("creditAuthPersonnelList")
  private List<CustomerCreditAuthPersonnel> creditAuthPersonnelList = null;

  @JsonProperty("creditEftList")
  private List<CustomerCreditEft> creditEftList = null;

  @JsonProperty("ediContractUploadLists")
  private List<CustomerEdiContractUploadList> ediContractUploadLists = null;

  @JsonProperty("emails")
  private List<CustomerEmail> emails = null;

  @JsonProperty("freightCarrierInfoList")
  private List<CustomerFreightCarrierInfo> freightCarrierInfoList = null;

  @JsonProperty("orderEntryPrompts")
  private List<CustomerOrderEntryPrompt> orderEntryPrompts = null;

  @JsonProperty("phones")
  private List<CustomerPhone> phones = null;

  @JsonProperty("priceClassOverrides")
  private List<CustomerPriceClassOverride> priceClassOverrides = null;

  @JsonProperty("pricingContractCustomerLists")
  private List<CustomerPricingContractCustomerList> pricingContractCustomerLists = null;

  @JsonProperty("productCertifications")
  private List<CustomerProductCertification> productCertifications = null;

  @JsonProperty("productZones")
  private List<CustomerProductZone> productZones = null;

  @JsonProperty("rebates")
  private List<CustomerRebate> rebates = null;

  @JsonProperty("remoteChangeOrderMessageUsers")
  private List<CustomerRemoteChangeOrderMessageUser> remoteChangeOrderMessageUsers = null;

  @JsonProperty("remoteEcommerceIds")
  private List<CustomerRemoteEcommerce> remoteEcommerceIds = null;

  @JsonProperty("remoteErrorMessageUsers")
  private List<CustomerRemoteErrorMessageUser> remoteErrorMessageUsers = null;

  @JsonProperty("remoteLoginMessageUsers")
  private List<CustomerRemoteLoginMessageUser> remoteLoginMessageUsers = null;

  @JsonProperty("remoteNewOrderMessageUsers")
  private List<CustomerRemoteNewOrderMessageUser> remoteNewOrderMessageUsers = null;

  @JsonProperty("remoteReviewQueueUsers")
  private List<CustomerRemoteReviewQueueUser> remoteReviewQueueUsers = null;

  @JsonProperty("remoteValidMessageUsers")
  private List<CustomerRemoteValidMessageUser> remoteValidMessageUsers = null;

  @JsonProperty("remoteValidOrderStatuses")
  private List<CustomerRemoteValidOrderStatus> remoteValidOrderStatuses = null;

  @JsonProperty("remoteValidShipVias")
  private List<CustomerRemoteValidShipVia> remoteValidShipVias = null;

  @JsonProperty("restrictedVendorLists")
  private List<CustomerRestrictedVendorList> restrictedVendorLists = null;

  @JsonProperty("salesOrderEntryPrinterDocuments")
  private List<CustomerSalesOrderEntryPrinterDocument> salesOrderEntryPrinterDocuments = null;

  @JsonProperty("shipToLists")
  private List<CustomerShipToList> shipToLists = null;

  @JsonProperty("stagingLocations")
  private List<CustomerStagingLocation> stagingLocations = null;

  @JsonProperty("taxExceptionGroups")
  private List<CustomerTaxExceptionGroup> taxExceptionGroups = null;

  @JsonProperty("taxExemptInfoList")
  private List<CustomerTaxExemptInfo> taxExemptInfoList = null;

  @JsonProperty("types")
  private List<CustomerType> types = null;

  @JsonProperty("validPoNumbers")
  private List<CustomerValidPoNumber> validPoNumbers = null;

  @JsonProperty("virtualSupplierInfoList")
  private List<CustomerVirtualSupplierInfo> virtualSupplierInfoList = null;

  @JsonProperty("useStrategicFrieght")
  private Boolean useStrategicFrieght = null;

  @JsonProperty("applyCreditsToOldestArPastDueLimit")
  private Boolean applyCreditsToOldestArPastDueLimit = null;

  @JsonProperty("creditReleasePercentageOverride")
  private Double creditReleasePercentageOverride = null;

  @JsonProperty("excludeFromCollectionInvoices")
  private Boolean excludeFromCollectionInvoices = null;

  @JsonProperty("statementSubtotals")
  private String statementSubtotals = null;

  @JsonProperty("statementPageBreakOn")
  private String statementPageBreakOn = null;

  @JsonProperty("excludeFromMinimumDollarstoPrint")
  private Boolean excludeFromMinimumDollarstoPrint = null;

  @JsonProperty("strategicPricingCustomerSensitivity")
  private String strategicPricingCustomerSensitivity = null;

  @JsonProperty("strategicPricingCustomerSensitivityExpiryDate")
  private LocalDateTime strategicPricingCustomerSensitivityExpiryDate = null;

  @JsonProperty("httpUrl")
  private String httpUrl = null;

  @JsonProperty("avalaraUsageType")
  private String avalaraUsageType = null;

  @JsonProperty("remoteWebAPITradingPartnerType")
  private String remoteWebAPITradingPartnerType = null;

  @JsonProperty("exportOnly")
  private String exportOnly = null;

  @JsonProperty("alternateShippingAddresses")
  private List<CustomerAlternateShippingAddress> alternateShippingAddresses = null;

  public Customer updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update key to handle concurrency during updates within Eclipse
   * @return updateKey
  **/
  @Schema(description = "Update key to handle concurrency during updates within Eclipse")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }

  public Customer id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Eclipse ID for the record
   * @return id
  **/
  @Schema(description = "Eclipse ID for the record")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Customer name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Desc: The Customer Name  File: ENTITY  Attr: 1
   * @return name
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The Customer Name  File: ENTITY  Attr: 1")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Customer addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Desc: The Customer AddressLine1  File: ENTITY  Attr: 2,1
   * @return addressLine1
  **/
  @Schema(description = "Desc: The Customer AddressLine1  File: ENTITY  Attr: 2,1")
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }

  public Customer addressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Desc: The Customer AddressLine2  File: ENTITY  Attr: 2,2
   * @return addressLine2
  **/
  @Schema(description = "Desc: The Customer AddressLine2  File: ENTITY  Attr: 2,2")
  public String getAddressLine2() {
    return addressLine2;
  }

  public void setAddressLine2(String addressLine2) {
    this.addressLine2 = addressLine2;
  }

  public Customer addressLine3(String addressLine3) {
    this.addressLine3 = addressLine3;
    return this;
  }

   /**
   * Desc: The Customer AddressLine3  File: ENTITY  Attr: 2,3
   * @return addressLine3
  **/
  @Schema(description = "Desc: The Customer AddressLine3  File: ENTITY  Attr: 2,3")
  public String getAddressLine3() {
    return addressLine3;
  }

  public void setAddressLine3(String addressLine3) {
    this.addressLine3 = addressLine3;
  }

  public Customer addressLine4(String addressLine4) {
    this.addressLine4 = addressLine4;
    return this;
  }

   /**
   * Desc: The Customer AddressLine4  File: ENTITY  Attr: 2,4
   * @return addressLine4
  **/
  @Schema(description = "Desc: The Customer AddressLine4  File: ENTITY  Attr: 2,4")
  public String getAddressLine4() {
    return addressLine4;
  }

  public void setAddressLine4(String addressLine4) {
    this.addressLine4 = addressLine4;
  }

  public Customer city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Desc: The Customer City  File: ENTITY  Attr: 3
   * @return city
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The Customer City  File: ENTITY  Attr: 3")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public Customer state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Desc: The Customer State  File: ENTITY  Attr: 4
   * @return state
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The Customer State  File: ENTITY  Attr: 4")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public Customer postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Desc: The Customer PostalCode  File: ENTITY  Attr: 5
   * @return postalCode
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The Customer PostalCode  File: ENTITY  Attr: 5")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public Customer countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Desc: The Customer CountryCode  File: ENTITY  Attr: 6
   * @return countryCode
  **/
  @Schema(description = "Desc: The Customer CountryCode  File: ENTITY  Attr: 6")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public Customer isBillTo(Boolean isBillTo) {
    this.isBillTo = isBillTo;
    return this;
  }

   /**
   * Desc: The Customer IsBillTo flag  File: ENTITY  Attr: 7,1
   * @return isBillTo
  **/
  @Schema(description = "Desc: The Customer IsBillTo flag  File: ENTITY  Attr: 7,1")
  public Boolean isIsBillTo() {
    return isBillTo;
  }

  public void setIsBillTo(Boolean isBillTo) {
    this.isBillTo = isBillTo;
  }

  public Customer isShipTo(Boolean isShipTo) {
    this.isShipTo = isShipTo;
    return this;
  }

   /**
   * Desc: The Customer IsShipTo flag  File: ENTITY  Attr: 7,2
   * @return isShipTo
  **/
  @Schema(description = "Desc: The Customer IsShipTo flag  File: ENTITY  Attr: 7,2")
  public Boolean isIsShipTo() {
    return isShipTo;
  }

  public void setIsShipTo(Boolean isShipTo) {
    this.isShipTo = isShipTo;
  }

  public Customer isBranch(Boolean isBranch) {
    this.isBranch = isBranch;
    return this;
  }

   /**
   * Desc: The Customer IsBranch flag  File: ENTITY  Attr: 7,4
   * @return isBranch
  **/
  @Schema(description = "Desc: The Customer IsBranch flag  File: ENTITY  Attr: 7,4")
  public Boolean isIsBranch() {
    return isBranch;
  }

  public void setIsBranch(Boolean isBranch) {
    this.isBranch = isBranch;
  }

  public Customer isBranchCash(Boolean isBranchCash) {
    this.isBranchCash = isBranchCash;
    return this;
  }

   /**
   * Desc: The Customer IsBranchCash flag  File: ENTITY  Attr: 7,7
   * @return isBranchCash
  **/
  @Schema(description = "Desc: The Customer IsBranchCash flag  File: ENTITY  Attr: 7,7")
  public Boolean isIsBranchCash() {
    return isBranchCash;
  }

  public void setIsBranchCash(Boolean isBranchCash) {
    this.isBranchCash = isBranchCash;
  }

  public Customer isProspect(Boolean isProspect) {
    this.isProspect = isProspect;
    return this;
  }

   /**
   * Desc: The Customer IsProspect flag  File: ENTITY  Attr: 7,9
   * @return isProspect
  **/
  @Schema(description = "Desc: The Customer IsProspect flag  File: ENTITY  Attr: 7,9")
  public Boolean isIsProspect() {
    return isProspect;
  }

  public void setIsProspect(Boolean isProspect) {
    this.isProspect = isProspect;
  }

  public Customer sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

   /**
   * Desc: The Customer SortBy  File: ENTITY  Attr: 8
   * @return sortBy
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The Customer SortBy  File: ENTITY  Attr: 8")
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }

  public Customer nameIndex(String nameIndex) {
    this.nameIndex = nameIndex;
    return this;
  }

   /**
   * Desc: The Customer NameIndex  File: ENTITY  Attr: 9
   * @return nameIndex
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The Customer NameIndex  File: ENTITY  Attr: 9")
  public String getNameIndex() {
    return nameIndex;
  }

  public void setNameIndex(String nameIndex) {
    this.nameIndex = nameIndex;
  }

  public Customer billToId(Integer billToId) {
    this.billToId = billToId;
    return this;
  }

   /**
   * Desc: The Customer BillToId  File: ENTITY  Attr: 10
   * @return billToId
  **/
  @Schema(description = "Desc: The Customer BillToId  File: ENTITY  Attr: 10")
  public Integer getBillToId() {
    return billToId;
  }

  public void setBillToId(Integer billToId) {
    this.billToId = billToId;
  }

  public Customer defaultPriceClass(String defaultPriceClass) {
    this.defaultPriceClass = defaultPriceClass;
    return this;
  }

   /**
   * Desc: The Customer DefaultPriceClass  File: ENTITY  Attr: 13
   * @return defaultPriceClass
  **/
  @Schema(description = "Desc: The Customer DefaultPriceClass  File: ENTITY  Attr: 13")
  public String getDefaultPriceClass() {
    return defaultPriceClass;
  }

  public void setDefaultPriceClass(String defaultPriceClass) {
    this.defaultPriceClass = defaultPriceClass;
  }

  public Customer ediId(String ediId) {
    this.ediId = ediId;
    return this;
  }

   /**
   * Desc: The Customer EdiId  File: ENTITY  Attr: 15
   * @return ediId
  **/
  @Schema(description = "Desc: The Customer EdiId  File: ENTITY  Attr: 15")
  public String getEdiId() {
    return ediId;
  }

  public void setEdiId(String ediId) {
    this.ediId = ediId;
  }

  public Customer orderEntryMessage(String orderEntryMessage) {
    this.orderEntryMessage = orderEntryMessage;
    return this;
  }

   /**
   * Desc: The Customer OrderEntryMessage  File: ENTITY  Attr: 18
   * @return orderEntryMessage
  **/
  @Schema(description = "Desc: The Customer OrderEntryMessage  File: ENTITY  Attr: 18")
  public String getOrderEntryMessage() {
    return orderEntryMessage;
  }

  public void setOrderEntryMessage(String orderEntryMessage) {
    this.orderEntryMessage = orderEntryMessage;
  }

  public Customer creditLimit(MoneyDTO creditLimit) {
    this.creditLimit = creditLimit;
    return this;
  }

   /**
   * Get creditLimit
   * @return creditLimit
  **/
  @Valid
  @Schema(description = "")
  public MoneyDTO getCreditLimit() {
    return creditLimit;
  }

  public void setCreditLimit(MoneyDTO creditLimit) {
    this.creditLimit = creditLimit;
  }

  public Customer pastDueLimit(MoneyDTO pastDueLimit) {
    this.pastDueLimit = pastDueLimit;
    return this;
  }

   /**
   * Get pastDueLimit
   * @return pastDueLimit
  **/
  @Valid
  @Schema(description = "")
  public MoneyDTO getPastDueLimit() {
    return pastDueLimit;
  }

  public void setPastDueLimit(MoneyDTO pastDueLimit) {
    this.pastDueLimit = pastDueLimit;
  }

  public Customer jobLimit(MoneyDTO jobLimit) {
    this.jobLimit = jobLimit;
    return this;
  }

   /**
   * Get jobLimit
   * @return jobLimit
  **/
  @Valid
  @Schema(description = "")
  public MoneyDTO getJobLimit() {
    return jobLimit;
  }

  public void setJobLimit(MoneyDTO jobLimit) {
    this.jobLimit = jobLimit;
  }

  public Customer pastDueDays(Integer pastDueDays) {
    this.pastDueDays = pastDueDays;
    return this;
  }

   /**
   * Desc: The Customer PastDueDays  File: ENTITY  Attr: 22,2,1
   * minimum: 0
   * maximum: 999
   * @return pastDueDays
  **/
 @Min(0) @Max(999)  @Schema(description = "Desc: The Customer PastDueDays  File: ENTITY  Attr: 22,2,1")
  public Integer getPastDueDays() {
    return pastDueDays;
  }

  public void setPastDueDays(Integer pastDueDays) {
    this.pastDueDays = pastDueDays;
  }

  public Customer stockDepositPercentage(Integer stockDepositPercentage) {
    this.stockDepositPercentage = stockDepositPercentage;
    return this;
  }

   /**
   * Desc: The Customer StockDepositPercentage  File: ENTITY  Attr: 22,2,2
   * minimum: 0
   * maximum: 999
   * @return stockDepositPercentage
  **/
 @Min(0) @Max(999)  @Schema(description = "Desc: The Customer StockDepositPercentage  File: ENTITY  Attr: 22,2,2")
  public Integer getStockDepositPercentage() {
    return stockDepositPercentage;
  }

  public void setStockDepositPercentage(Integer stockDepositPercentage) {
    this.stockDepositPercentage = stockDepositPercentage;
  }

  public Customer nonstockDepositPercentage(Integer nonstockDepositPercentage) {
    this.nonstockDepositPercentage = nonstockDepositPercentage;
    return this;
  }

   /**
   * Desc: The Customer NonstockDepositPercentage  File: ENTITY  Attr: 22,2,3
   * minimum: 0
   * maximum: 999
   * @return nonstockDepositPercentage
  **/
 @Min(0) @Max(999)  @Schema(description = "Desc: The Customer NonstockDepositPercentage  File: ENTITY  Attr: 22,2,3")
  public Integer getNonstockDepositPercentage() {
    return nonstockDepositPercentage;
  }

  public void setNonstockDepositPercentage(Integer nonstockDepositPercentage) {
    this.nonstockDepositPercentage = nonstockDepositPercentage;
  }

  public Customer alwaysCod(Boolean alwaysCod) {
    this.alwaysCod = alwaysCod;
    return this;
  }

   /**
   * Desc: The Customer AlwaysCod flag  File: ENTITY  Attr: 23,1
   * @return alwaysCod
  **/
  @Schema(description = "Desc: The Customer AlwaysCod flag  File: ENTITY  Attr: 23,1")
  public Boolean isAlwaysCod() {
    return alwaysCod;
  }

  public void setAlwaysCod(Boolean alwaysCod) {
    this.alwaysCod = alwaysCod;
  }

  public Customer codWhenCreditExceeded(Boolean codWhenCreditExceeded) {
    this.codWhenCreditExceeded = codWhenCreditExceeded;
    return this;
  }

   /**
   * Desc: The Customer CodWhenCreditExceeded flag  File: ENTITY  Attr: 23,2
   * @return codWhenCreditExceeded
  **/
  @Schema(description = "Desc: The Customer CodWhenCreditExceeded flag  File: ENTITY  Attr: 23,2")
  public Boolean isCodWhenCreditExceeded() {
    return codWhenCreditExceeded;
  }

  public void setCodWhenCreditExceeded(Boolean codWhenCreditExceeded) {
    this.codWhenCreditExceeded = codWhenCreditExceeded;
  }

  public Customer approvalRequired(Boolean approvalRequired) {
    this.approvalRequired = approvalRequired;
    return this;
  }

   /**
   * Desc: The Customer ApprovalRequired flag  File: ENTITY  Attr: 23,3
   * @return approvalRequired
  **/
  @Schema(description = "Desc: The Customer ApprovalRequired flag  File: ENTITY  Attr: 23,3")
  public Boolean isApprovalRequired() {
    return approvalRequired;
  }

  public void setApprovalRequired(Boolean approvalRequired) {
    this.approvalRequired = approvalRequired;
  }

  public Customer approvalRequiredWhenCreditExceeded(Boolean approvalRequiredWhenCreditExceeded) {
    this.approvalRequiredWhenCreditExceeded = approvalRequiredWhenCreditExceeded;
    return this;
  }

   /**
   * Desc: The Customer ApprovalRequiredWhenCreditExceeded flag  File: ENTITY  Attr: 23,4
   * @return approvalRequiredWhenCreditExceeded
  **/
  @Schema(description = "Desc: The Customer ApprovalRequiredWhenCreditExceeded flag  File: ENTITY  Attr: 23,4")
  public Boolean isApprovalRequiredWhenCreditExceeded() {
    return approvalRequiredWhenCreditExceeded;
  }

  public void setApprovalRequiredWhenCreditExceeded(Boolean approvalRequiredWhenCreditExceeded) {
    this.approvalRequiredWhenCreditExceeded = approvalRequiredWhenCreditExceeded;
  }

  public Customer noOrderEntry(Boolean noOrderEntry) {
    this.noOrderEntry = noOrderEntry;
    return this;
  }

   /**
   * Desc: The Customer NoOrderEntry flag  File: ENTITY  Attr: 23,5
   * @return noOrderEntry
  **/
  @Schema(description = "Desc: The Customer NoOrderEntry flag  File: ENTITY  Attr: 23,5")
  public Boolean isNoOrderEntry() {
    return noOrderEntry;
  }

  public void setNoOrderEntry(Boolean noOrderEntry) {
    this.noOrderEntry = noOrderEntry;
  }

  public Customer noOrderEntryWhenCreditExceeded(Boolean noOrderEntryWhenCreditExceeded) {
    this.noOrderEntryWhenCreditExceeded = noOrderEntryWhenCreditExceeded;
    return this;
  }

   /**
   * Desc: The Customer NoOrderEntryWhenCreditExceeded flag  File: ENTITY  Attr: 23,6
   * @return noOrderEntryWhenCreditExceeded
  **/
  @Schema(description = "Desc: The Customer NoOrderEntryWhenCreditExceeded flag  File: ENTITY  Attr: 23,6")
  public Boolean isNoOrderEntryWhenCreditExceeded() {
    return noOrderEntryWhenCreditExceeded;
  }

  public void setNoOrderEntryWhenCreditExceeded(Boolean noOrderEntryWhenCreditExceeded) {
    this.noOrderEntryWhenCreditExceeded = noOrderEntryWhenCreditExceeded;
  }

  public Customer noOrderEntryUnlessAuth(Boolean noOrderEntryUnlessAuth) {
    this.noOrderEntryUnlessAuth = noOrderEntryUnlessAuth;
    return this;
  }

   /**
   * Desc: The Customer NoOrderEntryUnlessAuth flag  File: ENTITY  Attr: 23,7
   * @return noOrderEntryUnlessAuth
  **/
  @Schema(description = "Desc: The Customer NoOrderEntryUnlessAuth flag  File: ENTITY  Attr: 23,7")
  public Boolean isNoOrderEntryUnlessAuth() {
    return noOrderEntryUnlessAuth;
  }

  public void setNoOrderEntryUnlessAuth(Boolean noOrderEntryUnlessAuth) {
    this.noOrderEntryUnlessAuth = noOrderEntryUnlessAuth;
  }

  public Customer noPrintShipTicketWhenCreditExceeded(Boolean noPrintShipTicketWhenCreditExceeded) {
    this.noPrintShipTicketWhenCreditExceeded = noPrintShipTicketWhenCreditExceeded;
    return this;
  }

   /**
   * Desc: The Customer NoPrintShipTicketWhenCreditExceeded flag  File: ENTITY  Attr: 23,8
   * @return noPrintShipTicketWhenCreditExceeded
  **/
  @Schema(description = "Desc: The Customer NoPrintShipTicketWhenCreditExceeded flag  File: ENTITY  Attr: 23,8")
  public Boolean isNoPrintShipTicketWhenCreditExceeded() {
    return noPrintShipTicketWhenCreditExceeded;
  }

  public void setNoPrintShipTicketWhenCreditExceeded(Boolean noPrintShipTicketWhenCreditExceeded) {
    this.noPrintShipTicketWhenCreditExceeded = noPrintShipTicketWhenCreditExceeded;
  }

  public Customer noPrintShipTicketUnlessAuth(Boolean noPrintShipTicketUnlessAuth) {
    this.noPrintShipTicketUnlessAuth = noPrintShipTicketUnlessAuth;
    return this;
  }

   /**
   * Desc: The Customer NoPrintShipTicketUnlessAuth flag  File: ENTITY  Attr: 23,9
   * @return noPrintShipTicketUnlessAuth
  **/
  @Schema(description = "Desc: The Customer NoPrintShipTicketUnlessAuth flag  File: ENTITY  Attr: 23,9")
  public Boolean isNoPrintShipTicketUnlessAuth() {
    return noPrintShipTicketUnlessAuth;
  }

  public void setNoPrintShipTicketUnlessAuth(Boolean noPrintShipTicketUnlessAuth) {
    this.noPrintShipTicketUnlessAuth = noPrintShipTicketUnlessAuth;
  }

  public Customer doNotSaveCreditCardInfo(Boolean doNotSaveCreditCardInfo) {
    this.doNotSaveCreditCardInfo = doNotSaveCreditCardInfo;
    return this;
  }

   /**
   * Desc: The Customer DoNotSaveCreditCardInfo flag  File: ENTITY  Attr: 23,11
   * @return doNotSaveCreditCardInfo
  **/
  @Schema(description = "Desc: The Customer DoNotSaveCreditCardInfo flag  File: ENTITY  Attr: 23,11")
  public Boolean isDoNotSaveCreditCardInfo() {
    return doNotSaveCreditCardInfo;
  }

  public void setDoNotSaveCreditCardInfo(Boolean doNotSaveCreditCardInfo) {
    this.doNotSaveCreditCardInfo = doNotSaveCreditCardInfo;
  }

  public Customer totalCreditHoldFlag(Boolean totalCreditHoldFlag) {
    this.totalCreditHoldFlag = totalCreditHoldFlag;
    return this;
  }

   /**
   * Desc: The Customer CreditHold flag  File: ENTITY  Attr: 23,12
   * @return totalCreditHoldFlag
  **/
  @Schema(description = "Desc: The Customer CreditHold flag  File: ENTITY  Attr: 23,12")
  public Boolean isTotalCreditHoldFlag() {
    return totalCreditHoldFlag;
  }

  public void setTotalCreditHoldFlag(Boolean totalCreditHoldFlag) {
    this.totalCreditHoldFlag = totalCreditHoldFlag;
  }

  public Customer overrideInvoiceTerms(Boolean overrideInvoiceTerms) {
    this.overrideInvoiceTerms = overrideInvoiceTerms;
    return this;
  }

   /**
   * Desc: The Customer OverrideInvoiceTerms flag  File: ENTITY  Attr: 26
   * @return overrideInvoiceTerms
  **/
  @Schema(description = "Desc: The Customer OverrideInvoiceTerms flag  File: ENTITY  Attr: 26")
  public Boolean isOverrideInvoiceTerms() {
    return overrideInvoiceTerms;
  }

  public void setOverrideInvoiceTerms(Boolean overrideInvoiceTerms) {
    this.overrideInvoiceTerms = overrideInvoiceTerms;
  }

  public Customer authPersonnelOnly(Boolean authPersonnelOnly) {
    this.authPersonnelOnly = authPersonnelOnly;
    return this;
  }

   /**
   * Desc: The Customer AuthPersonnelOnly flag  File: ENTITY  Attr: 27
   * @return authPersonnelOnly
  **/
  @Schema(description = "Desc: The Customer AuthPersonnelOnly flag  File: ENTITY  Attr: 27")
  public Boolean isAuthPersonnelOnly() {
    return authPersonnelOnly;
  }

  public void setAuthPersonnelOnly(Boolean authPersonnelOnly) {
    this.authPersonnelOnly = authPersonnelOnly;
  }

  public Customer defaultTerms(String defaultTerms) {
    this.defaultTerms = defaultTerms;
    return this;
  }

   /**
   * Desc: The Customer DefaultTerms  File: ENTITY  Attr: 28,1
   * @return defaultTerms
  **/
  @Schema(description = "Desc: The Customer DefaultTerms  File: ENTITY  Attr: 28,1")
  public String getDefaultTerms() {
    return defaultTerms;
  }

  public void setDefaultTerms(String defaultTerms) {
    this.defaultTerms = defaultTerms;
  }

  public Customer directTerms(String directTerms) {
    this.directTerms = directTerms;
    return this;
  }

   /**
   * Desc: The Customer DirectTerms  File: ENTITY  Attr: 28,2
   * @return directTerms
  **/
  @Schema(description = "Desc: The Customer DirectTerms  File: ENTITY  Attr: 28,2")
  public String getDirectTerms() {
    return directTerms;
  }

  public void setDirectTerms(String directTerms) {
    this.directTerms = directTerms;
  }

  public Customer companyCheckAccepted(Boolean companyCheckAccepted) {
    this.companyCheckAccepted = companyCheckAccepted;
    return this;
  }

   /**
   * Desc: The Customer CompanyCheckAccepted flag  File: ENTITY  Attr: 31,1
   * @return companyCheckAccepted
  **/
  @Schema(description = "Desc: The Customer CompanyCheckAccepted flag  File: ENTITY  Attr: 31,1")
  public Boolean isCompanyCheckAccepted() {
    return companyCheckAccepted;
  }

  public void setCompanyCheckAccepted(Boolean companyCheckAccepted) {
    this.companyCheckAccepted = companyCheckAccepted;
  }

  public Customer personalCheckAccepted(Boolean personalCheckAccepted) {
    this.personalCheckAccepted = personalCheckAccepted;
    return this;
  }

   /**
   * Desc: The Customer PersonalCheckAccepted flag  File: ENTITY  Attr: 31,2
   * @return personalCheckAccepted
  **/
  @Schema(description = "Desc: The Customer PersonalCheckAccepted flag  File: ENTITY  Attr: 31,2")
  public Boolean isPersonalCheckAccepted() {
    return personalCheckAccepted;
  }

  public void setPersonalCheckAccepted(Boolean personalCheckAccepted) {
    this.personalCheckAccepted = personalCheckAccepted;
  }

  public Customer taxJurisdictionOverride(String taxJurisdictionOverride) {
    this.taxJurisdictionOverride = taxJurisdictionOverride;
    return this;
  }

   /**
   * Desc: The Customer TaxJurisdictionOverride  File: ENTITY  Attr: 36
   * @return taxJurisdictionOverride
  **/
  @Schema(description = "Desc: The Customer TaxJurisdictionOverride  File: ENTITY  Attr: 36")
  public String getTaxJurisdictionOverride() {
    return taxJurisdictionOverride;
  }

  public void setTaxJurisdictionOverride(String taxJurisdictionOverride) {
    this.taxJurisdictionOverride = taxJurisdictionOverride;
  }

  public Customer applyCreditsToOldestAr(Boolean applyCreditsToOldestAr) {
    this.applyCreditsToOldestAr = applyCreditsToOldestAr;
    return this;
  }

   /**
   * Desc: The Customer ApplyCreditsToOldestAr flag  File: ENTITY  Attr: 37,1
   * @return applyCreditsToOldestAr
  **/
  @Schema(description = "Desc: The Customer ApplyCreditsToOldestAr flag  File: ENTITY  Attr: 37,1")
  public Boolean isApplyCreditsToOldestAr() {
    return applyCreditsToOldestAr;
  }

  public void setApplyCreditsToOldestAr(Boolean applyCreditsToOldestAr) {
    this.applyCreditsToOldestAr = applyCreditsToOldestAr;
  }

  public Customer creditControlType(CreditControlParameter creditControlType) {
    this.creditControlType = creditControlType;
    return this;
  }

   /**
   * Get creditControlType
   * @return creditControlType
  **/
  @Valid
  @Schema(description = "")
  public CreditControlParameter getCreditControlType() {
    return creditControlType;
  }

  public void setCreditControlType(CreditControlParameter creditControlType) {
    this.creditControlType = creditControlType;
  }

  public Customer freightOutExempt(Boolean freightOutExempt) {
    this.freightOutExempt = freightOutExempt;
    return this;
  }

   /**
   * Desc: The Customer FreightOutExempt flag  File: ENTITY  Attr: 39,1
   * @return freightOutExempt
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The Customer FreightOutExempt flag  File: ENTITY  Attr: 39,1")
  public Boolean isFreightOutExempt() {
    return freightOutExempt;
  }

  public void setFreightOutExempt(Boolean freightOutExempt) {
    this.freightOutExempt = freightOutExempt;
  }

  public Customer freightInExempt(Boolean freightInExempt) {
    this.freightInExempt = freightInExempt;
    return this;
  }

   /**
   * Desc: The Customer FreightInExempt flag  File: ENTITY  Attr: 39,2
   * @return freightInExempt
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The Customer FreightInExempt flag  File: ENTITY  Attr: 39,2")
  public Boolean isFreightInExempt() {
    return freightInExempt;
  }

  public void setFreightInExempt(Boolean freightInExempt) {
    this.freightInExempt = freightInExempt;
  }

  public Customer separateAr(Boolean separateAr) {
    this.separateAr = separateAr;
    return this;
  }

   /**
   * Desc: The Customer SeparateAr flag  File: ENTITY  Attr: 40
   * @return separateAr
  **/
  @Schema(description = "Desc: The Customer SeparateAr flag  File: ENTITY  Attr: 40")
  public Boolean isSeparateAr() {
    return separateAr;
  }

  public void setSeparateAr(Boolean separateAr) {
    this.separateAr = separateAr;
  }

  public Customer outsideSalesperson(String outsideSalesperson) {
    this.outsideSalesperson = outsideSalesperson;
    return this;
  }

   /**
   * Desc: The Customer OutsideSalesperson  File: ENTITY  Attr: 41
   * @return outsideSalesperson
  **/
  @Schema(description = "Desc: The Customer OutsideSalesperson  File: ENTITY  Attr: 41")
  public String getOutsideSalesperson() {
    return outsideSalesperson;
  }

  public void setOutsideSalesperson(String outsideSalesperson) {
    this.outsideSalesperson = outsideSalesperson;
  }

  public Customer defaultPrintStyle(String defaultPrintStyle) {
    this.defaultPrintStyle = defaultPrintStyle;
    return this;
  }

   /**
   * Desc: The Customer DefaultPrintStyle  File: ENTITY  Attr: 42
   * @return defaultPrintStyle
  **/
  @Schema(description = "Desc: The Customer DefaultPrintStyle  File: ENTITY  Attr: 42")
  public String getDefaultPrintStyle() {
    return defaultPrintStyle;
  }

  public void setDefaultPrintStyle(String defaultPrintStyle) {
    this.defaultPrintStyle = defaultPrintStyle;
  }

  public Customer invoicePrintStyle(String invoicePrintStyle) {
    this.invoicePrintStyle = invoicePrintStyle;
    return this;
  }

   /**
   * Desc: The Customer InvoicePrintStyle  File: ENTITY  Attr: 174
   * @return invoicePrintStyle
  **/
  @Schema(description = "Desc: The Customer InvoicePrintStyle  File: ENTITY  Attr: 174")
  public String getInvoicePrintStyle() {
    return invoicePrintStyle;
  }

  public void setInvoicePrintStyle(String invoicePrintStyle) {
    this.invoicePrintStyle = invoicePrintStyle;
  }

  public Customer backOrderStatus(BackOrderStatusType backOrderStatus) {
    this.backOrderStatus = backOrderStatus;
    return this;
  }

   /**
   * Get backOrderStatus
   * @return backOrderStatus
  **/
  @Valid
  @Schema(description = "")
  public BackOrderStatusType getBackOrderStatus() {
    return backOrderStatus;
  }

  public void setBackOrderStatus(BackOrderStatusType backOrderStatus) {
    this.backOrderStatus = backOrderStatus;
  }

  public Customer insideSalesperson(String insideSalesperson) {
    this.insideSalesperson = insideSalesperson;
    return this;
  }

   /**
   * Desc: The Customer InsideSalesperson  File: ENTITY  Attr: 44
   * @return insideSalesperson
  **/
  @Schema(description = "Desc: The Customer InsideSalesperson  File: ENTITY  Attr: 44")
  public String getInsideSalesperson() {
    return insideSalesperson;
  }

  public void setInsideSalesperson(String insideSalesperson) {
    this.insideSalesperson = insideSalesperson;
  }

  public Customer poNumberRequired(POReleaseNumberRequired poNumberRequired) {
    this.poNumberRequired = poNumberRequired;
    return this;
  }

   /**
   * Get poNumberRequired
   * @return poNumberRequired
  **/
  @Valid
  @Schema(description = "")
  public POReleaseNumberRequired getPoNumberRequired() {
    return poNumberRequired;
  }

  public void setPoNumberRequired(POReleaseNumberRequired poNumberRequired) {
    this.poNumberRequired = poNumberRequired;
  }

  public Customer defaultPoNumber(String defaultPoNumber) {
    this.defaultPoNumber = defaultPoNumber;
    return this;
  }

   /**
   * Desc: The Customer DefaultPoNumber  File: ENTITY  Attr: 45,2
   * @return defaultPoNumber
  **/
  @Schema(description = "Desc: The Customer DefaultPoNumber  File: ENTITY  Attr: 45,2")
  public String getDefaultPoNumber() {
    return defaultPoNumber;
  }

  public void setDefaultPoNumber(String defaultPoNumber) {
    this.defaultPoNumber = defaultPoNumber;
  }

  public Customer defaultReleaseNumber(String defaultReleaseNumber) {
    this.defaultReleaseNumber = defaultReleaseNumber;
    return this;
  }

   /**
   * Desc: The Customer DefaultReleaseNumber  File: ENTITY  Attr: 45,3
   * @return defaultReleaseNumber
  **/
  @Schema(description = "Desc: The Customer DefaultReleaseNumber  File: ENTITY  Attr: 45,3")
  public String getDefaultReleaseNumber() {
    return defaultReleaseNumber;
  }

  public void setDefaultReleaseNumber(String defaultReleaseNumber) {
    this.defaultReleaseNumber = defaultReleaseNumber;
  }

  public Customer defaultShipVia(String defaultShipVia) {
    this.defaultShipVia = defaultShipVia;
    return this;
  }

   /**
   * Desc: The Customer DefaultShipVia  File: ENTITY  Attr: 46
   * @return defaultShipVia
  **/
  @Schema(description = "Desc: The Customer DefaultShipVia  File: ENTITY  Attr: 46")
  public String getDefaultShipVia() {
    return defaultShipVia;
  }

  public void setDefaultShipVia(String defaultShipVia) {
    this.defaultShipVia = defaultShipVia;
  }

  public Customer sixMonthAverageAr(Double sixMonthAverageAr) {
    this.sixMonthAverageAr = sixMonthAverageAr;
    return this;
  }

   /**
   * Desc: The Customer SixMonthAverageAr  File: ENTITY  Attr: 47,2
   * @return sixMonthAverageAr
  **/
  @Schema(description = "Desc: The Customer SixMonthAverageAr  File: ENTITY  Attr: 47,2")
  public Double getSixMonthAverageAr() {
    return sixMonthAverageAr;
  }

  public void setSixMonthAverageAr(Double sixMonthAverageAr) {
    this.sixMonthAverageAr = sixMonthAverageAr;
  }

  public Customer sixMonthHighAr(Double sixMonthHighAr) {
    this.sixMonthHighAr = sixMonthHighAr;
    return this;
  }

   /**
   * Desc: The Customer SixMonthHighAr  File: ENTITY  Attr: 47,3
   * @return sixMonthHighAr
  **/
  @Schema(description = "Desc: The Customer SixMonthHighAr  File: ENTITY  Attr: 47,3")
  public Double getSixMonthHighAr() {
    return sixMonthHighAr;
  }

  public void setSixMonthHighAr(Double sixMonthHighAr) {
    this.sixMonthHighAr = sixMonthHighAr;
  }

  public Customer sixMonthAveragePaymentDays(String sixMonthAveragePaymentDays) {
    this.sixMonthAveragePaymentDays = sixMonthAveragePaymentDays;
    return this;
  }

   /**
   * Desc: The Customer SixMonthAveragePaymentDays  File: ENTITY  Attr: 47,4
   * @return sixMonthAveragePaymentDays
  **/
  @Schema(description = "Desc: The Customer SixMonthAveragePaymentDays  File: ENTITY  Attr: 47,4")
  public String getSixMonthAveragePaymentDays() {
    return sixMonthAveragePaymentDays;
  }

  public void setSixMonthAveragePaymentDays(String sixMonthAveragePaymentDays) {
    this.sixMonthAveragePaymentDays = sixMonthAveragePaymentDays;
  }

  public Customer twelveMonthAverageAr(String twelveMonthAverageAr) {
    this.twelveMonthAverageAr = twelveMonthAverageAr;
    return this;
  }

   /**
   * Desc: The Customer TwelveMonthAverageAr  File: ENTITY  Attr: 47,6
   * @return twelveMonthAverageAr
  **/
  @Schema(description = "Desc: The Customer TwelveMonthAverageAr  File: ENTITY  Attr: 47,6")
  public String getTwelveMonthAverageAr() {
    return twelveMonthAverageAr;
  }

  public void setTwelveMonthAverageAr(String twelveMonthAverageAr) {
    this.twelveMonthAverageAr = twelveMonthAverageAr;
  }

  public Customer twelveMonthHighAr(String twelveMonthHighAr) {
    this.twelveMonthHighAr = twelveMonthHighAr;
    return this;
  }

   /**
   * Desc: The Customer TwelveMonthHighAr  File: ENTITY  Attr: 47,7
   * @return twelveMonthHighAr
  **/
  @Schema(description = "Desc: The Customer TwelveMonthHighAr  File: ENTITY  Attr: 47,7")
  public String getTwelveMonthHighAr() {
    return twelveMonthHighAr;
  }

  public void setTwelveMonthHighAr(String twelveMonthHighAr) {
    this.twelveMonthHighAr = twelveMonthHighAr;
  }

  public Customer twelveMonthAveragePaymentDays(String twelveMonthAveragePaymentDays) {
    this.twelveMonthAveragePaymentDays = twelveMonthAveragePaymentDays;
    return this;
  }

   /**
   * Desc: The Customer TwelveMonthAveragePaymentDays  File: ENTITY  Attr: 47,8
   * @return twelveMonthAveragePaymentDays
  **/
  @Schema(description = "Desc: The Customer TwelveMonthAveragePaymentDays  File: ENTITY  Attr: 47,8")
  public String getTwelveMonthAveragePaymentDays() {
    return twelveMonthAveragePaymentDays;
  }

  public void setTwelveMonthAveragePaymentDays(String twelveMonthAveragePaymentDays) {
    this.twelveMonthAveragePaymentDays = twelveMonthAveragePaymentDays;
  }

  public Customer createDate(LocalDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Desc: The Customer CreateDate  File: ENTITY  Attr: 48
   * @return createDate
  **/
  @Valid
  @Schema(description = "Desc: The Customer CreateDate  File: ENTITY  Attr: 48")
  public LocalDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(LocalDateTime createDate) {
    this.createDate = createDate;
  }

  public Customer invoicePrintCopiesSetting(String invoicePrintCopiesSetting) {
    this.invoicePrintCopiesSetting = invoicePrintCopiesSetting;
    return this;
  }

   /**
   * Desc: The Customer InvoicePrintCopiesSetting  File: ENTITY  Attr: 50,1
   * @return invoicePrintCopiesSetting
  **/
  @Schema(description = "Desc: The Customer InvoicePrintCopiesSetting  File: ENTITY  Attr: 50,1")
  public String getInvoicePrintCopiesSetting() {
    return invoicePrintCopiesSetting;
  }

  public void setInvoicePrintCopiesSetting(String invoicePrintCopiesSetting) {
    this.invoicePrintCopiesSetting = invoicePrintCopiesSetting;
  }

  public Customer invoiceFaxCopiesSetting(String invoiceFaxCopiesSetting) {
    this.invoiceFaxCopiesSetting = invoiceFaxCopiesSetting;
    return this;
  }

   /**
   * Desc: The Customer InvoiceFaxCopiesSetting  File: ENTITY  Attr: 50,2
   * @return invoiceFaxCopiesSetting
  **/
  @Schema(description = "Desc: The Customer InvoiceFaxCopiesSetting  File: ENTITY  Attr: 50,2")
  public String getInvoiceFaxCopiesSetting() {
    return invoiceFaxCopiesSetting;
  }

  public void setInvoiceFaxCopiesSetting(String invoiceFaxCopiesSetting) {
    this.invoiceFaxCopiesSetting = invoiceFaxCopiesSetting;
  }

  public Customer disableFtpBilling(Boolean disableFtpBilling) {
    this.disableFtpBilling = disableFtpBilling;
    return this;
  }

   /**
   * Desc: The Customer DisableFtpBilling flag  File: ENTITY  Attr: 50,3
   * @return disableFtpBilling
  **/
  @Schema(description = "Desc: The Customer DisableFtpBilling flag  File: ENTITY  Attr: 50,3")
  public Boolean isDisableFtpBilling() {
    return disableFtpBilling;
  }

  public void setDisableFtpBilling(Boolean disableFtpBilling) {
    this.disableFtpBilling = disableFtpBilling;
  }

  public Customer emailBatchInvoiceGroupingMethod(String emailBatchInvoiceGroupingMethod) {
    this.emailBatchInvoiceGroupingMethod = emailBatchInvoiceGroupingMethod;
    return this;
  }

   /**
   * Desc: The Customer EmailBatchInvoiceGroupingMethod  File: ENTITY  Attr: 50,4
   * @return emailBatchInvoiceGroupingMethod
  **/
  @Schema(description = "Desc: The Customer EmailBatchInvoiceGroupingMethod  File: ENTITY  Attr: 50,4")
  public String getEmailBatchInvoiceGroupingMethod() {
    return emailBatchInvoiceGroupingMethod;
  }

  public void setEmailBatchInvoiceGroupingMethod(String emailBatchInvoiceGroupingMethod) {
    this.emailBatchInvoiceGroupingMethod = emailBatchInvoiceGroupingMethod;
  }

  public Customer invoiceSelectCode(String invoiceSelectCode) {
    this.invoiceSelectCode = invoiceSelectCode;
    return this;
  }

   /**
   * Desc: The Customer InvoiceSelectCode  File: ENTITY  Attr: 51
   * @return invoiceSelectCode
  **/
  @Schema(description = "Desc: The Customer InvoiceSelectCode  File: ENTITY  Attr: 51")
  public String getInvoiceSelectCode() {
    return invoiceSelectCode;
  }

  public void setInvoiceSelectCode(String invoiceSelectCode) {
    this.invoiceSelectCode = invoiceSelectCode;
  }

  public Customer orderEntryShippingInstructions(String orderEntryShippingInstructions) {
    this.orderEntryShippingInstructions = orderEntryShippingInstructions;
    return this;
  }

   /**
   * Desc: The Customer OrderEntryShippingInstructions  File: ENTITY  Attr: 52
   * @return orderEntryShippingInstructions
  **/
  @Schema(description = "Desc: The Customer OrderEntryShippingInstructions  File: ENTITY  Attr: 52")
  public String getOrderEntryShippingInstructions() {
    return orderEntryShippingInstructions;
  }

  public void setOrderEntryShippingInstructions(String orderEntryShippingInstructions) {
    this.orderEntryShippingInstructions = orderEntryShippingInstructions;
  }

  public Customer homeBranch(String homeBranch) {
    this.homeBranch = homeBranch;
    return this;
  }

   /**
   * Desc: The Customer HomeBranch  File: ENTITY  Attr: 53
   * @return homeBranch
  **/
  @Schema(description = "Desc: The Customer HomeBranch  File: ENTITY  Attr: 53")
  public String getHomeBranch() {
    return homeBranch;
  }

  public void setHomeBranch(String homeBranch) {
    this.homeBranch = homeBranch;
  }

  public Customer homeTerritory(String homeTerritory) {
    this.homeTerritory = homeTerritory;
    return this;
  }

   /**
   * Desc: The Customer HomeTerritory  File: ENTITY  Attr: 54
   * @return homeTerritory
  **/
  @Schema(description = "Desc: The Customer HomeTerritory  File: ENTITY  Attr: 54")
  public String getHomeTerritory() {
    return homeTerritory;
  }

  public void setHomeTerritory(String homeTerritory) {
    this.homeTerritory = homeTerritory;
  }

  public Customer parentCustomerStatementType(String parentCustomerStatementType) {
    this.parentCustomerStatementType = parentCustomerStatementType;
    return this;
  }

   /**
   * Desc: The Parent Customer StatementType  File: ENTITY  Attr: 193,1
   * @return parentCustomerStatementType
  **/
  @Schema(description = "Desc: The Parent Customer StatementType  File: ENTITY  Attr: 193,1")
  public String getParentCustomerStatementType() {
    return parentCustomerStatementType;
  }

  public void setParentCustomerStatementType(String parentCustomerStatementType) {
    this.parentCustomerStatementType = parentCustomerStatementType;
  }

  public Customer statementType(PrintStatementTypes statementType) {
    this.statementType = statementType;
    return this;
  }

   /**
   * Get statementType
   * @return statementType
  **/
  @Valid
  @Schema(description = "")
  public PrintStatementTypes getStatementType() {
    return statementType;
  }

  public void setStatementType(PrintStatementTypes statementType) {
    this.statementType = statementType;
  }

  public Customer batchStatementSetting(String batchStatementSetting) {
    this.batchStatementSetting = batchStatementSetting;
    return this;
  }

   /**
   * Desc: The Customer BatchStatementSetting  File: ENTITY  Attr: 64
   * @return batchStatementSetting
  **/
  @Schema(description = "Desc: The Customer BatchStatementSetting  File: ENTITY  Attr: 64")
  public String getBatchStatementSetting() {
    return batchStatementSetting;
  }

  public void setBatchStatementSetting(String batchStatementSetting) {
    this.batchStatementSetting = batchStatementSetting;
  }

  public Customer autoDelete(Boolean autoDelete) {
    this.autoDelete = autoDelete;
    return this;
  }

   /**
   * Desc: The Customer AutoDelete flag  File: ENTITY  Attr: 65
   * @return autoDelete
  **/
  @Schema(description = "Desc: The Customer AutoDelete flag  File: ENTITY  Attr: 65")
  public Boolean isAutoDelete() {
    return autoDelete;
  }

  public void setAutoDelete(Boolean autoDelete) {
    this.autoDelete = autoDelete;
  }

  public Customer customerPartNumberAlternateCustomer(String customerPartNumberAlternateCustomer) {
    this.customerPartNumberAlternateCustomer = customerPartNumberAlternateCustomer;
    return this;
  }

   /**
   * Desc: The Customer CustomerPartNumberAlternateCustomer  File: ENTITY  Attr: 66
   * @return customerPartNumberAlternateCustomer
  **/
  @Schema(description = "Desc: The Customer CustomerPartNumberAlternateCustomer  File: ENTITY  Attr: 66")
  public String getCustomerPartNumberAlternateCustomer() {
    return customerPartNumberAlternateCustomer;
  }

  public void setCustomerPartNumberAlternateCustomer(String customerPartNumberAlternateCustomer) {
    this.customerPartNumberAlternateCustomer = customerPartNumberAlternateCustomer;
  }

  public Customer remoteLogBidsForReview(String remoteLogBidsForReview) {
    this.remoteLogBidsForReview = remoteLogBidsForReview;
    return this;
  }

   /**
   * Desc: The Customer RemoteLogBidsForReview  File: ENTITY  Attr: 68,1
   * @return remoteLogBidsForReview
  **/
  @Schema(description = "Desc: The Customer RemoteLogBidsForReview  File: ENTITY  Attr: 68,1")
  public String getRemoteLogBidsForReview() {
    return remoteLogBidsForReview;
  }

  public void setRemoteLogBidsForReview(String remoteLogBidsForReview) {
    this.remoteLogBidsForReview = remoteLogBidsForReview;
  }

  public Customer remoteLogOrdersForReview(String remoteLogOrdersForReview) {
    this.remoteLogOrdersForReview = remoteLogOrdersForReview;
    return this;
  }

   /**
   * Desc: The Customer RemoteLogOrdersForReview  File: ENTITY  Attr: 68,2
   * @return remoteLogOrdersForReview
  **/
  @Schema(description = "Desc: The Customer RemoteLogOrdersForReview  File: ENTITY  Attr: 68,2")
  public String getRemoteLogOrdersForReview() {
    return remoteLogOrdersForReview;
  }

  public void setRemoteLogOrdersForReview(String remoteLogOrdersForReview) {
    this.remoteLogOrdersForReview = remoteLogOrdersForReview;
  }

  public Customer remoteSlavePrinter(String remoteSlavePrinter) {
    this.remoteSlavePrinter = remoteSlavePrinter;
    return this;
  }

   /**
   * Desc: The Customer RemoteSlavePrinter  File: ENTITY  Attr: 68,5
   * @return remoteSlavePrinter
  **/
  @Schema(description = "Desc: The Customer RemoteSlavePrinter  File: ENTITY  Attr: 68,5")
  public String getRemoteSlavePrinter() {
    return remoteSlavePrinter;
  }

  public void setRemoteSlavePrinter(String remoteSlavePrinter) {
    this.remoteSlavePrinter = remoteSlavePrinter;
  }

  public Customer remoteWebLoginMessage(String remoteWebLoginMessage) {
    this.remoteWebLoginMessage = remoteWebLoginMessage;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebLoginMessage  File: ENTITY  Attr: 68,7
   * @return remoteWebLoginMessage
  **/
  @Schema(description = "Desc: The Customer RemoteWebLoginMessage  File: ENTITY  Attr: 68,7")
  public String getRemoteWebLoginMessage() {
    return remoteWebLoginMessage;
  }

  public void setRemoteWebLoginMessage(String remoteWebLoginMessage) {
    this.remoteWebLoginMessage = remoteWebLoginMessage;
  }

  public Customer remoteDisplayProductAvail(String remoteDisplayProductAvail) {
    this.remoteDisplayProductAvail = remoteDisplayProductAvail;
    return this;
  }

   /**
   * Desc: The Customer RemoteDisplayProductAvail  File: ENTITY  Attr: 68,9
   * @return remoteDisplayProductAvail
  **/
  @Schema(description = "Desc: The Customer RemoteDisplayProductAvail  File: ENTITY  Attr: 68,9")
  public String getRemoteDisplayProductAvail() {
    return remoteDisplayProductAvail;
  }

  public void setRemoteDisplayProductAvail(String remoteDisplayProductAvail) {
    this.remoteDisplayProductAvail = remoteDisplayProductAvail;
  }

  public Customer remoteDefaultOrderStatus(String remoteDefaultOrderStatus) {
    this.remoteDefaultOrderStatus = remoteDefaultOrderStatus;
    return this;
  }

   /**
   * Desc: The Customer RemoteDefaultOrderStatus  File: ENTITY  Attr: 68,10
   * @return remoteDefaultOrderStatus
  **/
  @Schema(description = "Desc: The Customer RemoteDefaultOrderStatus  File: ENTITY  Attr: 68,10")
  public String getRemoteDefaultOrderStatus() {
    return remoteDefaultOrderStatus;
  }

  public void setRemoteDefaultOrderStatus(String remoteDefaultOrderStatus) {
    this.remoteDefaultOrderStatus = remoteDefaultOrderStatus;
  }

  public Customer remoteWebPassword(String remoteWebPassword) {
    this.remoteWebPassword = remoteWebPassword;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebPassword  File: ENTITY  Attr: 68,11
   * @return remoteWebPassword
  **/
  @Schema(description = "Desc: The Customer RemoteWebPassword  File: ENTITY  Attr: 68,11")
  public String getRemoteWebPassword() {
    return remoteWebPassword;
  }

  public void setRemoteWebPassword(String remoteWebPassword) {
    this.remoteWebPassword = remoteWebPassword;
  }

  public Customer remoteOnlyLogOrdersWithErrors(Boolean remoteOnlyLogOrdersWithErrors) {
    this.remoteOnlyLogOrdersWithErrors = remoteOnlyLogOrdersWithErrors;
    return this;
  }

   /**
   * Desc: The Customer RemoteOnlyLogOrdersWithErrors flag  File: ENTITY  Attr: 68,12
   * @return remoteOnlyLogOrdersWithErrors
  **/
  @Schema(description = "Desc: The Customer RemoteOnlyLogOrdersWithErrors flag  File: ENTITY  Attr: 68,12")
  public Boolean isRemoteOnlyLogOrdersWithErrors() {
    return remoteOnlyLogOrdersWithErrors;
  }

  public void setRemoteOnlyLogOrdersWithErrors(Boolean remoteOnlyLogOrdersWithErrors) {
    this.remoteOnlyLogOrdersWithErrors = remoteOnlyLogOrdersWithErrors;
  }

  public Customer remoteRoundToSellPackageQty(String remoteRoundToSellPackageQty) {
    this.remoteRoundToSellPackageQty = remoteRoundToSellPackageQty;
    return this;
  }

   /**
   * Desc: The Customer RemoteRoundToSellPackageQty  File: ENTITY  Attr: 68,13
   * @return remoteRoundToSellPackageQty
  **/
  @Schema(description = "Desc: The Customer RemoteRoundToSellPackageQty  File: ENTITY  Attr: 68,13")
  public String getRemoteRoundToSellPackageQty() {
    return remoteRoundToSellPackageQty;
  }

  public void setRemoteRoundToSellPackageQty(String remoteRoundToSellPackageQty) {
    this.remoteRoundToSellPackageQty = remoteRoundToSellPackageQty;
  }

  public Customer remoteBranchAvailOption(String remoteBranchAvailOption) {
    this.remoteBranchAvailOption = remoteBranchAvailOption;
    return this;
  }

   /**
   * Desc: The Customer RemoteBranchAvailOption  File: ENTITY  Attr: 68,15
   * @return remoteBranchAvailOption
  **/
  @Schema(description = "Desc: The Customer RemoteBranchAvailOption  File: ENTITY  Attr: 68,15")
  public String getRemoteBranchAvailOption() {
    return remoteBranchAvailOption;
  }

  public void setRemoteBranchAvailOption(String remoteBranchAvailOption) {
    this.remoteBranchAvailOption = remoteBranchAvailOption;
  }

  public Customer remoteWebDiscountPercentage(Double remoteWebDiscountPercentage) {
    this.remoteWebDiscountPercentage = remoteWebDiscountPercentage;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebDiscountPercentage  File: ENTITY  Attr: 68,16
   * @return remoteWebDiscountPercentage
  **/
  @Schema(description = "Desc: The Customer RemoteWebDiscountPercentage  File: ENTITY  Attr: 68,16")
  public Double getRemoteWebDiscountPercentage() {
    return remoteWebDiscountPercentage;
  }

  public void setRemoteWebDiscountPercentage(Double remoteWebDiscountPercentage) {
    this.remoteWebDiscountPercentage = remoteWebDiscountPercentage;
  }

  public Customer remoteWebArPassword(String remoteWebArPassword) {
    this.remoteWebArPassword = remoteWebArPassword;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebArPassword  File: ENTITY  Attr: 68,17
   * @return remoteWebArPassword
  **/
  @Schema(description = "Desc: The Customer RemoteWebArPassword  File: ENTITY  Attr: 68,17")
  public String getRemoteWebArPassword() {
    return remoteWebArPassword;
  }

  public void setRemoteWebArPassword(String remoteWebArPassword) {
    this.remoteWebArPassword = remoteWebArPassword;
  }

  public Customer remoteWebDisplayListPrice(Boolean remoteWebDisplayListPrice) {
    this.remoteWebDisplayListPrice = remoteWebDisplayListPrice;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebDisplayListPrice flag  File: ENTITY  Attr: 68,19
   * @return remoteWebDisplayListPrice
  **/
  @Schema(description = "Desc: The Customer RemoteWebDisplayListPrice flag  File: ENTITY  Attr: 68,19")
  public Boolean isRemoteWebDisplayListPrice() {
    return remoteWebDisplayListPrice;
  }

  public void setRemoteWebDisplayListPrice(Boolean remoteWebDisplayListPrice) {
    this.remoteWebDisplayListPrice = remoteWebDisplayListPrice;
  }

  public Customer remoteWebCreditCardPaymentRequired(Boolean remoteWebCreditCardPaymentRequired) {
    this.remoteWebCreditCardPaymentRequired = remoteWebCreditCardPaymentRequired;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebCreditCardPaymentRequired flag  File: ENTITY  Attr: 68,21
   * @return remoteWebCreditCardPaymentRequired
  **/
  @Schema(description = "Desc: The Customer RemoteWebCreditCardPaymentRequired flag  File: ENTITY  Attr: 68,21")
  public Boolean isRemoteWebCreditCardPaymentRequired() {
    return remoteWebCreditCardPaymentRequired;
  }

  public void setRemoteWebCreditCardPaymentRequired(Boolean remoteWebCreditCardPaymentRequired) {
    this.remoteWebCreditCardPaymentRequired = remoteWebCreditCardPaymentRequired;
  }

  public Customer remoteWebOrderedByRequired(Boolean remoteWebOrderedByRequired) {
    this.remoteWebOrderedByRequired = remoteWebOrderedByRequired;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebOrderedByRequired flag  File: ENTITY  Attr: 68,22
   * @return remoteWebOrderedByRequired
  **/
  @Schema(description = "Desc: The Customer RemoteWebOrderedByRequired flag  File: ENTITY  Attr: 68,22")
  public Boolean isRemoteWebOrderedByRequired() {
    return remoteWebOrderedByRequired;
  }

  public void setRemoteWebOrderedByRequired(Boolean remoteWebOrderedByRequired) {
    this.remoteWebOrderedByRequired = remoteWebOrderedByRequired;
  }

  public Customer remoteWebEnableShipToCreate(Boolean remoteWebEnableShipToCreate) {
    this.remoteWebEnableShipToCreate = remoteWebEnableShipToCreate;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebEnableShipToCreate flag  File: ENTITY  Attr: 68,23
   * @return remoteWebEnableShipToCreate
  **/
  @Schema(description = "Desc: The Customer RemoteWebEnableShipToCreate flag  File: ENTITY  Attr: 68,23")
  public Boolean isRemoteWebEnableShipToCreate() {
    return remoteWebEnableShipToCreate;
  }

  public void setRemoteWebEnableShipToCreate(Boolean remoteWebEnableShipToCreate) {
    this.remoteWebEnableShipToCreate = remoteWebEnableShipToCreate;
  }

  public Customer remoteWebHideArLedger(Boolean remoteWebHideArLedger) {
    this.remoteWebHideArLedger = remoteWebHideArLedger;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebHideArLedger flag  File: ENTITY  Attr: 68,24
   * @return remoteWebHideArLedger
  **/
  @Schema(description = "Desc: The Customer RemoteWebHideArLedger flag  File: ENTITY  Attr: 68,24")
  public Boolean isRemoteWebHideArLedger() {
    return remoteWebHideArLedger;
  }

  public void setRemoteWebHideArLedger(Boolean remoteWebHideArLedger) {
    this.remoteWebHideArLedger = remoteWebHideArLedger;
  }

  public Customer remoteWebHideArInquiry(Boolean remoteWebHideArInquiry) {
    this.remoteWebHideArInquiry = remoteWebHideArInquiry;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebHideArInquiry flag  File: ENTITY  Attr: 68,25
   * @return remoteWebHideArInquiry
  **/
  @Schema(description = "Desc: The Customer RemoteWebHideArInquiry flag  File: ENTITY  Attr: 68,25")
  public Boolean isRemoteWebHideArInquiry() {
    return remoteWebHideArInquiry;
  }

  public void setRemoteWebHideArInquiry(Boolean remoteWebHideArInquiry) {
    this.remoteWebHideArInquiry = remoteWebHideArInquiry;
  }

  public Customer remoteWebB2bPostUrlDefault(String remoteWebB2bPostUrlDefault) {
    this.remoteWebB2bPostUrlDefault = remoteWebB2bPostUrlDefault;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebB2bPostUrlDefault  File: ENTITY  Attr: 68,26,1
   * @return remoteWebB2bPostUrlDefault
  **/
  @Schema(description = "Desc: The Customer RemoteWebB2bPostUrlDefault  File: ENTITY  Attr: 68,26,1")
  public String getRemoteWebB2bPostUrlDefault() {
    return remoteWebB2bPostUrlDefault;
  }

  public void setRemoteWebB2bPostUrlDefault(String remoteWebB2bPostUrlDefault) {
    this.remoteWebB2bPostUrlDefault = remoteWebB2bPostUrlDefault;
  }

  public Customer remoteWebB2bPostUrlAcknowledgement(String remoteWebB2bPostUrlAcknowledgement) {
    this.remoteWebB2bPostUrlAcknowledgement = remoteWebB2bPostUrlAcknowledgement;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebB2bPostUrlAcknowledgement  File: ENTITY  Attr: 68,26,2
   * @return remoteWebB2bPostUrlAcknowledgement
  **/
  @Schema(description = "Desc: The Customer RemoteWebB2bPostUrlAcknowledgement  File: ENTITY  Attr: 68,26,2")
  public String getRemoteWebB2bPostUrlAcknowledgement() {
    return remoteWebB2bPostUrlAcknowledgement;
  }

  public void setRemoteWebB2bPostUrlAcknowledgement(String remoteWebB2bPostUrlAcknowledgement) {
    this.remoteWebB2bPostUrlAcknowledgement = remoteWebB2bPostUrlAcknowledgement;
  }

  public Customer remoteWebB2bPostUrlAdvanceShipNotice(String remoteWebB2bPostUrlAdvanceShipNotice) {
    this.remoteWebB2bPostUrlAdvanceShipNotice = remoteWebB2bPostUrlAdvanceShipNotice;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebB2bPostUrlAdvanceShipNotice  File: ENTITY  Attr: 68,26,3
   * @return remoteWebB2bPostUrlAdvanceShipNotice
  **/
  @Schema(description = "Desc: The Customer RemoteWebB2bPostUrlAdvanceShipNotice  File: ENTITY  Attr: 68,26,3")
  public String getRemoteWebB2bPostUrlAdvanceShipNotice() {
    return remoteWebB2bPostUrlAdvanceShipNotice;
  }

  public void setRemoteWebB2bPostUrlAdvanceShipNotice(String remoteWebB2bPostUrlAdvanceShipNotice) {
    this.remoteWebB2bPostUrlAdvanceShipNotice = remoteWebB2bPostUrlAdvanceShipNotice;
  }

  public Customer remoteWebB2bPostUrlInvoice(String remoteWebB2bPostUrlInvoice) {
    this.remoteWebB2bPostUrlInvoice = remoteWebB2bPostUrlInvoice;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebB2bPostUrlInvoice  File: ENTITY  Attr: 68,26,4
   * @return remoteWebB2bPostUrlInvoice
  **/
  @Schema(description = "Desc: The Customer RemoteWebB2bPostUrlInvoice  File: ENTITY  Attr: 68,26,4")
  public String getRemoteWebB2bPostUrlInvoice() {
    return remoteWebB2bPostUrlInvoice;
  }

  public void setRemoteWebB2bPostUrlInvoice(String remoteWebB2bPostUrlInvoice) {
    this.remoteWebB2bPostUrlInvoice = remoteWebB2bPostUrlInvoice;
  }

  public Customer remoteWebLogoffUrl(String remoteWebLogoffUrl) {
    this.remoteWebLogoffUrl = remoteWebLogoffUrl;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebLogoffUrl  File: ENTITY  Attr: 68,27
   * @return remoteWebLogoffUrl
  **/
  @Schema(description = "Desc: The Customer RemoteWebLogoffUrl  File: ENTITY  Attr: 68,27")
  public String getRemoteWebLogoffUrl() {
    return remoteWebLogoffUrl;
  }

  public void setRemoteWebLogoffUrl(String remoteWebLogoffUrl) {
    this.remoteWebLogoffUrl = remoteWebLogoffUrl;
  }

  public Customer remoteWebHideZeroPriceProducts(Boolean remoteWebHideZeroPriceProducts) {
    this.remoteWebHideZeroPriceProducts = remoteWebHideZeroPriceProducts;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebHideZeroPriceProducts flag  File: ENTITY  Attr: 68,28
   * @return remoteWebHideZeroPriceProducts
  **/
  @Schema(description = "Desc: The Customer RemoteWebHideZeroPriceProducts flag  File: ENTITY  Attr: 68,28")
  public Boolean isRemoteWebHideZeroPriceProducts() {
    return remoteWebHideZeroPriceProducts;
  }

  public void setRemoteWebHideZeroPriceProducts(Boolean remoteWebHideZeroPriceProducts) {
    this.remoteWebHideZeroPriceProducts = remoteWebHideZeroPriceProducts;
  }

  public Customer remoteWebNumberOfShipTosToDisplay(String remoteWebNumberOfShipTosToDisplay) {
    this.remoteWebNumberOfShipTosToDisplay = remoteWebNumberOfShipTosToDisplay;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebNumberOfShipTosToDisplay  File: ENTITY  Attr: 68,29
   * @return remoteWebNumberOfShipTosToDisplay
  **/
  @Schema(description = "Desc: The Customer RemoteWebNumberOfShipTosToDisplay  File: ENTITY  Attr: 68,29")
  public String getRemoteWebNumberOfShipTosToDisplay() {
    return remoteWebNumberOfShipTosToDisplay;
  }

  public void setRemoteWebNumberOfShipTosToDisplay(String remoteWebNumberOfShipTosToDisplay) {
    this.remoteWebNumberOfShipTosToDisplay = remoteWebNumberOfShipTosToDisplay;
  }

  public Customer remoteWebDisplayPdwItems(Boolean remoteWebDisplayPdwItems) {
    this.remoteWebDisplayPdwItems = remoteWebDisplayPdwItems;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebDisplayPdwItems flag  File: ENTITY  Attr: 68,30
   * @return remoteWebDisplayPdwItems
  **/
  @Schema(description = "Desc: The Customer RemoteWebDisplayPdwItems flag  File: ENTITY  Attr: 68,30")
  public Boolean isRemoteWebDisplayPdwItems() {
    return remoteWebDisplayPdwItems;
  }

  public void setRemoteWebDisplayPdwItems(Boolean remoteWebDisplayPdwItems) {
    this.remoteWebDisplayPdwItems = remoteWebDisplayPdwItems;
  }

  public Customer remoteWebDisplayCatalogItems(Boolean remoteWebDisplayCatalogItems) {
    this.remoteWebDisplayCatalogItems = remoteWebDisplayCatalogItems;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebDisplayCatalogItems flag  File: ENTITY  Attr: 68,31
   * @return remoteWebDisplayCatalogItems
  **/
  @Schema(description = "Desc: The Customer RemoteWebDisplayCatalogItems flag  File: ENTITY  Attr: 68,31")
  public Boolean isRemoteWebDisplayCatalogItems() {
    return remoteWebDisplayCatalogItems;
  }

  public void setRemoteWebDisplayCatalogItems(Boolean remoteWebDisplayCatalogItems) {
    this.remoteWebDisplayCatalogItems = remoteWebDisplayCatalogItems;
  }

  public Customer remoteWebAllowedPricingVarianceType(String remoteWebAllowedPricingVarianceType) {
    this.remoteWebAllowedPricingVarianceType = remoteWebAllowedPricingVarianceType;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebAllowedPricingVarianceType  File: ENTITY  Attr: 68,32,1
   * @return remoteWebAllowedPricingVarianceType
  **/
  @Schema(description = "Desc: The Customer RemoteWebAllowedPricingVarianceType  File: ENTITY  Attr: 68,32,1")
  public String getRemoteWebAllowedPricingVarianceType() {
    return remoteWebAllowedPricingVarianceType;
  }

  public void setRemoteWebAllowedPricingVarianceType(String remoteWebAllowedPricingVarianceType) {
    this.remoteWebAllowedPricingVarianceType = remoteWebAllowedPricingVarianceType;
  }

  public Customer remoteWebAllowedPricingVarianceValue(String remoteWebAllowedPricingVarianceValue) {
    this.remoteWebAllowedPricingVarianceValue = remoteWebAllowedPricingVarianceValue;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebAllowedPricingVarianceValue  File: ENTITY  Attr: 68,32,2
   * @return remoteWebAllowedPricingVarianceValue
  **/
  @Schema(description = "Desc: The Customer RemoteWebAllowedPricingVarianceValue  File: ENTITY  Attr: 68,32,2")
  public String getRemoteWebAllowedPricingVarianceValue() {
    return remoteWebAllowedPricingVarianceValue;
  }

  public void setRemoteWebAllowedPricingVarianceValue(String remoteWebAllowedPricingVarianceValue) {
    this.remoteWebAllowedPricingVarianceValue = remoteWebAllowedPricingVarianceValue;
  }

  public Customer remoteWebBidViewOnly(Boolean remoteWebBidViewOnly) {
    this.remoteWebBidViewOnly = remoteWebBidViewOnly;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebBidViewOnly flag  File: ENTITY  Attr: 68,33
   * @return remoteWebBidViewOnly
  **/
  @Schema(description = "Desc: The Customer RemoteWebBidViewOnly flag  File: ENTITY  Attr: 68,33")
  public Boolean isRemoteWebBidViewOnly() {
    return remoteWebBidViewOnly;
  }

  public void setRemoteWebBidViewOnly(Boolean remoteWebBidViewOnly) {
    this.remoteWebBidViewOnly = remoteWebBidViewOnly;
  }

  public Customer remoteWebXmlVendorId(String remoteWebXmlVendorId) {
    this.remoteWebXmlVendorId = remoteWebXmlVendorId;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebXmlVendorId  File: ENTITY  Attr: 68,34
   * @return remoteWebXmlVendorId
  **/
  @Schema(description = "Desc: The Customer RemoteWebXmlVendorId  File: ENTITY  Attr: 68,34")
  public String getRemoteWebXmlVendorId() {
    return remoteWebXmlVendorId;
  }

  public void setRemoteWebXmlVendorId(String remoteWebXmlVendorId) {
    this.remoteWebXmlVendorId = remoteWebXmlVendorId;
  }

  public Customer remoteWebXmlVendorLogin(String remoteWebXmlVendorLogin) {
    this.remoteWebXmlVendorLogin = remoteWebXmlVendorLogin;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebXmlVendorLogin  File: ENTITY  Attr: 68,35
   * @return remoteWebXmlVendorLogin
  **/
  @Schema(description = "Desc: The Customer RemoteWebXmlVendorLogin  File: ENTITY  Attr: 68,35")
  public String getRemoteWebXmlVendorLogin() {
    return remoteWebXmlVendorLogin;
  }

  public void setRemoteWebXmlVendorLogin(String remoteWebXmlVendorLogin) {
    this.remoteWebXmlVendorLogin = remoteWebXmlVendorLogin;
  }

  public Customer remoteWebXmlVendorPassword(String remoteWebXmlVendorPassword) {
    this.remoteWebXmlVendorPassword = remoteWebXmlVendorPassword;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebXmlVendorPassword  File: ENTITY  Attr: 68,36
   * @return remoteWebXmlVendorPassword
  **/
  @Schema(description = "Desc: The Customer RemoteWebXmlVendorPassword  File: ENTITY  Attr: 68,36")
  public String getRemoteWebXmlVendorPassword() {
    return remoteWebXmlVendorPassword;
  }

  public void setRemoteWebXmlVendorPassword(String remoteWebXmlVendorPassword) {
    this.remoteWebXmlVendorPassword = remoteWebXmlVendorPassword;
  }

  public Customer remoteWebXmlUsePartnerPricing(String remoteWebXmlUsePartnerPricing) {
    this.remoteWebXmlUsePartnerPricing = remoteWebXmlUsePartnerPricing;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebXmlUsePartnerPricing  File: ENTITY  Attr: 68,42
   * @return remoteWebXmlUsePartnerPricing
  **/
  @Schema(description = "Desc: The Customer RemoteWebXmlUsePartnerPricing  File: ENTITY  Attr: 68,42")
  public String getRemoteWebXmlUsePartnerPricing() {
    return remoteWebXmlUsePartnerPricing;
  }

  public void setRemoteWebXmlUsePartnerPricing(String remoteWebXmlUsePartnerPricing) {
    this.remoteWebXmlUsePartnerPricing = remoteWebXmlUsePartnerPricing;
  }

  public Customer remoteWebEnableShipBranchOverride(Boolean remoteWebEnableShipBranchOverride) {
    this.remoteWebEnableShipBranchOverride = remoteWebEnableShipBranchOverride;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebEnableShipBranchOverride flag  File: ENTITY  Attr: 68,37
   * @return remoteWebEnableShipBranchOverride
  **/
  @Schema(description = "Desc: The Customer RemoteWebEnableShipBranchOverride flag  File: ENTITY  Attr: 68,37")
  public Boolean isRemoteWebEnableShipBranchOverride() {
    return remoteWebEnableShipBranchOverride;
  }

  public void setRemoteWebEnableShipBranchOverride(Boolean remoteWebEnableShipBranchOverride) {
    this.remoteWebEnableShipBranchOverride = remoteWebEnableShipBranchOverride;
  }

  public Customer remoteWebCategoryDisplayId(String remoteWebCategoryDisplayId) {
    this.remoteWebCategoryDisplayId = remoteWebCategoryDisplayId;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebCategoryDisplayId  File: ENTITY  Attr: 148
   * @return remoteWebCategoryDisplayId
  **/
  @Schema(description = "Desc: The Customer RemoteWebCategoryDisplayId  File: ENTITY  Attr: 148")
  public String getRemoteWebCategoryDisplayId() {
    return remoteWebCategoryDisplayId;
  }

  public void setRemoteWebCategoryDisplayId(String remoteWebCategoryDisplayId) {
    this.remoteWebCategoryDisplayId = remoteWebCategoryDisplayId;
  }

  public Customer remoteVerifyProductAvailability(Boolean remoteVerifyProductAvailability) {
    this.remoteVerifyProductAvailability = remoteVerifyProductAvailability;
    return this;
  }

   /**
   * Desc: The Customer RemoteVerifyProductAvailability flag  File: ENTITY  Attr: 68,38
   * @return remoteVerifyProductAvailability
  **/
  @Schema(description = "Desc: The Customer RemoteVerifyProductAvailability flag  File: ENTITY  Attr: 68,38")
  public Boolean isRemoteVerifyProductAvailability() {
    return remoteVerifyProductAvailability;
  }

  public void setRemoteVerifyProductAvailability(Boolean remoteVerifyProductAvailability) {
    this.remoteVerifyProductAvailability = remoteVerifyProductAvailability;
  }

  public Customer remoteWebEnableShipToEdit(Boolean remoteWebEnableShipToEdit) {
    this.remoteWebEnableShipToEdit = remoteWebEnableShipToEdit;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebEnableShipToEdit flag  File: ENTITY  Attr: 68,39
   * @return remoteWebEnableShipToEdit
  **/
  @Schema(description = "Desc: The Customer RemoteWebEnableShipToEdit flag  File: ENTITY  Attr: 68,39")
  public Boolean isRemoteWebEnableShipToEdit() {
    return remoteWebEnableShipToEdit;
  }

  public void setRemoteWebEnableShipToEdit(Boolean remoteWebEnableShipToEdit) {
    this.remoteWebEnableShipToEdit = remoteWebEnableShipToEdit;
  }

  public Customer remoteWebAccessControlMethod(String remoteWebAccessControlMethod) {
    this.remoteWebAccessControlMethod = remoteWebAccessControlMethod;
    return this;
  }

   /**
   * Desc: The Customer RemoteWebAccessControlMethod  File: ENTITY  Attr: 68,43
   * @return remoteWebAccessControlMethod
  **/
  @Schema(description = "Desc: The Customer RemoteWebAccessControlMethod  File: ENTITY  Attr: 68,43")
  public String getRemoteWebAccessControlMethod() {
    return remoteWebAccessControlMethod;
  }

  public void setRemoteWebAccessControlMethod(String remoteWebAccessControlMethod) {
    this.remoteWebAccessControlMethod = remoteWebAccessControlMethod;
  }

  public Customer orderStatusOverride(String orderStatusOverride) {
    this.orderStatusOverride = orderStatusOverride;
    return this;
  }

   /**
   * Desc: The Customer OrderStatusOverride  File: ENTITY  Attr: 71
   * @return orderStatusOverride
  **/
  @Schema(description = "Desc: The Customer OrderStatusOverride  File: ENTITY  Attr: 71")
  public String getOrderStatusOverride() {
    return orderStatusOverride;
  }

  public void setOrderStatusOverride(String orderStatusOverride) {
    this.orderStatusOverride = orderStatusOverride;
  }

  public Customer salesSourceOverride(String salesSourceOverride) {
    this.salesSourceOverride = salesSourceOverride;
    return this;
  }

   /**
   * Desc: The Customer SalesSourceOverride  File: ENTITY  Attr: 72
   * @return salesSourceOverride
  **/
  @Schema(description = "Desc: The Customer SalesSourceOverride  File: ENTITY  Attr: 72")
  public String getSalesSourceOverride() {
    return salesSourceOverride;
  }

  public void setSalesSourceOverride(String salesSourceOverride) {
    this.salesSourceOverride = salesSourceOverride;
  }

  public Customer shipBranchOverride(String shipBranchOverride) {
    this.shipBranchOverride = shipBranchOverride;
    return this;
  }

   /**
   * Desc: The Customer ShipBranchOverride  File: ENTITY  Attr: 73,1
   * @return shipBranchOverride
  **/
  @Schema(description = "Desc: The Customer ShipBranchOverride  File: ENTITY  Attr: 73,1")
  public String getShipBranchOverride() {
    return shipBranchOverride;
  }

  public void setShipBranchOverride(String shipBranchOverride) {
    this.shipBranchOverride = shipBranchOverride;
  }

  public Customer priceBranchOverride(String priceBranchOverride) {
    this.priceBranchOverride = priceBranchOverride;
    return this;
  }

   /**
   * Desc: The Customer PriceBranchOverride  File: ENTITY  Attr: 73,2
   * @return priceBranchOverride
  **/
  @Schema(description = "Desc: The Customer PriceBranchOverride  File: ENTITY  Attr: 73,2")
  public String getPriceBranchOverride() {
    return priceBranchOverride;
  }

  public void setPriceBranchOverride(String priceBranchOverride) {
    this.priceBranchOverride = priceBranchOverride;
  }

  public Customer printKitComponentOverride(String printKitComponentOverride) {
    this.printKitComponentOverride = printKitComponentOverride;
    return this;
  }

   /**
   * Desc: The Customer PrintKitComponentOverride  File: ENTITY  Attr: 74
   * @return printKitComponentOverride
  **/
  @Schema(description = "Desc: The Customer PrintKitComponentOverride  File: ENTITY  Attr: 74")
  public String getPrintKitComponentOverride() {
    return printKitComponentOverride;
  }

  public void setPrintKitComponentOverride(String printKitComponentOverride) {
    this.printKitComponentOverride = printKitComponentOverride;
  }

  public Customer requiredDateLeadTime(String requiredDateLeadTime) {
    this.requiredDateLeadTime = requiredDateLeadTime;
    return this;
  }

   /**
   * Desc: The Customer RequiredDateLeadTime  File: ENTITY  Attr: 75
   * @return requiredDateLeadTime
  **/
  @Schema(description = "Desc: The Customer RequiredDateLeadTime  File: ENTITY  Attr: 75")
  public String getRequiredDateLeadTime() {
    return requiredDateLeadTime;
  }

  public void setRequiredDateLeadTime(String requiredDateLeadTime) {
    this.requiredDateLeadTime = requiredDateLeadTime;
  }

  public Customer maxEarlyShipDays(String maxEarlyShipDays) {
    this.maxEarlyShipDays = maxEarlyShipDays;
    return this;
  }

   /**
   * Desc: The Customer MaxEarlyShipDays  File: ENTITY  Attr: 76
   * @return maxEarlyShipDays
  **/
  @Schema(description = "Desc: The Customer MaxEarlyShipDays  File: ENTITY  Attr: 76")
  public String getMaxEarlyShipDays() {
    return maxEarlyShipDays;
  }

  public void setMaxEarlyShipDays(String maxEarlyShipDays) {
    this.maxEarlyShipDays = maxEarlyShipDays;
  }

  public Customer sicCode(String sicCode) {
    this.sicCode = sicCode;
    return this;
  }

   /**
   * Desc: The Customer SicCode  File: ENTITY  Attr: 77
   * @return sicCode
  **/
  @Schema(description = "Desc: The Customer SicCode  File: ENTITY  Attr: 77")
  public String getSicCode() {
    return sicCode;
  }

  public void setSicCode(String sicCode) {
    this.sicCode = sicCode;
  }

  public Customer customerSelectCodeId(String customerSelectCodeId) {
    this.customerSelectCodeId = customerSelectCodeId;
    return this;
  }

   /**
   * Desc: The Customer CustomerSelectCodeId  File: ENTITY  Attr: 78
   * @return customerSelectCodeId
  **/
  @Schema(description = "Desc: The Customer CustomerSelectCodeId  File: ENTITY  Attr: 78")
  public String getCustomerSelectCodeId() {
    return customerSelectCodeId;
  }

  public void setCustomerSelectCodeId(String customerSelectCodeId) {
    this.customerSelectCodeId = customerSelectCodeId;
  }

  public Customer parentStatementCustomerId(String parentStatementCustomerId) {
    this.parentStatementCustomerId = parentStatementCustomerId;
    return this;
  }

   /**
   * Desc: The Customer ParentStatementCustomerId  File: ENTITY  Attr: 80,1
   * @return parentStatementCustomerId
  **/
  @Schema(description = "Desc: The Customer ParentStatementCustomerId  File: ENTITY  Attr: 80,1")
  public String getParentStatementCustomerId() {
    return parentStatementCustomerId;
  }

  public void setParentStatementCustomerId(String parentStatementCustomerId) {
    this.parentStatementCustomerId = parentStatementCustomerId;
  }

  public Customer rankNumber1(String rankNumber1) {
    this.rankNumber1 = rankNumber1;
    return this;
  }

   /**
   * Desc: The Customer RankNumber1  File: ENTITY  Attr: 81,1
   * @return rankNumber1
  **/
  @Schema(description = "Desc: The Customer RankNumber1  File: ENTITY  Attr: 81,1")
  public String getRankNumber1() {
    return rankNumber1;
  }

  public void setRankNumber1(String rankNumber1) {
    this.rankNumber1 = rankNumber1;
  }

  public Customer rankNumber2(String rankNumber2) {
    this.rankNumber2 = rankNumber2;
    return this;
  }

   /**
   * Desc: The Customer RankNumber2  File: ENTITY  Attr: 81,2
   * @return rankNumber2
  **/
  @Schema(description = "Desc: The Customer RankNumber2  File: ENTITY  Attr: 81,2")
  public String getRankNumber2() {
    return rankNumber2;
  }

  public void setRankNumber2(String rankNumber2) {
    this.rankNumber2 = rankNumber2;
  }

  public Customer rankNumber3(String rankNumber3) {
    this.rankNumber3 = rankNumber3;
    return this;
  }

   /**
   * Desc: The Customer RankNumber3  File: ENTITY  Attr: 81,3
   * @return rankNumber3
  **/
  @Schema(description = "Desc: The Customer RankNumber3  File: ENTITY  Attr: 81,3")
  public String getRankNumber3() {
    return rankNumber3;
  }

  public void setRankNumber3(String rankNumber3) {
    this.rankNumber3 = rankNumber3;
  }

  public Customer rankNumber4(String rankNumber4) {
    this.rankNumber4 = rankNumber4;
    return this;
  }

   /**
   * Desc: The Customer RankNumber4  File: ENTITY  Attr: 81,4
   * @return rankNumber4
  **/
  @Schema(description = "Desc: The Customer RankNumber4  File: ENTITY  Attr: 81,4")
  public String getRankNumber4() {
    return rankNumber4;
  }

  public void setRankNumber4(String rankNumber4) {
    this.rankNumber4 = rankNumber4;
  }

  public Customer rankNumber5(String rankNumber5) {
    this.rankNumber5 = rankNumber5;
    return this;
  }

   /**
   * Desc: The Customer RankNumber5  File: ENTITY  Attr: 81,5
   * @return rankNumber5
  **/
  @Schema(description = "Desc: The Customer RankNumber5  File: ENTITY  Attr: 81,5")
  public String getRankNumber5() {
    return rankNumber5;
  }

  public void setRankNumber5(String rankNumber5) {
    this.rankNumber5 = rankNumber5;
  }

  public Customer singleInvoice(Boolean singleInvoice) {
    this.singleInvoice = singleInvoice;
    return this;
  }

   /**
   * Desc: The Customer SingleInvoice flag  File: ENTITY  Attr: 83
   * @return singleInvoice
  **/
  @Schema(description = "Desc: The Customer SingleInvoice flag  File: ENTITY  Attr: 83")
  public Boolean isSingleInvoice() {
    return singleInvoice;
  }

  public void setSingleInvoice(Boolean singleInvoice) {
    this.singleInvoice = singleInvoice;
  }

  public Customer maxCollectionDays(Integer maxCollectionDays) {
    this.maxCollectionDays = maxCollectionDays;
    return this;
  }

   /**
   * Desc: The Customer MaxCollectionDays  File: ENTITY  Attr: 84
   * @return maxCollectionDays
  **/
  @Schema(description = "Desc: The Customer MaxCollectionDays  File: ENTITY  Attr: 84")
  public Integer getMaxCollectionDays() {
    return maxCollectionDays;
  }

  public void setMaxCollectionDays(Integer maxCollectionDays) {
    this.maxCollectionDays = maxCollectionDays;
  }

  public Customer uetAllowedEarlyDays(Integer uetAllowedEarlyDays) {
    this.uetAllowedEarlyDays = uetAllowedEarlyDays;
    return this;
  }

   /**
   * Desc: The Customer UetAllowedEarlyDays  File: ENTITY  Attr: 86,1,1
   * @return uetAllowedEarlyDays
  **/
  @Schema(description = "Desc: The Customer UetAllowedEarlyDays  File: ENTITY  Attr: 86,1,1")
  public Integer getUetAllowedEarlyDays() {
    return uetAllowedEarlyDays;
  }

  public void setUetAllowedEarlyDays(Integer uetAllowedEarlyDays) {
    this.uetAllowedEarlyDays = uetAllowedEarlyDays;
  }

  public Customer uetAllowedLateDays(Integer uetAllowedLateDays) {
    this.uetAllowedLateDays = uetAllowedLateDays;
    return this;
  }

   /**
   * Desc: The Customer UetAllowedLateDays  File: ENTITY  Attr: 86,1,2
   * @return uetAllowedLateDays
  **/
  @Schema(description = "Desc: The Customer UetAllowedLateDays  File: ENTITY  Attr: 86,1,2")
  public Integer getUetAllowedLateDays() {
    return uetAllowedLateDays;
  }

  public void setUetAllowedLateDays(Integer uetAllowedLateDays) {
    this.uetAllowedLateDays = uetAllowedLateDays;
  }

  public Customer normalDeliveryTime(LocalDateTime normalDeliveryTime) {
    this.normalDeliveryTime = normalDeliveryTime;
    return this;
  }

   /**
   * Desc: The Customer NormalDeliveryTime  File: ENTITY  Attr: 87
   * @return normalDeliveryTime
  **/
  @Valid
  @Schema(description = "Desc: The Customer NormalDeliveryTime  File: ENTITY  Attr: 87")
  public LocalDateTime getNormalDeliveryTime() {
    return normalDeliveryTime;
  }

  public void setNormalDeliveryTime(LocalDateTime normalDeliveryTime) {
    this.normalDeliveryTime = normalDeliveryTime;
  }

  public Customer dunnBradstreetNumber(String dunnBradstreetNumber) {
    this.dunnBradstreetNumber = dunnBradstreetNumber;
    return this;
  }

   /**
   * Desc: The Customer DunnBradstreetNumber  File: ENTITY  Attr: 88
   * @return dunnBradstreetNumber
  **/
  @Schema(description = "Desc: The Customer DunnBradstreetNumber  File: ENTITY  Attr: 88")
  public String getDunnBradstreetNumber() {
    return dunnBradstreetNumber;
  }

  public void setDunnBradstreetNumber(String dunnBradstreetNumber) {
    this.dunnBradstreetNumber = dunnBradstreetNumber;
  }

  public Customer currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Desc: The Customer CurrencyCode  File: ENTITY  Attr: 90
   * @return currencyCode
  **/
  @Schema(description = "Desc: The Customer CurrencyCode  File: ENTITY  Attr: 90")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public Customer alternateBillingName(String alternateBillingName) {
    this.alternateBillingName = alternateBillingName;
    return this;
  }

   /**
   * Desc: The Customer AlternateBillingName  File: ENTITY  Attr: 91
   * @return alternateBillingName
  **/
  @Schema(description = "Desc: The Customer AlternateBillingName  File: ENTITY  Attr: 91")
  public String getAlternateBillingName() {
    return alternateBillingName;
  }

  public void setAlternateBillingName(String alternateBillingName) {
    this.alternateBillingName = alternateBillingName;
  }

  public Customer alternateBillingAddressLine1(String alternateBillingAddressLine1) {
    this.alternateBillingAddressLine1 = alternateBillingAddressLine1;
    return this;
  }

   /**
   * Desc: The Customer AlternateBillingAddressLine1  File: ENTITY  Attr: 92,1
   * @return alternateBillingAddressLine1
  **/
  @Schema(description = "Desc: The Customer AlternateBillingAddressLine1  File: ENTITY  Attr: 92,1")
  public String getAlternateBillingAddressLine1() {
    return alternateBillingAddressLine1;
  }

  public void setAlternateBillingAddressLine1(String alternateBillingAddressLine1) {
    this.alternateBillingAddressLine1 = alternateBillingAddressLine1;
  }

  public Customer alternateBillingAddressLine2(String alternateBillingAddressLine2) {
    this.alternateBillingAddressLine2 = alternateBillingAddressLine2;
    return this;
  }

   /**
   * Desc: The Customer AlternateBillingAddressLine2  File: ENTITY  Attr: 92,2
   * @return alternateBillingAddressLine2
  **/
  @Schema(description = "Desc: The Customer AlternateBillingAddressLine2  File: ENTITY  Attr: 92,2")
  public String getAlternateBillingAddressLine2() {
    return alternateBillingAddressLine2;
  }

  public void setAlternateBillingAddressLine2(String alternateBillingAddressLine2) {
    this.alternateBillingAddressLine2 = alternateBillingAddressLine2;
  }

  public Customer alternateBillingAddressLine3(String alternateBillingAddressLine3) {
    this.alternateBillingAddressLine3 = alternateBillingAddressLine3;
    return this;
  }

   /**
   * Desc: The Customer AlternateBillingAddressLine3  File: ENTITY  Attr: 92,3
   * @return alternateBillingAddressLine3
  **/
  @Schema(description = "Desc: The Customer AlternateBillingAddressLine3  File: ENTITY  Attr: 92,3")
  public String getAlternateBillingAddressLine3() {
    return alternateBillingAddressLine3;
  }

  public void setAlternateBillingAddressLine3(String alternateBillingAddressLine3) {
    this.alternateBillingAddressLine3 = alternateBillingAddressLine3;
  }

  public Customer alternateBillingAddressLine4(String alternateBillingAddressLine4) {
    this.alternateBillingAddressLine4 = alternateBillingAddressLine4;
    return this;
  }

   /**
   * Desc: The Customer AlternateBillingAddressLine4  File: ENTITY  Attr: 92,4
   * @return alternateBillingAddressLine4
  **/
  @Schema(description = "Desc: The Customer AlternateBillingAddressLine4  File: ENTITY  Attr: 92,4")
  public String getAlternateBillingAddressLine4() {
    return alternateBillingAddressLine4;
  }

  public void setAlternateBillingAddressLine4(String alternateBillingAddressLine4) {
    this.alternateBillingAddressLine4 = alternateBillingAddressLine4;
  }

  public Customer alternateBillingCity(String alternateBillingCity) {
    this.alternateBillingCity = alternateBillingCity;
    return this;
  }

   /**
   * Desc: The Customer AlternateBillingCity  File: ENTITY  Attr: 93
   * @return alternateBillingCity
  **/
  @Schema(description = "Desc: The Customer AlternateBillingCity  File: ENTITY  Attr: 93")
  public String getAlternateBillingCity() {
    return alternateBillingCity;
  }

  public void setAlternateBillingCity(String alternateBillingCity) {
    this.alternateBillingCity = alternateBillingCity;
  }

  public Customer alternateBillingState(String alternateBillingState) {
    this.alternateBillingState = alternateBillingState;
    return this;
  }

   /**
   * Desc: The Customer AlternateBillingState  File: ENTITY  Attr: 94
   * @return alternateBillingState
  **/
  @Schema(description = "Desc: The Customer AlternateBillingState  File: ENTITY  Attr: 94")
  public String getAlternateBillingState() {
    return alternateBillingState;
  }

  public void setAlternateBillingState(String alternateBillingState) {
    this.alternateBillingState = alternateBillingState;
  }

  public Customer alternateBillingPostalCode(String alternateBillingPostalCode) {
    this.alternateBillingPostalCode = alternateBillingPostalCode;
    return this;
  }

   /**
   * Desc: The Customer AlternateBillingPostalCode  File: ENTITY  Attr: 95
   * @return alternateBillingPostalCode
  **/
  @Schema(description = "Desc: The Customer AlternateBillingPostalCode  File: ENTITY  Attr: 95")
  public String getAlternateBillingPostalCode() {
    return alternateBillingPostalCode;
  }

  public void setAlternateBillingPostalCode(String alternateBillingPostalCode) {
    this.alternateBillingPostalCode = alternateBillingPostalCode;
  }

  public Customer alternateBillingFax(String alternateBillingFax) {
    this.alternateBillingFax = alternateBillingFax;
    return this;
  }

   /**
   * Desc: The Customer AlternateBillingFax  File: ENTITY  Attr: 121
   * @return alternateBillingFax
  **/
  @Schema(description = "Desc: The Customer AlternateBillingFax  File: ENTITY  Attr: 121")
  public String getAlternateBillingFax() {
    return alternateBillingFax;
  }

  public void setAlternateBillingFax(String alternateBillingFax) {
    this.alternateBillingFax = alternateBillingFax;
  }

  public Customer alternateBillingSortBy(String alternateBillingSortBy) {
    this.alternateBillingSortBy = alternateBillingSortBy;
    return this;
  }

   /**
   * Desc: The Customer AlternateBillingSortBy  File: ENTITY  Attr: 96
   * @return alternateBillingSortBy
  **/
  @Schema(description = "Desc: The Customer AlternateBillingSortBy  File: ENTITY  Attr: 96")
  public String getAlternateBillingSortBy() {
    return alternateBillingSortBy;
  }

  public void setAlternateBillingSortBy(String alternateBillingSortBy) {
    this.alternateBillingSortBy = alternateBillingSortBy;
  }

  public Customer alternateBillingUseShipToAddress(Boolean alternateBillingUseShipToAddress) {
    this.alternateBillingUseShipToAddress = alternateBillingUseShipToAddress;
    return this;
  }

   /**
   * Desc: The Customer AlternateBillingUseShipToAddress flag  File: ENTITY  Attr: 97
   * @return alternateBillingUseShipToAddress
  **/
  @Schema(description = "Desc: The Customer AlternateBillingUseShipToAddress flag  File: ENTITY  Attr: 97")
  public Boolean isAlternateBillingUseShipToAddress() {
    return alternateBillingUseShipToAddress;
  }

  public void setAlternateBillingUseShipToAddress(Boolean alternateBillingUseShipToAddress) {
    this.alternateBillingUseShipToAddress = alternateBillingUseShipToAddress;
  }

  public Customer glAccountOverride(Integer glAccountOverride) {
    this.glAccountOverride = glAccountOverride;
    return this;
  }

   /**
   * Desc: The Customer GlAccountOverride  File: ENTITY  Attr: 100
   * @return glAccountOverride
  **/
  @Schema(description = "Desc: The Customer GlAccountOverride  File: ENTITY  Attr: 100")
  public Integer getGlAccountOverride() {
    return glAccountOverride;
  }

  public void setGlAccountOverride(Integer glAccountOverride) {
    this.glAccountOverride = glAccountOverride;
  }

  public Customer substituteProductsOk(Boolean substituteProductsOk) {
    this.substituteProductsOk = substituteProductsOk;
    return this;
  }

   /**
   * Desc: The Customer SubstituteProductsOk flag  File: ENTITY  Attr: 104
   * @return substituteProductsOk
  **/
  @Schema(description = "Desc: The Customer SubstituteProductsOk flag  File: ENTITY  Attr: 104")
  public Boolean isSubstituteProductsOk() {
    return substituteProductsOk;
  }

  public void setSubstituteProductsOk(Boolean substituteProductsOk) {
    this.substituteProductsOk = substituteProductsOk;
  }

  public Customer lineItemTaxableCode(TaxableCode lineItemTaxableCode) {
    this.lineItemTaxableCode = lineItemTaxableCode;
    return this;
  }

   /**
   * Get lineItemTaxableCode
   * @return lineItemTaxableCode
  **/
  @Valid
  @Schema(description = "")
  public TaxableCode getLineItemTaxableCode() {
    return lineItemTaxableCode;
  }

  public void setLineItemTaxableCode(TaxableCode lineItemTaxableCode) {
    this.lineItemTaxableCode = lineItemTaxableCode;
  }

  public Customer disableDuplicatePoCheck(Boolean disableDuplicatePoCheck) {
    this.disableDuplicatePoCheck = disableDuplicatePoCheck;
    return this;
  }

   /**
   * Desc: The Customer DisableDuplicatePoCheck flag  File: ENTITY  Attr: 113
   * @return disableDuplicatePoCheck
  **/
  @Schema(description = "Desc: The Customer DisableDuplicatePoCheck flag  File: ENTITY  Attr: 113")
  public Boolean isDisableDuplicatePoCheck() {
    return disableDuplicatePoCheck;
  }

  public void setDisableDuplicatePoCheck(Boolean disableDuplicatePoCheck) {
    this.disableDuplicatePoCheck = disableDuplicatePoCheck;
  }

  public Customer webUrl(String webUrl) {
    this.webUrl = webUrl;
    return this;
  }

   /**
   * Desc: The Customer WebUrl  File: ENTITY  Attr: 114
   * @return webUrl
  **/
  @Schema(description = "Desc: The Customer WebUrl  File: ENTITY  Attr: 114")
  public String getWebUrl() {
    return webUrl;
  }

  public void setWebUrl(String webUrl) {
    this.webUrl = webUrl;
  }

  public Customer handlingExempt(Boolean handlingExempt) {
    this.handlingExempt = handlingExempt;
    return this;
  }

   /**
   * Desc: The Customer HandlingExempt flag  File: ENTITY  Attr: 117,1
   * @return handlingExempt
  **/
  @Schema(description = "Desc: The Customer HandlingExempt flag  File: ENTITY  Attr: 117,1")
  public Boolean isHandlingExempt() {
    return handlingExempt;
  }

  public void setHandlingExempt(Boolean handlingExempt) {
    this.handlingExempt = handlingExempt;
  }

  public Customer freightInsuranceRequired(Boolean freightInsuranceRequired) {
    this.freightInsuranceRequired = freightInsuranceRequired;
    return this;
  }

   /**
   * Desc: The Customer FreightInsuranceRequired flag  File: ENTITY  Attr: 117,2
   * @return freightInsuranceRequired
  **/
  @Schema(description = "Desc: The Customer FreightInsuranceRequired flag  File: ENTITY  Attr: 117,2")
  public Boolean isFreightInsuranceRequired() {
    return freightInsuranceRequired;
  }

  public void setFreightInsuranceRequired(Boolean freightInsuranceRequired) {
    this.freightInsuranceRequired = freightInsuranceRequired;
  }

  public Customer extraHandlingCharge(Boolean extraHandlingCharge) {
    this.extraHandlingCharge = extraHandlingCharge;
    return this;
  }

   /**
   * Desc: The Customer ExtraHandlingCharge flag  File: ENTITY  Attr: 117,3
   * @return extraHandlingCharge
  **/
  @Schema(description = "Desc: The Customer ExtraHandlingCharge flag  File: ENTITY  Attr: 117,3")
  public Boolean isExtraHandlingCharge() {
    return extraHandlingCharge;
  }

  public void setExtraHandlingCharge(Boolean extraHandlingCharge) {
    this.extraHandlingCharge = extraHandlingCharge;
  }

  public Customer freightExemptMinimumAmount(Double freightExemptMinimumAmount) {
    this.freightExemptMinimumAmount = freightExemptMinimumAmount;
    return this;
  }

   /**
   * Desc: The Customer FreightExemptMinimumAmount  File: ENTITY  Attr: 117,4
   * @return freightExemptMinimumAmount
  **/
  @Schema(description = "Desc: The Customer FreightExemptMinimumAmount  File: ENTITY  Attr: 117,4")
  public Double getFreightExemptMinimumAmount() {
    return freightExemptMinimumAmount;
  }

  public void setFreightExemptMinimumAmount(Double freightExemptMinimumAmount) {
    this.freightExemptMinimumAmount = freightExemptMinimumAmount;
  }

  public Customer residentialAddress(Boolean residentialAddress) {
    this.residentialAddress = residentialAddress;
    return this;
  }

   /**
   * Desc: The Customer ResidentialAddress flag  File: ENTITY  Attr: 117,5
   * @return residentialAddress
  **/
  @Schema(description = "Desc: The Customer ResidentialAddress flag  File: ENTITY  Attr: 117,5")
  public Boolean isResidentialAddress() {
    return residentialAddress;
  }

  public void setResidentialAddress(Boolean residentialAddress) {
    this.residentialAddress = residentialAddress;
  }

  public Customer commissionOverrideWriterPercentage(Double commissionOverrideWriterPercentage) {
    this.commissionOverrideWriterPercentage = commissionOverrideWriterPercentage;
    return this;
  }

   /**
   * Desc: The Customer CommissionOverrideWriterPercentage  File: ENTITY  Attr: 119,1
   * @return commissionOverrideWriterPercentage
  **/
  @Schema(description = "Desc: The Customer CommissionOverrideWriterPercentage  File: ENTITY  Attr: 119,1")
  public Double getCommissionOverrideWriterPercentage() {
    return commissionOverrideWriterPercentage;
  }

  public void setCommissionOverrideWriterPercentage(Double commissionOverrideWriterPercentage) {
    this.commissionOverrideWriterPercentage = commissionOverrideWriterPercentage;
  }

  public Customer commissionOverrideInsideSalesRepPercentage(Double commissionOverrideInsideSalesRepPercentage) {
    this.commissionOverrideInsideSalesRepPercentage = commissionOverrideInsideSalesRepPercentage;
    return this;
  }

   /**
   * Desc: The Customer CommissionOverrideInsideSalesRepPercentage  File: ENTITY  Attr: 119,2
   * @return commissionOverrideInsideSalesRepPercentage
  **/
  @Schema(description = "Desc: The Customer CommissionOverrideInsideSalesRepPercentage  File: ENTITY  Attr: 119,2")
  public Double getCommissionOverrideInsideSalesRepPercentage() {
    return commissionOverrideInsideSalesRepPercentage;
  }

  public void setCommissionOverrideInsideSalesRepPercentage(Double commissionOverrideInsideSalesRepPercentage) {
    this.commissionOverrideInsideSalesRepPercentage = commissionOverrideInsideSalesRepPercentage;
  }

  public Customer commissionOverrideOutsideSalesRepPercentage(Double commissionOverrideOutsideSalesRepPercentage) {
    this.commissionOverrideOutsideSalesRepPercentage = commissionOverrideOutsideSalesRepPercentage;
    return this;
  }

   /**
   * Desc: The Customer CommissionOverrideOutsideSalesRepPercentage  File: ENTITY  Attr: 119,3
   * @return commissionOverrideOutsideSalesRepPercentage
  **/
  @Schema(description = "Desc: The Customer CommissionOverrideOutsideSalesRepPercentage  File: ENTITY  Attr: 119,3")
  public Double getCommissionOverrideOutsideSalesRepPercentage() {
    return commissionOverrideOutsideSalesRepPercentage;
  }

  public void setCommissionOverrideOutsideSalesRepPercentage(Double commissionOverrideOutsideSalesRepPercentage) {
    this.commissionOverrideOutsideSalesRepPercentage = commissionOverrideOutsideSalesRepPercentage;
  }

  public Customer commissionReviewDate(LocalDateTime commissionReviewDate) {
    this.commissionReviewDate = commissionReviewDate;
    return this;
  }

   /**
   * Desc: The Customer CommissionReviewDate  File: ENTITY  Attr: 119,4
   * @return commissionReviewDate
  **/
  @Valid
  @Schema(description = "Desc: The Customer CommissionReviewDate  File: ENTITY  Attr: 119,4")
  public LocalDateTime getCommissionReviewDate() {
    return commissionReviewDate;
  }

  public void setCommissionReviewDate(LocalDateTime commissionReviewDate) {
    this.commissionReviewDate = commissionReviewDate;
  }

  public Customer commissionReason(String commissionReason) {
    this.commissionReason = commissionReason;
    return this;
  }

   /**
   * Desc: The Customer CommissionReason  File: ENTITY  Attr: 119,5
   * @return commissionReason
  **/
  @Schema(description = "Desc: The Customer CommissionReason  File: ENTITY  Attr: 119,5")
  public String getCommissionReason() {
    return commissionReason;
  }

  public void setCommissionReason(String commissionReason) {
    this.commissionReason = commissionReason;
  }

  public Customer invoiceTiffPdfOption(String invoiceTiffPdfOption) {
    this.invoiceTiffPdfOption = invoiceTiffPdfOption;
    return this;
  }

   /**
   * Desc: The Customer InvoiceTiffPdfOption  File: ENTITY  Attr: 120,1
   * @return invoiceTiffPdfOption
  **/
  @Schema(description = "Desc: The Customer InvoiceTiffPdfOption  File: ENTITY  Attr: 120,1")
  public String getInvoiceTiffPdfOption() {
    return invoiceTiffPdfOption;
  }

  public void setInvoiceTiffPdfOption(String invoiceTiffPdfOption) {
    this.invoiceTiffPdfOption = invoiceTiffPdfOption;
  }

  public Customer statementTiffPdfOption(String statementTiffPdfOption) {
    this.statementTiffPdfOption = statementTiffPdfOption;
    return this;
  }

   /**
   * Desc: The Customer StatementTiffPdfOption  File: ENTITY  Attr: 120,2
   * @return statementTiffPdfOption
  **/
  @Schema(description = "Desc: The Customer StatementTiffPdfOption  File: ENTITY  Attr: 120,2")
  public String getStatementTiffPdfOption() {
    return statementTiffPdfOption;
  }

  public void setStatementTiffPdfOption(String statementTiffPdfOption) {
    this.statementTiffPdfOption = statementTiffPdfOption;
  }

  public Customer orderEntryInternalNotes(String orderEntryInternalNotes) {
    this.orderEntryInternalNotes = orderEntryInternalNotes;
    return this;
  }

   /**
   * Desc: The Customer OrderEntryInternalNotes  File: ENTITY  Attr: 122
   * @return orderEntryInternalNotes
  **/
  @Schema(description = "Desc: The Customer OrderEntryInternalNotes  File: ENTITY  Attr: 122")
  public String getOrderEntryInternalNotes() {
    return orderEntryInternalNotes;
  }

  public void setOrderEntryInternalNotes(String orderEntryInternalNotes) {
    this.orderEntryInternalNotes = orderEntryInternalNotes;
  }

  public Customer productLastPriceCheck(String productLastPriceCheck) {
    this.productLastPriceCheck = productLastPriceCheck;
    return this;
  }

   /**
   * Desc: The Customer ProductLastPriceCheck  File: ENTITY  Attr: 123
   * @return productLastPriceCheck
  **/
  @Schema(description = "Desc: The Customer ProductLastPriceCheck  File: ENTITY  Attr: 123")
  public String getProductLastPriceCheck() {
    return productLastPriceCheck;
  }

  public void setProductLastPriceCheck(String productLastPriceCheck) {
    this.productLastPriceCheck = productLastPriceCheck;
  }

  public Customer consignedInventoryFlag(Boolean consignedInventoryFlag) {
    this.consignedInventoryFlag = consignedInventoryFlag;
    return this;
  }

   /**
   * Desc: The Customer ConsignedInventoryFlag  File: ENTITY  Attr: 124,1
   * @return consignedInventoryFlag
  **/
  @Schema(description = "Desc: The Customer ConsignedInventoryFlag  File: ENTITY  Attr: 124,1")
  public Boolean isConsignedInventoryFlag() {
    return consignedInventoryFlag;
  }

  public void setConsignedInventoryFlag(Boolean consignedInventoryFlag) {
    this.consignedInventoryFlag = consignedInventoryFlag;
  }

  public Customer consignedInventoryShipTo(Integer consignedInventoryShipTo) {
    this.consignedInventoryShipTo = consignedInventoryShipTo;
    return this;
  }

   /**
   * Desc: The Customer ConsignedInventoryShipTo  File: ENTITY  Attr: 124,2
   * @return consignedInventoryShipTo
  **/
  @Schema(description = "Desc: The Customer ConsignedInventoryShipTo  File: ENTITY  Attr: 124,2")
  public Integer getConsignedInventoryShipTo() {
    return consignedInventoryShipTo;
  }

  public void setConsignedInventoryShipTo(Integer consignedInventoryShipTo) {
    this.consignedInventoryShipTo = consignedInventoryShipTo;
  }

  public Customer creditManager(String creditManager) {
    this.creditManager = creditManager;
    return this;
  }

   /**
   * Desc: The Customer CreditManager  File: ENTITY  Attr: 125
   * @return creditManager
  **/
  @Schema(description = "Desc: The Customer CreditManager  File: ENTITY  Attr: 125")
  public String getCreditManager() {
    return creditManager;
  }

  public void setCreditManager(String creditManager) {
    this.creditManager = creditManager;
  }

  public Customer enableAnticipationCredit(Boolean enableAnticipationCredit) {
    this.enableAnticipationCredit = enableAnticipationCredit;
    return this;
  }

   /**
   * Desc: The Customer EnableAnticipationCredit flag  File: ENTITY  Attr: 126
   * @return enableAnticipationCredit
  **/
  @Schema(description = "Desc: The Customer EnableAnticipationCredit flag  File: ENTITY  Attr: 126")
  public Boolean isEnableAnticipationCredit() {
    return enableAnticipationCredit;
  }

  public void setEnableAnticipationCredit(Boolean enableAnticipationCredit) {
    this.enableAnticipationCredit = enableAnticipationCredit;
  }

  public Customer lastUpdateDateTime(LocalDateTime lastUpdateDateTime) {
    this.lastUpdateDateTime = lastUpdateDateTime;
    return this;
  }

   /**
   * Desc: The Customer LastUpdateDateTime  File: ENTITY  Attr: 127,1 and 127,2
   * @return lastUpdateDateTime
  **/
  @Valid
  @Schema(description = "Desc: The Customer LastUpdateDateTime  File: ENTITY  Attr: 127,1 and 127,2")
  public LocalDateTime getLastUpdateDateTime() {
    return lastUpdateDateTime;
  }

  public void setLastUpdateDateTime(LocalDateTime lastUpdateDateTime) {
    this.lastUpdateDateTime = lastUpdateDateTime;
  }

  public Customer includeServiceChargeInServiceChargeCalc(Boolean includeServiceChargeInServiceChargeCalc) {
    this.includeServiceChargeInServiceChargeCalc = includeServiceChargeInServiceChargeCalc;
    return this;
  }

   /**
   * Desc: The Customer IncludeServiceChargeInServiceChargeCalc flag  File: ENTITY  Attr: 128
   * @return includeServiceChargeInServiceChargeCalc
  **/
  @Schema(description = "Desc: The Customer IncludeServiceChargeInServiceChargeCalc flag  File: ENTITY  Attr: 128")
  public Boolean isIncludeServiceChargeInServiceChargeCalc() {
    return includeServiceChargeInServiceChargeCalc;
  }

  public void setIncludeServiceChargeInServiceChargeCalc(Boolean includeServiceChargeInServiceChargeCalc) {
    this.includeServiceChargeInServiceChargeCalc = includeServiceChargeInServiceChargeCalc;
  }

  public Customer additionalKeywords(String additionalKeywords) {
    this.additionalKeywords = additionalKeywords;
    return this;
  }

   /**
   * Desc: The Customer AdditionalKeywords  File: ENTITY  Attr: 129
   * @return additionalKeywords
  **/
  @Schema(description = "Desc: The Customer AdditionalKeywords  File: ENTITY  Attr: 129")
  public String getAdditionalKeywords() {
    return additionalKeywords;
  }

  public void setAdditionalKeywords(String additionalKeywords) {
    this.additionalKeywords = additionalKeywords;
  }

  public Customer commissionPlan(String commissionPlan) {
    this.commissionPlan = commissionPlan;
    return this;
  }

   /**
   * Desc: The Customer CommissionPlan  File: ENTITY  Attr: 130
   * @return commissionPlan
  **/
  @Schema(description = "Desc: The Customer CommissionPlan  File: ENTITY  Attr: 130")
  public String getCommissionPlan() {
    return commissionPlan;
  }

  public void setCommissionPlan(String commissionPlan) {
    this.commissionPlan = commissionPlan;
  }

  public Customer excludeFromSearchIndex(Boolean excludeFromSearchIndex) {
    this.excludeFromSearchIndex = excludeFromSearchIndex;
    return this;
  }

   /**
   * Desc: The Customer ExcludeFromSearchIndex flag  File: ENTITY  Attr: 132
   * @return excludeFromSearchIndex
  **/
  @Schema(description = "Desc: The Customer ExcludeFromSearchIndex flag  File: ENTITY  Attr: 132")
  public Boolean isExcludeFromSearchIndex() {
    return excludeFromSearchIndex;
  }

  public void setExcludeFromSearchIndex(Boolean excludeFromSearchIndex) {
    this.excludeFromSearchIndex = excludeFromSearchIndex;
  }

  public Customer timeZone(String timeZone) {
    this.timeZone = timeZone;
    return this;
  }

   /**
   * Desc: The Customer TimeZone  File: ENTITY  Attr: 134
   * @return timeZone
  **/
  @Schema(description = "Desc: The Customer TimeZone  File: ENTITY  Attr: 134")
  public String getTimeZone() {
    return timeZone;
  }

  public void setTimeZone(String timeZone) {
    this.timeZone = timeZone;
  }

  public Customer pricePrecisionNumberOfDecimals(String pricePrecisionNumberOfDecimals) {
    this.pricePrecisionNumberOfDecimals = pricePrecisionNumberOfDecimals;
    return this;
  }

   /**
   * Desc: The Customer PricePrecisionNumberOfDecimals  File: ENTITY  Attr: 137
   * @return pricePrecisionNumberOfDecimals
  **/
  @Schema(description = "Desc: The Customer PricePrecisionNumberOfDecimals  File: ENTITY  Attr: 137")
  public String getPricePrecisionNumberOfDecimals() {
    return pricePrecisionNumberOfDecimals;
  }

  public void setPricePrecisionNumberOfDecimals(String pricePrecisionNumberOfDecimals) {
    this.pricePrecisionNumberOfDecimals = pricePrecisionNumberOfDecimals;
  }

  public Customer excludeServiceCharges(Boolean excludeServiceCharges) {
    this.excludeServiceCharges = excludeServiceCharges;
    return this;
  }

   /**
   * Desc: The Customer ExcludeServiceCharges flag  File: ENTITY  Attr: 138
   * @return excludeServiceCharges
  **/
  @Schema(description = "Desc: The Customer ExcludeServiceCharges flag  File: ENTITY  Attr: 138")
  public Boolean isExcludeServiceCharges() {
    return excludeServiceCharges;
  }

  public void setExcludeServiceCharges(Boolean excludeServiceCharges) {
    this.excludeServiceCharges = excludeServiceCharges;
  }

  public Customer remitToOverrideId(String remitToOverrideId) {
    this.remitToOverrideId = remitToOverrideId;
    return this;
  }

   /**
   * Desc: The Customer RemitToOverrideId  File: ENTITY  Attr: 141
   * @return remitToOverrideId
  **/
  @Schema(description = "Desc: The Customer RemitToOverrideId  File: ENTITY  Attr: 141")
  public String getRemitToOverrideId() {
    return remitToOverrideId;
  }

  public void setRemitToOverrideId(String remitToOverrideId) {
    this.remitToOverrideId = remitToOverrideId;
  }

  public Customer backOrderPrintingOption(String backOrderPrintingOption) {
    this.backOrderPrintingOption = backOrderPrintingOption;
    return this;
  }

   /**
   * Desc: The Customer BackOrderPrintingOption  File: ENTITY  Attr: 143
   * @return backOrderPrintingOption
  **/
  @Schema(description = "Desc: The Customer BackOrderPrintingOption  File: ENTITY  Attr: 143")
  public String getBackOrderPrintingOption() {
    return backOrderPrintingOption;
  }

  public void setBackOrderPrintingOption(String backOrderPrintingOption) {
    this.backOrderPrintingOption = backOrderPrintingOption;
  }

  public Customer productDemandOverrideBranchId(String productDemandOverrideBranchId) {
    this.productDemandOverrideBranchId = productDemandOverrideBranchId;
    return this;
  }

   /**
   * Desc: The Customer ProductDemandOverrideBranchId  File: ENTITY  Attr: 144
   * @return productDemandOverrideBranchId
  **/
  @Schema(description = "Desc: The Customer ProductDemandOverrideBranchId  File: ENTITY  Attr: 144")
  public String getProductDemandOverrideBranchId() {
    return productDemandOverrideBranchId;
  }

  public void setProductDemandOverrideBranchId(String productDemandOverrideBranchId) {
    this.productDemandOverrideBranchId = productDemandOverrideBranchId;
  }

  public Customer arCollectionLastCallDate(LocalDateTime arCollectionLastCallDate) {
    this.arCollectionLastCallDate = arCollectionLastCallDate;
    return this;
  }

   /**
   * Desc: The Customer ArCollectionLastCallDate  File: ENTITY  Attr: 146,1
   * @return arCollectionLastCallDate
  **/
  @Valid
  @Schema(description = "Desc: The Customer ArCollectionLastCallDate  File: ENTITY  Attr: 146,1")
  public LocalDateTime getArCollectionLastCallDate() {
    return arCollectionLastCallDate;
  }

  public void setArCollectionLastCallDate(LocalDateTime arCollectionLastCallDate) {
    this.arCollectionLastCallDate = arCollectionLastCallDate;
  }

  public Customer arCollectionNextCallDate(LocalDateTime arCollectionNextCallDate) {
    this.arCollectionNextCallDate = arCollectionNextCallDate;
    return this;
  }

   /**
   * Desc: The Customer ArCollectionNextCallDate  File: ENTITY  Attr: 146,2
   * @return arCollectionNextCallDate
  **/
  @Valid
  @Schema(description = "Desc: The Customer ArCollectionNextCallDate  File: ENTITY  Attr: 146,2")
  public LocalDateTime getArCollectionNextCallDate() {
    return arCollectionNextCallDate;
  }

  public void setArCollectionNextCallDate(LocalDateTime arCollectionNextCallDate) {
    this.arCollectionNextCallDate = arCollectionNextCallDate;
  }

  public Customer arCollectionSentLetterFlag(Boolean arCollectionSentLetterFlag) {
    this.arCollectionSentLetterFlag = arCollectionSentLetterFlag;
    return this;
  }

   /**
   * Desc: The Customer ArCollectionSentLetterFlag  File: ENTITY  Attr: 146,3
   * @return arCollectionSentLetterFlag
  **/
  @Schema(description = "Desc: The Customer ArCollectionSentLetterFlag  File: ENTITY  Attr: 146,3")
  public Boolean isArCollectionSentLetterFlag() {
    return arCollectionSentLetterFlag;
  }

  public void setArCollectionSentLetterFlag(Boolean arCollectionSentLetterFlag) {
    this.arCollectionSentLetterFlag = arCollectionSentLetterFlag;
  }

  public Customer arCollectionLetterTypeId(String arCollectionLetterTypeId) {
    this.arCollectionLetterTypeId = arCollectionLetterTypeId;
    return this;
  }

   /**
   * Desc: The Customer ArCollectionLetterTypeId  File: ENTITY  Attr: 146,4
   * @return arCollectionLetterTypeId
  **/
  @Schema(description = "Desc: The Customer ArCollectionLetterTypeId  File: ENTITY  Attr: 146,4")
  public String getArCollectionLetterTypeId() {
    return arCollectionLetterTypeId;
  }

  public void setArCollectionLetterTypeId(String arCollectionLetterTypeId) {
    this.arCollectionLetterTypeId = arCollectionLetterTypeId;
  }

  public Customer arCollectionTotalCallCount(Integer arCollectionTotalCallCount) {
    this.arCollectionTotalCallCount = arCollectionTotalCallCount;
    return this;
  }

   /**
   * Desc: The Customer ArCollectionTotalCallCount  File: ENTITY  Attr: 146,5
   * @return arCollectionTotalCallCount
  **/
  @Schema(description = "Desc: The Customer ArCollectionTotalCallCount  File: ENTITY  Attr: 146,5")
  public Integer getArCollectionTotalCallCount() {
    return arCollectionTotalCallCount;
  }

  public void setArCollectionTotalCallCount(Integer arCollectionTotalCallCount) {
    this.arCollectionTotalCallCount = arCollectionTotalCallCount;
  }

  public Customer arCollectionExcludeOverdueInvoicePrint(Boolean arCollectionExcludeOverdueInvoicePrint) {
    this.arCollectionExcludeOverdueInvoicePrint = arCollectionExcludeOverdueInvoicePrint;
    return this;
  }

   /**
   * Desc: The Customer ArCollectionExcludeOverdueInvoicePrint flag  File: ENTITY  Attr: 167
   * @return arCollectionExcludeOverdueInvoicePrint
  **/
  @Schema(description = "Desc: The Customer ArCollectionExcludeOverdueInvoicePrint flag  File: ENTITY  Attr: 167")
  public Boolean isArCollectionExcludeOverdueInvoicePrint() {
    return arCollectionExcludeOverdueInvoicePrint;
  }

  public void setArCollectionExcludeOverdueInvoicePrint(Boolean arCollectionExcludeOverdueInvoicePrint) {
    this.arCollectionExcludeOverdueInvoicePrint = arCollectionExcludeOverdueInvoicePrint;
  }

  public Customer virtualSupplierAlternateCustomerId(String virtualSupplierAlternateCustomerId) {
    this.virtualSupplierAlternateCustomerId = virtualSupplierAlternateCustomerId;
    return this;
  }

   /**
   * Desc: The Customer VirtualSupplierAlternateCustomerId  File: ENTITY  Attr: 153,1
   * @return virtualSupplierAlternateCustomerId
  **/
  @Schema(description = "Desc: The Customer VirtualSupplierAlternateCustomerId  File: ENTITY  Attr: 153,1")
  public String getVirtualSupplierAlternateCustomerId() {
    return virtualSupplierAlternateCustomerId;
  }

  public void setVirtualSupplierAlternateCustomerId(String virtualSupplierAlternateCustomerId) {
    this.virtualSupplierAlternateCustomerId = virtualSupplierAlternateCustomerId;
  }

  public Customer virtualSupplierPassThroughDirect(Boolean virtualSupplierPassThroughDirect) {
    this.virtualSupplierPassThroughDirect = virtualSupplierPassThroughDirect;
    return this;
  }

   /**
   * Desc: The Customer VirtualSupplierPassThroughDirect  File: ENTITY  Attr: 153,2
   * @return virtualSupplierPassThroughDirect
  **/
  @Schema(description = "Desc: The Customer VirtualSupplierPassThroughDirect  File: ENTITY  Attr: 153,2")
  public Boolean isVirtualSupplierPassThroughDirect() {
    return virtualSupplierPassThroughDirect;
  }

  public void setVirtualSupplierPassThroughDirect(Boolean virtualSupplierPassThroughDirect) {
    this.virtualSupplierPassThroughDirect = virtualSupplierPassThroughDirect;
  }

  public Customer virtualSupplierDefaultVendorId(String virtualSupplierDefaultVendorId) {
    this.virtualSupplierDefaultVendorId = virtualSupplierDefaultVendorId;
    return this;
  }

   /**
   * Desc: The Customer VirtualSupplierDefaultVendorId  File: ENTITY  Attr: 153,3
   * @return virtualSupplierDefaultVendorId
  **/
  @Schema(description = "Desc: The Customer VirtualSupplierDefaultVendorId  File: ENTITY  Attr: 153,3")
  public String getVirtualSupplierDefaultVendorId() {
    return virtualSupplierDefaultVendorId;
  }

  public void setVirtualSupplierDefaultVendorId(String virtualSupplierDefaultVendorId) {
    this.virtualSupplierDefaultVendorId = virtualSupplierDefaultVendorId;
  }

  public Customer virtualSupplierDefaultShipBranchId(String virtualSupplierDefaultShipBranchId) {
    this.virtualSupplierDefaultShipBranchId = virtualSupplierDefaultShipBranchId;
    return this;
  }

   /**
   * Desc: The Customer VirtualSupplierDefaultShipBranchId  File: ENTITY  Attr: 153,4
   * @return virtualSupplierDefaultShipBranchId
  **/
  @Schema(description = "Desc: The Customer VirtualSupplierDefaultShipBranchId  File: ENTITY  Attr: 153,4")
  public String getVirtualSupplierDefaultShipBranchId() {
    return virtualSupplierDefaultShipBranchId;
  }

  public void setVirtualSupplierDefaultShipBranchId(String virtualSupplierDefaultShipBranchId) {
    this.virtualSupplierDefaultShipBranchId = virtualSupplierDefaultShipBranchId;
  }

  public Customer virtualSupplierDefaultPriceBranchId(String virtualSupplierDefaultPriceBranchId) {
    this.virtualSupplierDefaultPriceBranchId = virtualSupplierDefaultPriceBranchId;
    return this;
  }

   /**
   * Desc: The Customer VirtualSupplierDefaultPriceBranchId  File: ENTITY  Attr: 153,5
   * @return virtualSupplierDefaultPriceBranchId
  **/
  @Schema(description = "Desc: The Customer VirtualSupplierDefaultPriceBranchId  File: ENTITY  Attr: 153,5")
  public String getVirtualSupplierDefaultPriceBranchId() {
    return virtualSupplierDefaultPriceBranchId;
  }

  public void setVirtualSupplierDefaultPriceBranchId(String virtualSupplierDefaultPriceBranchId) {
    this.virtualSupplierDefaultPriceBranchId = virtualSupplierDefaultPriceBranchId;
  }

  public Customer excludeConsignmentBillingCredit(Boolean excludeConsignmentBillingCredit) {
    this.excludeConsignmentBillingCredit = excludeConsignmentBillingCredit;
    return this;
  }

   /**
   * Desc: The Customer ExcludeConsignmentBillingCredit flag  File: ENTITY  Attr: 154
   * @return excludeConsignmentBillingCredit
  **/
  @Schema(description = "Desc: The Customer ExcludeConsignmentBillingCredit flag  File: ENTITY  Attr: 154")
  public Boolean isExcludeConsignmentBillingCredit() {
    return excludeConsignmentBillingCredit;
  }

  public void setExcludeConsignmentBillingCredit(Boolean excludeConsignmentBillingCredit) {
    this.excludeConsignmentBillingCredit = excludeConsignmentBillingCredit;
  }

  public Customer restrictPriceChangesInOrderEntry(Boolean restrictPriceChangesInOrderEntry) {
    this.restrictPriceChangesInOrderEntry = restrictPriceChangesInOrderEntry;
    return this;
  }

   /**
   * Desc: The Customer RestrictPriceChangesInOrderEntry flag  File: ENTITY  Attr: 156
   * @return restrictPriceChangesInOrderEntry
  **/
  @Schema(description = "Desc: The Customer RestrictPriceChangesInOrderEntry flag  File: ENTITY  Attr: 156")
  public Boolean isRestrictPriceChangesInOrderEntry() {
    return restrictPriceChangesInOrderEntry;
  }

  public void setRestrictPriceChangesInOrderEntry(Boolean restrictPriceChangesInOrderEntry) {
    this.restrictPriceChangesInOrderEntry = restrictPriceChangesInOrderEntry;
  }

  public Customer additionalName(String additionalName) {
    this.additionalName = additionalName;
    return this;
  }

   /**
   * Desc: The Customer AdditionalName  File: ENTITY  Attr: 158
   * @return additionalName
  **/
  @Schema(description = "Desc: The Customer AdditionalName  File: ENTITY  Attr: 158")
  public String getAdditionalName() {
    return additionalName;
  }

  public void setAdditionalName(String additionalName) {
    this.additionalName = additionalName;
  }

  public Customer passAlongDiscountPercentage(Double passAlongDiscountPercentage) {
    this.passAlongDiscountPercentage = passAlongDiscountPercentage;
    return this;
  }

   /**
   * Desc: The Customer PassAlongDiscountPercentage  File: ENTITY  Attr: 164
   * @return passAlongDiscountPercentage
  **/
  @Schema(description = "Desc: The Customer PassAlongDiscountPercentage  File: ENTITY  Attr: 164")
  public Double getPassAlongDiscountPercentage() {
    return passAlongDiscountPercentage;
  }

  public void setPassAlongDiscountPercentage(Double passAlongDiscountPercentage) {
    this.passAlongDiscountPercentage = passAlongDiscountPercentage;
  }

  public Customer requireCheckVerification(Boolean requireCheckVerification) {
    this.requireCheckVerification = requireCheckVerification;
    return this;
  }

   /**
   * Desc: The Customer RequireCheckVerification flag  File: ENTITY  Attr: 166
   * @return requireCheckVerification
  **/
  @Schema(description = "Desc: The Customer RequireCheckVerification flag  File: ENTITY  Attr: 166")
  public Boolean isRequireCheckVerification() {
    return requireCheckVerification;
  }

  public void setRequireCheckVerification(Boolean requireCheckVerification) {
    this.requireCheckVerification = requireCheckVerification;
  }

  public Customer consolidateInvoiceFlag(Boolean consolidateInvoiceFlag) {
    this.consolidateInvoiceFlag = consolidateInvoiceFlag;
    return this;
  }

   /**
   * Desc: The Customer ConsolidateInvoiceFlag  File: ENTITY  Attr: 168
   * @return consolidateInvoiceFlag
  **/
  @Schema(description = "Desc: The Customer ConsolidateInvoiceFlag  File: ENTITY  Attr: 168")
  public Boolean isConsolidateInvoiceFlag() {
    return consolidateInvoiceFlag;
  }

  public void setConsolidateInvoiceFlag(Boolean consolidateInvoiceFlag) {
    this.consolidateInvoiceFlag = consolidateInvoiceFlag;
  }

  public Customer statementCycleCode(String statementCycleCode) {
    this.statementCycleCode = statementCycleCode;
    return this;
  }

   /**
   * Desc: The Customer StatementCycleCode  File: ENTITY  Attr: 169
   * @return statementCycleCode
  **/
  @Schema(description = "Desc: The Customer StatementCycleCode  File: ENTITY  Attr: 169")
  public String getStatementCycleCode() {
    return statementCycleCode;
  }

  public void setStatementCycleCode(String statementCycleCode) {
    this.statementCycleCode = statementCycleCode;
  }

  public Customer accountManager(String accountManager) {
    this.accountManager = accountManager;
    return this;
  }

   /**
   * Desc: The Customer AccountManager  File: ENTITY  Attr: 177,1
   * @return accountManager
  **/
  @Schema(description = "Desc: The Customer AccountManager  File: ENTITY  Attr: 177,1")
  public String getAccountManager() {
    return accountManager;
  }

  public void setAccountManager(String accountManager) {
    this.accountManager = accountManager;
  }

  public Customer orderEntryFillRatePercentage(Integer orderEntryFillRatePercentage) {
    this.orderEntryFillRatePercentage = orderEntryFillRatePercentage;
    return this;
  }

   /**
   * Desc: The Customer OrderEntryFillRatePercentage  File: ENTITY  Attr: 179,1
   * @return orderEntryFillRatePercentage
  **/
  @Schema(description = "Desc: The Customer OrderEntryFillRatePercentage  File: ENTITY  Attr: 179,1")
  public Integer getOrderEntryFillRatePercentage() {
    return orderEntryFillRatePercentage;
  }

  public void setOrderEntryFillRatePercentage(Integer orderEntryFillRatePercentage) {
    this.orderEntryFillRatePercentage = orderEntryFillRatePercentage;
  }

  public Customer orderEntryFillRateMeasurement(String orderEntryFillRateMeasurement) {
    this.orderEntryFillRateMeasurement = orderEntryFillRateMeasurement;
    return this;
  }

   /**
   * Desc: The Customer OrderEntryFillRateMeasurement  File: ENTITY  Attr: 179,2
   * @return orderEntryFillRateMeasurement
  **/
  @Schema(description = "Desc: The Customer OrderEntryFillRateMeasurement  File: ENTITY  Attr: 179,2")
  public String getOrderEntryFillRateMeasurement() {
    return orderEntryFillRateMeasurement;
  }

  public void setOrderEntryFillRateMeasurement(String orderEntryFillRateMeasurement) {
    this.orderEntryFillRateMeasurement = orderEntryFillRateMeasurement;
  }

  public Customer emailInvoicePrintStyle(String emailInvoicePrintStyle) {
    this.emailInvoicePrintStyle = emailInvoicePrintStyle;
    return this;
  }

   /**
   * Desc: The Customer EmailInvoicePrintStyle  File: ENTITY  Attr: 181,1
   * @return emailInvoicePrintStyle
  **/
  @Schema(description = "Desc: The Customer EmailInvoicePrintStyle  File: ENTITY  Attr: 181,1")
  public String getEmailInvoicePrintStyle() {
    return emailInvoicePrintStyle;
  }

  public void setEmailInvoicePrintStyle(String emailInvoicePrintStyle) {
    this.emailInvoicePrintStyle = emailInvoicePrintStyle;
  }

  public Customer emailBidPrintStyle(String emailBidPrintStyle) {
    this.emailBidPrintStyle = emailBidPrintStyle;
    return this;
  }

   /**
   * Desc: The Customer EmailBidPrintStyle  File: ENTITY  Attr: 181,2
   * @return emailBidPrintStyle
  **/
  @Schema(description = "Desc: The Customer EmailBidPrintStyle  File: ENTITY  Attr: 181,2")
  public String getEmailBidPrintStyle() {
    return emailBidPrintStyle;
  }

  public void setEmailBidPrintStyle(String emailBidPrintStyle) {
    this.emailBidPrintStyle = emailBidPrintStyle;
  }

  public Customer emailShipTicketPrintStyle(String emailShipTicketPrintStyle) {
    this.emailShipTicketPrintStyle = emailShipTicketPrintStyle;
    return this;
  }

   /**
   * Desc: The Customer EmailShipTicketPrintStyle  File: ENTITY  Attr: 181,3
   * @return emailShipTicketPrintStyle
  **/
  @Schema(description = "Desc: The Customer EmailShipTicketPrintStyle  File: ENTITY  Attr: 181,3")
  public String getEmailShipTicketPrintStyle() {
    return emailShipTicketPrintStyle;
  }

  public void setEmailShipTicketPrintStyle(String emailShipTicketPrintStyle) {
    this.emailShipTicketPrintStyle = emailShipTicketPrintStyle;
  }

  public Customer emailAcknowledgementPrintStyle(String emailAcknowledgementPrintStyle) {
    this.emailAcknowledgementPrintStyle = emailAcknowledgementPrintStyle;
    return this;
  }

   /**
   * Desc: The Customer EmailAcknowledgementPrintStyle  File: ENTITY  Attr: 181,4
   * @return emailAcknowledgementPrintStyle
  **/
  @Schema(description = "Desc: The Customer EmailAcknowledgementPrintStyle  File: ENTITY  Attr: 181,4")
  public String getEmailAcknowledgementPrintStyle() {
    return emailAcknowledgementPrintStyle;
  }

  public void setEmailAcknowledgementPrintStyle(String emailAcknowledgementPrintStyle) {
    this.emailAcknowledgementPrintStyle = emailAcknowledgementPrintStyle;
  }

  public Customer activityTriggerInheritOption(String activityTriggerInheritOption) {
    this.activityTriggerInheritOption = activityTriggerInheritOption;
    return this;
  }

   /**
   * Desc: The Customer ActivityTriggerInheritOption  File: ENTITY  Attr: 182
   * @return activityTriggerInheritOption
  **/
  @Schema(description = "Desc: The Customer ActivityTriggerInheritOption  File: ENTITY  Attr: 182")
  public String getActivityTriggerInheritOption() {
    return activityTriggerInheritOption;
  }

  public void setActivityTriggerInheritOption(String activityTriggerInheritOption) {
    this.activityTriggerInheritOption = activityTriggerInheritOption;
  }

  public Customer calculateOrderLevelSplitTaxFlag(Boolean calculateOrderLevelSplitTaxFlag) {
    this.calculateOrderLevelSplitTaxFlag = calculateOrderLevelSplitTaxFlag;
    return this;
  }

   /**
   * Desc: The Customer CalculateOrderLevelSplitTaxFlag  File: ENTITY  Attr: 183
   * @return calculateOrderLevelSplitTaxFlag
  **/
  @Schema(description = "Desc: The Customer CalculateOrderLevelSplitTaxFlag  File: ENTITY  Attr: 183")
  public Boolean isCalculateOrderLevelSplitTaxFlag() {
    return calculateOrderLevelSplitTaxFlag;
  }

  public void setCalculateOrderLevelSplitTaxFlag(Boolean calculateOrderLevelSplitTaxFlag) {
    this.calculateOrderLevelSplitTaxFlag = calculateOrderLevelSplitTaxFlag;
  }

  public Customer rfPickingAllowQtyIncrease(Boolean rfPickingAllowQtyIncrease) {
    this.rfPickingAllowQtyIncrease = rfPickingAllowQtyIncrease;
    return this;
  }

   /**
   * Desc: The Customer RfPickingAllowQtyIncrease flag  File: ENTITY  Attr: 188
   * @return rfPickingAllowQtyIncrease
  **/
  @Schema(description = "Desc: The Customer RfPickingAllowQtyIncrease flag  File: ENTITY  Attr: 188")
  public Boolean isRfPickingAllowQtyIncrease() {
    return rfPickingAllowQtyIncrease;
  }

  public void setRfPickingAllowQtyIncrease(Boolean rfPickingAllowQtyIncrease) {
    this.rfPickingAllowQtyIncrease = rfPickingAllowQtyIncrease;
  }

  public Customer telemarketingQueueAddToCallLog(Boolean telemarketingQueueAddToCallLog) {
    this.telemarketingQueueAddToCallLog = telemarketingQueueAddToCallLog;
    return this;
  }

   /**
   * Desc: The Customer TelemarketingQueueAddToCallLog flag  File: ENTITY  Attr: 192,1
   * @return telemarketingQueueAddToCallLog
  **/
  @Schema(description = "Desc: The Customer TelemarketingQueueAddToCallLog flag  File: ENTITY  Attr: 192,1")
  public Boolean isTelemarketingQueueAddToCallLog() {
    return telemarketingQueueAddToCallLog;
  }

  public void setTelemarketingQueueAddToCallLog(Boolean telemarketingQueueAddToCallLog) {
    this.telemarketingQueueAddToCallLog = telemarketingQueueAddToCallLog;
  }

  public Customer telemarketingQueueFollowUpDateDays(String telemarketingQueueFollowUpDateDays) {
    this.telemarketingQueueFollowUpDateDays = telemarketingQueueFollowUpDateDays;
    return this;
  }

   /**
   * Desc: The Customer TelemarketingQueueFollowUpDateDays  File: ENTITY  Attr: 192,2
   * @return telemarketingQueueFollowUpDateDays
  **/
  @Schema(description = "Desc: The Customer TelemarketingQueueFollowUpDateDays  File: ENTITY  Attr: 192,2")
  public String getTelemarketingQueueFollowUpDateDays() {
    return telemarketingQueueFollowUpDateDays;
  }

  public void setTelemarketingQueueFollowUpDateDays(String telemarketingQueueFollowUpDateDays) {
    this.telemarketingQueueFollowUpDateDays = telemarketingQueueFollowUpDateDays;
  }

  public Customer strategicPricingCustomerCategory(String strategicPricingCustomerCategory) {
    this.strategicPricingCustomerCategory = strategicPricingCustomerCategory;
    return this;
  }

   /**
   * Desc: The Customer StrategicPricingCustomerCategory  File: ENTITY  Attr: 196
   * @return strategicPricingCustomerCategory
  **/
  @Schema(description = "Desc: The Customer StrategicPricingCustomerCategory  File: ENTITY  Attr: 196")
  public String getStrategicPricingCustomerCategory() {
    return strategicPricingCustomerCategory;
  }

  public void setStrategicPricingCustomerCategory(String strategicPricingCustomerCategory) {
    this.strategicPricingCustomerCategory = strategicPricingCustomerCategory;
  }

  public Customer strategicPricingListPriceCostMethod(String strategicPricingListPriceCostMethod) {
    this.strategicPricingListPriceCostMethod = strategicPricingListPriceCostMethod;
    return this;
  }

   /**
   * Desc: The Customer StrategicPricingListPriceCostMethod  File: ENTITY  Attr: 197
   * @return strategicPricingListPriceCostMethod
  **/
  @Schema(description = "Desc: The Customer StrategicPricingListPriceCostMethod  File: ENTITY  Attr: 197")
  public String getStrategicPricingListPriceCostMethod() {
    return strategicPricingListPriceCostMethod;
  }

  public void setStrategicPricingListPriceCostMethod(String strategicPricingListPriceCostMethod) {
    this.strategicPricingListPriceCostMethod = strategicPricingListPriceCostMethod;
  }

  public Customer strategicPricingCustomerSize(String strategicPricingCustomerSize) {
    this.strategicPricingCustomerSize = strategicPricingCustomerSize;
    return this;
  }

   /**
   * Desc: The Customer StrategicPricingCustomerSize        Select the customer size, for example, Tiny or Huge, as recommended         from Strategic Pricing Associates.A customer must have a customer size assigned to use strategic prices.        Very Tiny,Tiny,Small,,Medium,Large,Huge  File: ENTITY  Attr: 203,1
   * @return strategicPricingCustomerSize
  **/
  @Schema(description = "Desc: The Customer StrategicPricingCustomerSize        Select the customer size, for example, Tiny or Huge, as recommended         from Strategic Pricing Associates.A customer must have a customer size assigned to use strategic prices.        Very Tiny,Tiny,Small,,Medium,Large,Huge  File: ENTITY  Attr: 203,1")
  public String getStrategicPricingCustomerSize() {
    return strategicPricingCustomerSize;
  }

  public void setStrategicPricingCustomerSize(String strategicPricingCustomerSize) {
    this.strategicPricingCustomerSize = strategicPricingCustomerSize;
  }

  public Customer strategicPricingCustomerSizeLastUpdated(LocalDateTime strategicPricingCustomerSizeLastUpdated) {
    this.strategicPricingCustomerSizeLastUpdated = strategicPricingCustomerSizeLastUpdated;
    return this;
  }

   /**
   * Desc : Customer size last updated date.  File : ENTITY  Attr : 203,2
   * @return strategicPricingCustomerSizeLastUpdated
  **/
  @Valid
  @Schema(description = "Desc : Customer size last updated date.  File : ENTITY  Attr : 203,2")
  public LocalDateTime getStrategicPricingCustomerSizeLastUpdated() {
    return strategicPricingCustomerSizeLastUpdated;
  }

  public void setStrategicPricingCustomerSizeLastUpdated(LocalDateTime strategicPricingCustomerSizeLastUpdated) {
    this.strategicPricingCustomerSizeLastUpdated = strategicPricingCustomerSizeLastUpdated;
  }

  public Customer requiresSpecialLabels(Boolean requiresSpecialLabels) {
    this.requiresSpecialLabels = requiresSpecialLabels;
    return this;
  }

   /**
   * Desc: The Customer RequiresSpecialLabels flag  File: ENTITY  Attr: 204,1
   * @return requiresSpecialLabels
  **/
  @Schema(description = "Desc: The Customer RequiresSpecialLabels flag  File: ENTITY  Attr: 204,1")
  public Boolean isRequiresSpecialLabels() {
    return requiresSpecialLabels;
  }

  public void setRequiresSpecialLabels(Boolean requiresSpecialLabels) {
    this.requiresSpecialLabels = requiresSpecialLabels;
  }

  public Customer requiresSpecialPackaging(Boolean requiresSpecialPackaging) {
    this.requiresSpecialPackaging = requiresSpecialPackaging;
    return this;
  }

   /**
   * Desc: The Customer RequiresSpecialPackaging flag  File: ENTITY  Attr: 204,2
   * @return requiresSpecialPackaging
  **/
  @Schema(description = "Desc: The Customer RequiresSpecialPackaging flag  File: ENTITY  Attr: 204,2")
  public Boolean isRequiresSpecialPackaging() {
    return requiresSpecialPackaging;
  }

  public void setRequiresSpecialPackaging(Boolean requiresSpecialPackaging) {
    this.requiresSpecialPackaging = requiresSpecialPackaging;
  }

  public Customer excludeFromAutomaticWriteOffOfCashReceipts(Boolean excludeFromAutomaticWriteOffOfCashReceipts) {
    this.excludeFromAutomaticWriteOffOfCashReceipts = excludeFromAutomaticWriteOffOfCashReceipts;
    return this;
  }

   /**
   * Desc: The Customer ExcludeFromAutomaticWriteOffOfCashReceipts flag  File: ENTITY  Attr: 205
   * @return excludeFromAutomaticWriteOffOfCashReceipts
  **/
  @Schema(description = "Desc: The Customer ExcludeFromAutomaticWriteOffOfCashReceipts flag  File: ENTITY  Attr: 205")
  public Boolean isExcludeFromAutomaticWriteOffOfCashReceipts() {
    return excludeFromAutomaticWriteOffOfCashReceipts;
  }

  public void setExcludeFromAutomaticWriteOffOfCashReceipts(Boolean excludeFromAutomaticWriteOffOfCashReceipts) {
    this.excludeFromAutomaticWriteOffOfCashReceipts = excludeFromAutomaticWriteOffOfCashReceipts;
  }

  public Customer excludeFromAutomaticWriteOffOfInvoice(Boolean excludeFromAutomaticWriteOffOfInvoice) {
    this.excludeFromAutomaticWriteOffOfInvoice = excludeFromAutomaticWriteOffOfInvoice;
    return this;
  }

   /**
   * Desc: The Customer ExcludeFromAutomaticWriteOffOfInvoice flag  File: ENTITY  Attr: 206
   * @return excludeFromAutomaticWriteOffOfInvoice
  **/
  @Schema(description = "Desc: The Customer ExcludeFromAutomaticWriteOffOfInvoice flag  File: ENTITY  Attr: 206")
  public Boolean isExcludeFromAutomaticWriteOffOfInvoice() {
    return excludeFromAutomaticWriteOffOfInvoice;
  }

  public void setExcludeFromAutomaticWriteOffOfInvoice(Boolean excludeFromAutomaticWriteOffOfInvoice) {
    this.excludeFromAutomaticWriteOffOfInvoice = excludeFromAutomaticWriteOffOfInvoice;
  }

  public Customer excludeFromDemandCalcAsofDate(LocalDateTime excludeFromDemandCalcAsofDate) {
    this.excludeFromDemandCalcAsofDate = excludeFromDemandCalcAsofDate;
    return this;
  }

   /**
   * Desc: The Customer ExcludeFromDemandCalcAsofDate  File: ENTITY  Attr: 212
   * @return excludeFromDemandCalcAsofDate
  **/
  @Valid
  @Schema(description = "Desc: The Customer ExcludeFromDemandCalcAsofDate  File: ENTITY  Attr: 212")
  public LocalDateTime getExcludeFromDemandCalcAsofDate() {
    return excludeFromDemandCalcAsofDate;
  }

  public void setExcludeFromDemandCalcAsofDate(LocalDateTime excludeFromDemandCalcAsofDate) {
    this.excludeFromDemandCalcAsofDate = excludeFromDemandCalcAsofDate;
  }

  public Customer accessLists(List<CustomerAccessList> accessLists) {
    this.accessLists = accessLists;
    return this;
  }

  public Customer addAccessListsItem(CustomerAccessList accessListsItem) {
    if (this.accessLists == null) {
      this.accessLists = new ArrayList<>();
    }
    this.accessLists.add(accessListsItem);
    return this;
  }

   /**
   * A list of Customer AccessLists
   * @return accessLists
  **/
  @Valid
  @Schema(description = "A list of Customer AccessLists")
  public List<CustomerAccessList> getAccessLists() {
    return accessLists;
  }

  public void setAccessLists(List<CustomerAccessList> accessLists) {
    this.accessLists = accessLists;
  }

  public Customer allowedPoNumbers(List<CustomerAllowedPoNumber> allowedPoNumbers) {
    this.allowedPoNumbers = allowedPoNumbers;
    return this;
  }

  public Customer addAllowedPoNumbersItem(CustomerAllowedPoNumber allowedPoNumbersItem) {
    if (this.allowedPoNumbers == null) {
      this.allowedPoNumbers = new ArrayList<>();
    }
    this.allowedPoNumbers.add(allowedPoNumbersItem);
    return this;
  }

   /**
   * A list of Customer AllowedPoNumbers
   * @return allowedPoNumbers
  **/
  @Valid
  @Schema(description = "A list of Customer AllowedPoNumbers")
  public List<CustomerAllowedPoNumber> getAllowedPoNumbers() {
    return allowedPoNumbers;
  }

  public void setAllowedPoNumbers(List<CustomerAllowedPoNumber> allowedPoNumbers) {
    this.allowedPoNumbers = allowedPoNumbers;
  }

  public Customer allowedPriceLines(List<CustomerAllowedPriceLine> allowedPriceLines) {
    this.allowedPriceLines = allowedPriceLines;
    return this;
  }

  public Customer addAllowedPriceLinesItem(CustomerAllowedPriceLine allowedPriceLinesItem) {
    if (this.allowedPriceLines == null) {
      this.allowedPriceLines = new ArrayList<>();
    }
    this.allowedPriceLines.add(allowedPriceLinesItem);
    return this;
  }

   /**
   * A list of Customer AllowedPriceLines
   * @return allowedPriceLines
  **/
  @Valid
  @Schema(description = "A list of Customer AllowedPriceLines")
  public List<CustomerAllowedPriceLine> getAllowedPriceLines() {
    return allowedPriceLines;
  }

  public void setAllowedPriceLines(List<CustomerAllowedPriceLine> allowedPriceLines) {
    this.allowedPriceLines = allowedPriceLines;
  }

  public Customer creditAuthPersonnelList(List<CustomerCreditAuthPersonnel> creditAuthPersonnelList) {
    this.creditAuthPersonnelList = creditAuthPersonnelList;
    return this;
  }

  public Customer addCreditAuthPersonnelListItem(CustomerCreditAuthPersonnel creditAuthPersonnelListItem) {
    if (this.creditAuthPersonnelList == null) {
      this.creditAuthPersonnelList = new ArrayList<>();
    }
    this.creditAuthPersonnelList.add(creditAuthPersonnelListItem);
    return this;
  }

   /**
   * A list of Customer CreditAuthPersonnelList
   * @return creditAuthPersonnelList
  **/
  @Valid
  @Schema(description = "A list of Customer CreditAuthPersonnelList")
  public List<CustomerCreditAuthPersonnel> getCreditAuthPersonnelList() {
    return creditAuthPersonnelList;
  }

  public void setCreditAuthPersonnelList(List<CustomerCreditAuthPersonnel> creditAuthPersonnelList) {
    this.creditAuthPersonnelList = creditAuthPersonnelList;
  }

  public Customer creditEftList(List<CustomerCreditEft> creditEftList) {
    this.creditEftList = creditEftList;
    return this;
  }

  public Customer addCreditEftListItem(CustomerCreditEft creditEftListItem) {
    if (this.creditEftList == null) {
      this.creditEftList = new ArrayList<>();
    }
    this.creditEftList.add(creditEftListItem);
    return this;
  }

   /**
   * A list of Customer CreditEftList
   * @return creditEftList
  **/
  @Valid
  @Schema(description = "A list of Customer CreditEftList")
  public List<CustomerCreditEft> getCreditEftList() {
    return creditEftList;
  }

  public void setCreditEftList(List<CustomerCreditEft> creditEftList) {
    this.creditEftList = creditEftList;
  }

  public Customer ediContractUploadLists(List<CustomerEdiContractUploadList> ediContractUploadLists) {
    this.ediContractUploadLists = ediContractUploadLists;
    return this;
  }

  public Customer addEdiContractUploadListsItem(CustomerEdiContractUploadList ediContractUploadListsItem) {
    if (this.ediContractUploadLists == null) {
      this.ediContractUploadLists = new ArrayList<>();
    }
    this.ediContractUploadLists.add(ediContractUploadListsItem);
    return this;
  }

   /**
   * A list of Customer EdiContractUploadLists
   * @return ediContractUploadLists
  **/
  @Valid
  @Schema(description = "A list of Customer EdiContractUploadLists")
  public List<CustomerEdiContractUploadList> getEdiContractUploadLists() {
    return ediContractUploadLists;
  }

  public void setEdiContractUploadLists(List<CustomerEdiContractUploadList> ediContractUploadLists) {
    this.ediContractUploadLists = ediContractUploadLists;
  }

  public Customer emails(List<CustomerEmail> emails) {
    this.emails = emails;
    return this;
  }

  public Customer addEmailsItem(CustomerEmail emailsItem) {
    if (this.emails == null) {
      this.emails = new ArrayList<>();
    }
    this.emails.add(emailsItem);
    return this;
  }

   /**
   * A list of Customer Emails
   * @return emails
  **/
  @Valid
  @Schema(description = "A list of Customer Emails")
  public List<CustomerEmail> getEmails() {
    return emails;
  }

  public void setEmails(List<CustomerEmail> emails) {
    this.emails = emails;
  }

  public Customer freightCarrierInfoList(List<CustomerFreightCarrierInfo> freightCarrierInfoList) {
    this.freightCarrierInfoList = freightCarrierInfoList;
    return this;
  }

  public Customer addFreightCarrierInfoListItem(CustomerFreightCarrierInfo freightCarrierInfoListItem) {
    if (this.freightCarrierInfoList == null) {
      this.freightCarrierInfoList = new ArrayList<>();
    }
    this.freightCarrierInfoList.add(freightCarrierInfoListItem);
    return this;
  }

   /**
   * A list of Customer FreightCarrierInfoList
   * @return freightCarrierInfoList
  **/
  @Valid
  @Schema(description = "A list of Customer FreightCarrierInfoList")
  public List<CustomerFreightCarrierInfo> getFreightCarrierInfoList() {
    return freightCarrierInfoList;
  }

  public void setFreightCarrierInfoList(List<CustomerFreightCarrierInfo> freightCarrierInfoList) {
    this.freightCarrierInfoList = freightCarrierInfoList;
  }

  public Customer orderEntryPrompts(List<CustomerOrderEntryPrompt> orderEntryPrompts) {
    this.orderEntryPrompts = orderEntryPrompts;
    return this;
  }

  public Customer addOrderEntryPromptsItem(CustomerOrderEntryPrompt orderEntryPromptsItem) {
    if (this.orderEntryPrompts == null) {
      this.orderEntryPrompts = new ArrayList<>();
    }
    this.orderEntryPrompts.add(orderEntryPromptsItem);
    return this;
  }

   /**
   * A list of Customer OrderEntryPrompts
   * @return orderEntryPrompts
  **/
  @Valid
  @Schema(description = "A list of Customer OrderEntryPrompts")
  public List<CustomerOrderEntryPrompt> getOrderEntryPrompts() {
    return orderEntryPrompts;
  }

  public void setOrderEntryPrompts(List<CustomerOrderEntryPrompt> orderEntryPrompts) {
    this.orderEntryPrompts = orderEntryPrompts;
  }

  public Customer phones(List<CustomerPhone> phones) {
    this.phones = phones;
    return this;
  }

  public Customer addPhonesItem(CustomerPhone phonesItem) {
    if (this.phones == null) {
      this.phones = new ArrayList<>();
    }
    this.phones.add(phonesItem);
    return this;
  }

   /**
   * A list of Customer Phones
   * @return phones
  **/
  @Valid
  @Schema(description = "A list of Customer Phones")
  public List<CustomerPhone> getPhones() {
    return phones;
  }

  public void setPhones(List<CustomerPhone> phones) {
    this.phones = phones;
  }

  public Customer priceClassOverrides(List<CustomerPriceClassOverride> priceClassOverrides) {
    this.priceClassOverrides = priceClassOverrides;
    return this;
  }

  public Customer addPriceClassOverridesItem(CustomerPriceClassOverride priceClassOverridesItem) {
    if (this.priceClassOverrides == null) {
      this.priceClassOverrides = new ArrayList<>();
    }
    this.priceClassOverrides.add(priceClassOverridesItem);
    return this;
  }

   /**
   * A list of Customer PriceClassOverrides
   * @return priceClassOverrides
  **/
  @Valid
  @Schema(description = "A list of Customer PriceClassOverrides")
  public List<CustomerPriceClassOverride> getPriceClassOverrides() {
    return priceClassOverrides;
  }

  public void setPriceClassOverrides(List<CustomerPriceClassOverride> priceClassOverrides) {
    this.priceClassOverrides = priceClassOverrides;
  }

  public Customer pricingContractCustomerLists(List<CustomerPricingContractCustomerList> pricingContractCustomerLists) {
    this.pricingContractCustomerLists = pricingContractCustomerLists;
    return this;
  }

  public Customer addPricingContractCustomerListsItem(CustomerPricingContractCustomerList pricingContractCustomerListsItem) {
    if (this.pricingContractCustomerLists == null) {
      this.pricingContractCustomerLists = new ArrayList<>();
    }
    this.pricingContractCustomerLists.add(pricingContractCustomerListsItem);
    return this;
  }

   /**
   * A list of Customer PricingContractCustomerLists
   * @return pricingContractCustomerLists
  **/
  @Valid
  @Schema(description = "A list of Customer PricingContractCustomerLists")
  public List<CustomerPricingContractCustomerList> getPricingContractCustomerLists() {
    return pricingContractCustomerLists;
  }

  public void setPricingContractCustomerLists(List<CustomerPricingContractCustomerList> pricingContractCustomerLists) {
    this.pricingContractCustomerLists = pricingContractCustomerLists;
  }

  public Customer productCertifications(List<CustomerProductCertification> productCertifications) {
    this.productCertifications = productCertifications;
    return this;
  }

  public Customer addProductCertificationsItem(CustomerProductCertification productCertificationsItem) {
    if (this.productCertifications == null) {
      this.productCertifications = new ArrayList<>();
    }
    this.productCertifications.add(productCertificationsItem);
    return this;
  }

   /**
   * A list of Customer ProductCertifications
   * @return productCertifications
  **/
  @Valid
  @Schema(description = "A list of Customer ProductCertifications")
  public List<CustomerProductCertification> getProductCertifications() {
    return productCertifications;
  }

  public void setProductCertifications(List<CustomerProductCertification> productCertifications) {
    this.productCertifications = productCertifications;
  }

  public Customer productZones(List<CustomerProductZone> productZones) {
    this.productZones = productZones;
    return this;
  }

  public Customer addProductZonesItem(CustomerProductZone productZonesItem) {
    if (this.productZones == null) {
      this.productZones = new ArrayList<>();
    }
    this.productZones.add(productZonesItem);
    return this;
  }

   /**
   * A list of Customer ProductZones
   * @return productZones
  **/
  @Valid
  @Schema(description = "A list of Customer ProductZones")
  public List<CustomerProductZone> getProductZones() {
    return productZones;
  }

  public void setProductZones(List<CustomerProductZone> productZones) {
    this.productZones = productZones;
  }

  public Customer rebates(List<CustomerRebate> rebates) {
    this.rebates = rebates;
    return this;
  }

  public Customer addRebatesItem(CustomerRebate rebatesItem) {
    if (this.rebates == null) {
      this.rebates = new ArrayList<>();
    }
    this.rebates.add(rebatesItem);
    return this;
  }

   /**
   * A list of Customer Rebates
   * @return rebates
  **/
  @Valid
  @Schema(description = "A list of Customer Rebates")
  public List<CustomerRebate> getRebates() {
    return rebates;
  }

  public void setRebates(List<CustomerRebate> rebates) {
    this.rebates = rebates;
  }

  public Customer remoteChangeOrderMessageUsers(List<CustomerRemoteChangeOrderMessageUser> remoteChangeOrderMessageUsers) {
    this.remoteChangeOrderMessageUsers = remoteChangeOrderMessageUsers;
    return this;
  }

  public Customer addRemoteChangeOrderMessageUsersItem(CustomerRemoteChangeOrderMessageUser remoteChangeOrderMessageUsersItem) {
    if (this.remoteChangeOrderMessageUsers == null) {
      this.remoteChangeOrderMessageUsers = new ArrayList<>();
    }
    this.remoteChangeOrderMessageUsers.add(remoteChangeOrderMessageUsersItem);
    return this;
  }

   /**
   * A list of Customer RemoteChangeOrderMessageUsers
   * @return remoteChangeOrderMessageUsers
  **/
  @Valid
  @Schema(description = "A list of Customer RemoteChangeOrderMessageUsers")
  public List<CustomerRemoteChangeOrderMessageUser> getRemoteChangeOrderMessageUsers() {
    return remoteChangeOrderMessageUsers;
  }

  public void setRemoteChangeOrderMessageUsers(List<CustomerRemoteChangeOrderMessageUser> remoteChangeOrderMessageUsers) {
    this.remoteChangeOrderMessageUsers = remoteChangeOrderMessageUsers;
  }

  public Customer remoteEcommerceIds(List<CustomerRemoteEcommerce> remoteEcommerceIds) {
    this.remoteEcommerceIds = remoteEcommerceIds;
    return this;
  }

  public Customer addRemoteEcommerceIdsItem(CustomerRemoteEcommerce remoteEcommerceIdsItem) {
    if (this.remoteEcommerceIds == null) {
      this.remoteEcommerceIds = new ArrayList<>();
    }
    this.remoteEcommerceIds.add(remoteEcommerceIdsItem);
    return this;
  }

   /**
   * A list of Customer RemoteEcommerceIds
   * @return remoteEcommerceIds
  **/
  @Valid
  @Schema(description = "A list of Customer RemoteEcommerceIds")
  public List<CustomerRemoteEcommerce> getRemoteEcommerceIds() {
    return remoteEcommerceIds;
  }

  public void setRemoteEcommerceIds(List<CustomerRemoteEcommerce> remoteEcommerceIds) {
    this.remoteEcommerceIds = remoteEcommerceIds;
  }

  public Customer remoteErrorMessageUsers(List<CustomerRemoteErrorMessageUser> remoteErrorMessageUsers) {
    this.remoteErrorMessageUsers = remoteErrorMessageUsers;
    return this;
  }

  public Customer addRemoteErrorMessageUsersItem(CustomerRemoteErrorMessageUser remoteErrorMessageUsersItem) {
    if (this.remoteErrorMessageUsers == null) {
      this.remoteErrorMessageUsers = new ArrayList<>();
    }
    this.remoteErrorMessageUsers.add(remoteErrorMessageUsersItem);
    return this;
  }

   /**
   * A list of Customer RemoteErrorMessageUsers
   * @return remoteErrorMessageUsers
  **/
  @Valid
  @Schema(description = "A list of Customer RemoteErrorMessageUsers")
  public List<CustomerRemoteErrorMessageUser> getRemoteErrorMessageUsers() {
    return remoteErrorMessageUsers;
  }

  public void setRemoteErrorMessageUsers(List<CustomerRemoteErrorMessageUser> remoteErrorMessageUsers) {
    this.remoteErrorMessageUsers = remoteErrorMessageUsers;
  }

  public Customer remoteLoginMessageUsers(List<CustomerRemoteLoginMessageUser> remoteLoginMessageUsers) {
    this.remoteLoginMessageUsers = remoteLoginMessageUsers;
    return this;
  }

  public Customer addRemoteLoginMessageUsersItem(CustomerRemoteLoginMessageUser remoteLoginMessageUsersItem) {
    if (this.remoteLoginMessageUsers == null) {
      this.remoteLoginMessageUsers = new ArrayList<>();
    }
    this.remoteLoginMessageUsers.add(remoteLoginMessageUsersItem);
    return this;
  }

   /**
   * A list of Customer RemoteLoginMessageUsers
   * @return remoteLoginMessageUsers
  **/
  @Valid
  @Schema(description = "A list of Customer RemoteLoginMessageUsers")
  public List<CustomerRemoteLoginMessageUser> getRemoteLoginMessageUsers() {
    return remoteLoginMessageUsers;
  }

  public void setRemoteLoginMessageUsers(List<CustomerRemoteLoginMessageUser> remoteLoginMessageUsers) {
    this.remoteLoginMessageUsers = remoteLoginMessageUsers;
  }

  public Customer remoteNewOrderMessageUsers(List<CustomerRemoteNewOrderMessageUser> remoteNewOrderMessageUsers) {
    this.remoteNewOrderMessageUsers = remoteNewOrderMessageUsers;
    return this;
  }

  public Customer addRemoteNewOrderMessageUsersItem(CustomerRemoteNewOrderMessageUser remoteNewOrderMessageUsersItem) {
    if (this.remoteNewOrderMessageUsers == null) {
      this.remoteNewOrderMessageUsers = new ArrayList<>();
    }
    this.remoteNewOrderMessageUsers.add(remoteNewOrderMessageUsersItem);
    return this;
  }

   /**
   * A list of Customer RemoteNewOrderMessageUsers
   * @return remoteNewOrderMessageUsers
  **/
  @Valid
  @Schema(description = "A list of Customer RemoteNewOrderMessageUsers")
  public List<CustomerRemoteNewOrderMessageUser> getRemoteNewOrderMessageUsers() {
    return remoteNewOrderMessageUsers;
  }

  public void setRemoteNewOrderMessageUsers(List<CustomerRemoteNewOrderMessageUser> remoteNewOrderMessageUsers) {
    this.remoteNewOrderMessageUsers = remoteNewOrderMessageUsers;
  }

  public Customer remoteReviewQueueUsers(List<CustomerRemoteReviewQueueUser> remoteReviewQueueUsers) {
    this.remoteReviewQueueUsers = remoteReviewQueueUsers;
    return this;
  }

  public Customer addRemoteReviewQueueUsersItem(CustomerRemoteReviewQueueUser remoteReviewQueueUsersItem) {
    if (this.remoteReviewQueueUsers == null) {
      this.remoteReviewQueueUsers = new ArrayList<>();
    }
    this.remoteReviewQueueUsers.add(remoteReviewQueueUsersItem);
    return this;
  }

   /**
   * A list of Customer RemoteReviewQueueUsers
   * @return remoteReviewQueueUsers
  **/
  @Valid
  @Schema(description = "A list of Customer RemoteReviewQueueUsers")
  public List<CustomerRemoteReviewQueueUser> getRemoteReviewQueueUsers() {
    return remoteReviewQueueUsers;
  }

  public void setRemoteReviewQueueUsers(List<CustomerRemoteReviewQueueUser> remoteReviewQueueUsers) {
    this.remoteReviewQueueUsers = remoteReviewQueueUsers;
  }

  public Customer remoteValidMessageUsers(List<CustomerRemoteValidMessageUser> remoteValidMessageUsers) {
    this.remoteValidMessageUsers = remoteValidMessageUsers;
    return this;
  }

  public Customer addRemoteValidMessageUsersItem(CustomerRemoteValidMessageUser remoteValidMessageUsersItem) {
    if (this.remoteValidMessageUsers == null) {
      this.remoteValidMessageUsers = new ArrayList<>();
    }
    this.remoteValidMessageUsers.add(remoteValidMessageUsersItem);
    return this;
  }

   /**
   * A list of Customer RemoteValidMessageUsers
   * @return remoteValidMessageUsers
  **/
  @Valid
  @Schema(description = "A list of Customer RemoteValidMessageUsers")
  public List<CustomerRemoteValidMessageUser> getRemoteValidMessageUsers() {
    return remoteValidMessageUsers;
  }

  public void setRemoteValidMessageUsers(List<CustomerRemoteValidMessageUser> remoteValidMessageUsers) {
    this.remoteValidMessageUsers = remoteValidMessageUsers;
  }

  public Customer remoteValidOrderStatuses(List<CustomerRemoteValidOrderStatus> remoteValidOrderStatuses) {
    this.remoteValidOrderStatuses = remoteValidOrderStatuses;
    return this;
  }

  public Customer addRemoteValidOrderStatusesItem(CustomerRemoteValidOrderStatus remoteValidOrderStatusesItem) {
    if (this.remoteValidOrderStatuses == null) {
      this.remoteValidOrderStatuses = new ArrayList<>();
    }
    this.remoteValidOrderStatuses.add(remoteValidOrderStatusesItem);
    return this;
  }

   /**
   * A list of Customer RemoteValidOrderStatuses
   * @return remoteValidOrderStatuses
  **/
  @Valid
  @Schema(description = "A list of Customer RemoteValidOrderStatuses")
  public List<CustomerRemoteValidOrderStatus> getRemoteValidOrderStatuses() {
    return remoteValidOrderStatuses;
  }

  public void setRemoteValidOrderStatuses(List<CustomerRemoteValidOrderStatus> remoteValidOrderStatuses) {
    this.remoteValidOrderStatuses = remoteValidOrderStatuses;
  }

  public Customer remoteValidShipVias(List<CustomerRemoteValidShipVia> remoteValidShipVias) {
    this.remoteValidShipVias = remoteValidShipVias;
    return this;
  }

  public Customer addRemoteValidShipViasItem(CustomerRemoteValidShipVia remoteValidShipViasItem) {
    if (this.remoteValidShipVias == null) {
      this.remoteValidShipVias = new ArrayList<>();
    }
    this.remoteValidShipVias.add(remoteValidShipViasItem);
    return this;
  }

   /**
   * A list of Customer RemoteValidShipVias
   * @return remoteValidShipVias
  **/
  @Valid
  @Schema(description = "A list of Customer RemoteValidShipVias")
  public List<CustomerRemoteValidShipVia> getRemoteValidShipVias() {
    return remoteValidShipVias;
  }

  public void setRemoteValidShipVias(List<CustomerRemoteValidShipVia> remoteValidShipVias) {
    this.remoteValidShipVias = remoteValidShipVias;
  }

  public Customer restrictedVendorLists(List<CustomerRestrictedVendorList> restrictedVendorLists) {
    this.restrictedVendorLists = restrictedVendorLists;
    return this;
  }

  public Customer addRestrictedVendorListsItem(CustomerRestrictedVendorList restrictedVendorListsItem) {
    if (this.restrictedVendorLists == null) {
      this.restrictedVendorLists = new ArrayList<>();
    }
    this.restrictedVendorLists.add(restrictedVendorListsItem);
    return this;
  }

   /**
   * A list of Customer RestrictedVendorLists
   * @return restrictedVendorLists
  **/
  @Valid
  @Schema(description = "A list of Customer RestrictedVendorLists")
  public List<CustomerRestrictedVendorList> getRestrictedVendorLists() {
    return restrictedVendorLists;
  }

  public void setRestrictedVendorLists(List<CustomerRestrictedVendorList> restrictedVendorLists) {
    this.restrictedVendorLists = restrictedVendorLists;
  }

  public Customer salesOrderEntryPrinterDocuments(List<CustomerSalesOrderEntryPrinterDocument> salesOrderEntryPrinterDocuments) {
    this.salesOrderEntryPrinterDocuments = salesOrderEntryPrinterDocuments;
    return this;
  }

  public Customer addSalesOrderEntryPrinterDocumentsItem(CustomerSalesOrderEntryPrinterDocument salesOrderEntryPrinterDocumentsItem) {
    if (this.salesOrderEntryPrinterDocuments == null) {
      this.salesOrderEntryPrinterDocuments = new ArrayList<>();
    }
    this.salesOrderEntryPrinterDocuments.add(salesOrderEntryPrinterDocumentsItem);
    return this;
  }

   /**
   * A list of Customer SalesOrderEntryPrinterDocuments
   * @return salesOrderEntryPrinterDocuments
  **/
  @Valid
  @Schema(description = "A list of Customer SalesOrderEntryPrinterDocuments")
  public List<CustomerSalesOrderEntryPrinterDocument> getSalesOrderEntryPrinterDocuments() {
    return salesOrderEntryPrinterDocuments;
  }

  public void setSalesOrderEntryPrinterDocuments(List<CustomerSalesOrderEntryPrinterDocument> salesOrderEntryPrinterDocuments) {
    this.salesOrderEntryPrinterDocuments = salesOrderEntryPrinterDocuments;
  }

  public Customer shipToLists(List<CustomerShipToList> shipToLists) {
    this.shipToLists = shipToLists;
    return this;
  }

  public Customer addShipToListsItem(CustomerShipToList shipToListsItem) {
    if (this.shipToLists == null) {
      this.shipToLists = new ArrayList<>();
    }
    this.shipToLists.add(shipToListsItem);
    return this;
  }

   /**
   * A list of Customer ShipToLists
   * @return shipToLists
  **/
  @Valid
  @Schema(description = "A list of Customer ShipToLists")
  public List<CustomerShipToList> getShipToLists() {
    return shipToLists;
  }

  public void setShipToLists(List<CustomerShipToList> shipToLists) {
    this.shipToLists = shipToLists;
  }

  public Customer stagingLocations(List<CustomerStagingLocation> stagingLocations) {
    this.stagingLocations = stagingLocations;
    return this;
  }

  public Customer addStagingLocationsItem(CustomerStagingLocation stagingLocationsItem) {
    if (this.stagingLocations == null) {
      this.stagingLocations = new ArrayList<>();
    }
    this.stagingLocations.add(stagingLocationsItem);
    return this;
  }

   /**
   * A list of Customer StagingLocations
   * @return stagingLocations
  **/
  @Valid
  @Schema(description = "A list of Customer StagingLocations")
  public List<CustomerStagingLocation> getStagingLocations() {
    return stagingLocations;
  }

  public void setStagingLocations(List<CustomerStagingLocation> stagingLocations) {
    this.stagingLocations = stagingLocations;
  }

  public Customer taxExceptionGroups(List<CustomerTaxExceptionGroup> taxExceptionGroups) {
    this.taxExceptionGroups = taxExceptionGroups;
    return this;
  }

  public Customer addTaxExceptionGroupsItem(CustomerTaxExceptionGroup taxExceptionGroupsItem) {
    if (this.taxExceptionGroups == null) {
      this.taxExceptionGroups = new ArrayList<>();
    }
    this.taxExceptionGroups.add(taxExceptionGroupsItem);
    return this;
  }

   /**
   * A list of Customer TaxExceptionGroups
   * @return taxExceptionGroups
  **/
  @Valid
  @Schema(description = "A list of Customer TaxExceptionGroups")
  public List<CustomerTaxExceptionGroup> getTaxExceptionGroups() {
    return taxExceptionGroups;
  }

  public void setTaxExceptionGroups(List<CustomerTaxExceptionGroup> taxExceptionGroups) {
    this.taxExceptionGroups = taxExceptionGroups;
  }

  public Customer taxExemptInfoList(List<CustomerTaxExemptInfo> taxExemptInfoList) {
    this.taxExemptInfoList = taxExemptInfoList;
    return this;
  }

  public Customer addTaxExemptInfoListItem(CustomerTaxExemptInfo taxExemptInfoListItem) {
    if (this.taxExemptInfoList == null) {
      this.taxExemptInfoList = new ArrayList<>();
    }
    this.taxExemptInfoList.add(taxExemptInfoListItem);
    return this;
  }

   /**
   * A list of Customer TaxExemptInfoList
   * @return taxExemptInfoList
  **/
  @Valid
  @Schema(description = "A list of Customer TaxExemptInfoList")
  public List<CustomerTaxExemptInfo> getTaxExemptInfoList() {
    return taxExemptInfoList;
  }

  public void setTaxExemptInfoList(List<CustomerTaxExemptInfo> taxExemptInfoList) {
    this.taxExemptInfoList = taxExemptInfoList;
  }

  public Customer types(List<CustomerType> types) {
    this.types = types;
    return this;
  }

  public Customer addTypesItem(CustomerType typesItem) {
    if (this.types == null) {
      this.types = new ArrayList<>();
    }
    this.types.add(typesItem);
    return this;
  }

   /**
   * A list of Customer Types
   * @return types
  **/
  @Valid
  @Schema(description = "A list of Customer Types")
  public List<CustomerType> getTypes() {
    return types;
  }

  public void setTypes(List<CustomerType> types) {
    this.types = types;
  }

  public Customer validPoNumbers(List<CustomerValidPoNumber> validPoNumbers) {
    this.validPoNumbers = validPoNumbers;
    return this;
  }

  public Customer addValidPoNumbersItem(CustomerValidPoNumber validPoNumbersItem) {
    if (this.validPoNumbers == null) {
      this.validPoNumbers = new ArrayList<>();
    }
    this.validPoNumbers.add(validPoNumbersItem);
    return this;
  }

   /**
   * A list of Customer ValidPoNumbers
   * @return validPoNumbers
  **/
  @Valid
  @Schema(description = "A list of Customer ValidPoNumbers")
  public List<CustomerValidPoNumber> getValidPoNumbers() {
    return validPoNumbers;
  }

  public void setValidPoNumbers(List<CustomerValidPoNumber> validPoNumbers) {
    this.validPoNumbers = validPoNumbers;
  }

  public Customer virtualSupplierInfoList(List<CustomerVirtualSupplierInfo> virtualSupplierInfoList) {
    this.virtualSupplierInfoList = virtualSupplierInfoList;
    return this;
  }

  public Customer addVirtualSupplierInfoListItem(CustomerVirtualSupplierInfo virtualSupplierInfoListItem) {
    if (this.virtualSupplierInfoList == null) {
      this.virtualSupplierInfoList = new ArrayList<>();
    }
    this.virtualSupplierInfoList.add(virtualSupplierInfoListItem);
    return this;
  }

   /**
   * A list of Customer VirtualSupplierInfoList
   * @return virtualSupplierInfoList
  **/
  @Valid
  @Schema(description = "A list of Customer VirtualSupplierInfoList")
  public List<CustomerVirtualSupplierInfo> getVirtualSupplierInfoList() {
    return virtualSupplierInfoList;
  }

  public void setVirtualSupplierInfoList(List<CustomerVirtualSupplierInfo> virtualSupplierInfoList) {
    this.virtualSupplierInfoList = virtualSupplierInfoList;
  }

  public Customer useStrategicFrieght(Boolean useStrategicFrieght) {
    this.useStrategicFrieght = useStrategicFrieght;
    return this;
  }

   /**
   * Desc : Use strategic freight calculations to increase the actual          freight charges on an order to help offset freight exempt customers or reduced freight charges.  File : ENTITY  Attr : 203,3
   * @return useStrategicFrieght
  **/
  @Schema(description = "Desc : Use strategic freight calculations to increase the actual          freight charges on an order to help offset freight exempt customers or reduced freight charges.  File : ENTITY  Attr : 203,3")
  public Boolean isUseStrategicFrieght() {
    return useStrategicFrieght;
  }

  public void setUseStrategicFrieght(Boolean useStrategicFrieght) {
    this.useStrategicFrieght = useStrategicFrieght;
  }

  public Customer applyCreditsToOldestArPastDueLimit(Boolean applyCreditsToOldestArPastDueLimit) {
    this.applyCreditsToOldestArPastDueLimit = applyCreditsToOldestArPastDueLimit;
    return this;
  }

   /**
   * Desc: The Customer ApplyCreditsToOldestArPastDueLimit flag  File: ENTITY  Attr: 37,2
   * @return applyCreditsToOldestArPastDueLimit
  **/
  @Schema(description = "Desc: The Customer ApplyCreditsToOldestArPastDueLimit flag  File: ENTITY  Attr: 37,2")
  public Boolean isApplyCreditsToOldestArPastDueLimit() {
    return applyCreditsToOldestArPastDueLimit;
  }

  public void setApplyCreditsToOldestArPastDueLimit(Boolean applyCreditsToOldestArPastDueLimit) {
    this.applyCreditsToOldestArPastDueLimit = applyCreditsToOldestArPastDueLimit;
  }

  public Customer creditReleasePercentageOverride(Double creditReleasePercentageOverride) {
    this.creditReleasePercentageOverride = creditReleasePercentageOverride;
    return this;
  }

   /**
   * Desc: Enter one of the following to allow this customer to exceed the pre-defined credit limit by a percentage        of that credit limit:                                                              * 0 - Allows no credit release over the customer&#x27;s defined          limit, unless approved by an authorized user.        * A number from 1 to 998 - Defines the percentage that the        customer is allowed to go over their defined credit limit.    File: ENTITY  Attr: 161
   * @return creditReleasePercentageOverride
  **/
  @Schema(description = "Desc: Enter one of the following to allow this customer to exceed the pre-defined credit limit by a percentage        of that credit limit:                                                              * 0 - Allows no credit release over the customer's defined          limit, unless approved by an authorized user.        * A number from 1 to 998 - Defines the percentage that the        customer is allowed to go over their defined credit limit.    File: ENTITY  Attr: 161")
  public Double getCreditReleasePercentageOverride() {
    return creditReleasePercentageOverride;
  }

  public void setCreditReleasePercentageOverride(Double creditReleasePercentageOverride) {
    this.creditReleasePercentageOverride = creditReleasePercentageOverride;
  }

  public Customer excludeFromCollectionInvoices(Boolean excludeFromCollectionInvoices) {
    this.excludeFromCollectionInvoices = excludeFromCollectionInvoices;
    return this;
  }

   /**
   * Desc: The Customer Exclude From Collection Invoice flag  File: ENTITY  Attr: 167
   * @return excludeFromCollectionInvoices
  **/
  @Schema(description = "Desc: The Customer Exclude From Collection Invoice flag  File: ENTITY  Attr: 167")
  public Boolean isExcludeFromCollectionInvoices() {
    return excludeFromCollectionInvoices;
  }

  public void setExcludeFromCollectionInvoices(Boolean excludeFromCollectionInvoices) {
    this.excludeFromCollectionInvoices = excludeFromCollectionInvoices;
  }

  public Customer statementSubtotals(String statementSubtotals) {
    this.statementSubtotals = statementSubtotals;
    return this;
  }

   /**
   * Desc: The Customer Statement Subtotals  File: ENTITY  Attr: 193,2
   * @return statementSubtotals
  **/
  @Schema(description = "Desc: The Customer Statement Subtotals  File: ENTITY  Attr: 193,2")
  public String getStatementSubtotals() {
    return statementSubtotals;
  }

  public void setStatementSubtotals(String statementSubtotals) {
    this.statementSubtotals = statementSubtotals;
  }

  public Customer statementPageBreakOn(String statementPageBreakOn) {
    this.statementPageBreakOn = statementPageBreakOn;
    return this;
  }

   /**
   * Desc: The Customer Statement Page break on  File: ENTITY  Attr: 193,3
   * @return statementPageBreakOn
  **/
  @Schema(description = "Desc: The Customer Statement Page break on  File: ENTITY  Attr: 193,3")
  public String getStatementPageBreakOn() {
    return statementPageBreakOn;
  }

  public void setStatementPageBreakOn(String statementPageBreakOn) {
    this.statementPageBreakOn = statementPageBreakOn;
  }

  public Customer excludeFromMinimumDollarstoPrint(Boolean excludeFromMinimumDollarstoPrint) {
    this.excludeFromMinimumDollarstoPrint = excludeFromMinimumDollarstoPrint;
    return this;
  }

   /**
   * Desc : Exclude from minimum dollars to Print  File : ENTITY  Attr : 187
   * @return excludeFromMinimumDollarstoPrint
  **/
  @Schema(description = "Desc : Exclude from minimum dollars to Print  File : ENTITY  Attr : 187")
  public Boolean isExcludeFromMinimumDollarstoPrint() {
    return excludeFromMinimumDollarstoPrint;
  }

  public void setExcludeFromMinimumDollarstoPrint(Boolean excludeFromMinimumDollarstoPrint) {
    this.excludeFromMinimumDollarstoPrint = excludeFromMinimumDollarstoPrint;
  }

  public Customer strategicPricingCustomerSensitivity(String strategicPricingCustomerSensitivity) {
    this.strategicPricingCustomerSensitivity = strategicPricingCustomerSensitivity;
    return this;
  }

   /**
   * Desc : Startegic Pricing Customer Sensitivity  File : ENTITY  Attr : 199,1
   * @return strategicPricingCustomerSensitivity
  **/
  @Schema(description = "Desc : Startegic Pricing Customer Sensitivity  File : ENTITY  Attr : 199,1")
  public String getStrategicPricingCustomerSensitivity() {
    return strategicPricingCustomerSensitivity;
  }

  public void setStrategicPricingCustomerSensitivity(String strategicPricingCustomerSensitivity) {
    this.strategicPricingCustomerSensitivity = strategicPricingCustomerSensitivity;
  }

  public Customer strategicPricingCustomerSensitivityExpiryDate(LocalDateTime strategicPricingCustomerSensitivityExpiryDate) {
    this.strategicPricingCustomerSensitivityExpiryDate = strategicPricingCustomerSensitivityExpiryDate;
    return this;
  }

   /**
   * Desc : Expiry Date Startegic Pricing Customer Sensitivity  File : ENTITY  Attr : 199,2
   * @return strategicPricingCustomerSensitivityExpiryDate
  **/
  @Valid
  @Schema(description = "Desc : Expiry Date Startegic Pricing Customer Sensitivity  File : ENTITY  Attr : 199,2")
  public LocalDateTime getStrategicPricingCustomerSensitivityExpiryDate() {
    return strategicPricingCustomerSensitivityExpiryDate;
  }

  public void setStrategicPricingCustomerSensitivityExpiryDate(LocalDateTime strategicPricingCustomerSensitivityExpiryDate) {
    this.strategicPricingCustomerSensitivityExpiryDate = strategicPricingCustomerSensitivityExpiryDate;
  }

  public Customer httpUrl(String httpUrl) {
    this.httpUrl = httpUrl;
    return this;
  }

   /**
   * Desc : Customer HTTP Url  File : ENTITY  Attr : 177,2
   * @return httpUrl
  **/
  @Schema(description = "Desc : Customer HTTP Url  File : ENTITY  Attr : 177,2")
  public String getHttpUrl() {
    return httpUrl;
  }

  public void setHttpUrl(String httpUrl) {
    this.httpUrl = httpUrl;
  }

  public Customer avalaraUsageType(String avalaraUsageType) {
    this.avalaraUsageType = avalaraUsageType;
    return this;
  }

   /**
   * DESC : Avalara Usage Type  File : ENTITY  Attr : 221
   * @return avalaraUsageType
  **/
  @Schema(description = "DESC : Avalara Usage Type  File : ENTITY  Attr : 221")
  public String getAvalaraUsageType() {
    return avalaraUsageType;
  }

  public void setAvalaraUsageType(String avalaraUsageType) {
    this.avalaraUsageType = avalaraUsageType;
  }

  public Customer remoteWebAPITradingPartnerType(String remoteWebAPITradingPartnerType) {
    this.remoteWebAPITradingPartnerType = remoteWebAPITradingPartnerType;
    return this;
  }

   /**
   * DESC : API Trading Partner Type in WOE Remote  File : ENTITY  Atrr: 68,44
   * @return remoteWebAPITradingPartnerType
  **/
  @Schema(description = "DESC : API Trading Partner Type in WOE Remote  File : ENTITY  Atrr: 68,44")
  public String getRemoteWebAPITradingPartnerType() {
    return remoteWebAPITradingPartnerType;
  }

  public void setRemoteWebAPITradingPartnerType(String remoteWebAPITradingPartnerType) {
    this.remoteWebAPITradingPartnerType = remoteWebAPITradingPartnerType;
  }

  public Customer exportOnly(String exportOnly) {
    this.exportOnly = exportOnly;
    return this;
  }

   /**
   * DESC: Customer export Options  FILE : ENTITY  Attr : 219
   * @return exportOnly
  **/
  @Schema(description = "DESC: Customer export Options  FILE : ENTITY  Attr : 219")
  public String getExportOnly() {
    return exportOnly;
  }

  public void setExportOnly(String exportOnly) {
    this.exportOnly = exportOnly;
  }

  public Customer alternateShippingAddresses(List<CustomerAlternateShippingAddress> alternateShippingAddresses) {
    this.alternateShippingAddresses = alternateShippingAddresses;
    return this;
  }

  public Customer addAlternateShippingAddressesItem(CustomerAlternateShippingAddress alternateShippingAddressesItem) {
    if (this.alternateShippingAddresses == null) {
      this.alternateShippingAddresses = new ArrayList<>();
    }
    this.alternateShippingAddresses.add(alternateShippingAddressesItem);
    return this;
  }

   /**
   * DESC : Customer&#x27;s alternate shipping address  FILE : ENTITY  Attr : 222
   * @return alternateShippingAddresses
  **/
  @Valid
  @Schema(description = "DESC : Customer's alternate shipping address  FILE : ENTITY  Attr : 222")
  public List<CustomerAlternateShippingAddress> getAlternateShippingAddresses() {
    return alternateShippingAddresses;
  }

  public void setAlternateShippingAddresses(List<CustomerAlternateShippingAddress> alternateShippingAddresses) {
    this.alternateShippingAddresses = alternateShippingAddresses;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Customer customer = (Customer) o;
    return Objects.equals(this.updateKey, customer.updateKey) &&
        Objects.equals(this.id, customer.id) &&
        Objects.equals(this.name, customer.name) &&
        Objects.equals(this.addressLine1, customer.addressLine1) &&
        Objects.equals(this.addressLine2, customer.addressLine2) &&
        Objects.equals(this.addressLine3, customer.addressLine3) &&
        Objects.equals(this.addressLine4, customer.addressLine4) &&
        Objects.equals(this.city, customer.city) &&
        Objects.equals(this.state, customer.state) &&
        Objects.equals(this.postalCode, customer.postalCode) &&
        Objects.equals(this.countryCode, customer.countryCode) &&
        Objects.equals(this.isBillTo, customer.isBillTo) &&
        Objects.equals(this.isShipTo, customer.isShipTo) &&
        Objects.equals(this.isBranch, customer.isBranch) &&
        Objects.equals(this.isBranchCash, customer.isBranchCash) &&
        Objects.equals(this.isProspect, customer.isProspect) &&
        Objects.equals(this.sortBy, customer.sortBy) &&
        Objects.equals(this.nameIndex, customer.nameIndex) &&
        Objects.equals(this.billToId, customer.billToId) &&
        Objects.equals(this.defaultPriceClass, customer.defaultPriceClass) &&
        Objects.equals(this.ediId, customer.ediId) &&
        Objects.equals(this.orderEntryMessage, customer.orderEntryMessage) &&
        Objects.equals(this.creditLimit, customer.creditLimit) &&
        Objects.equals(this.pastDueLimit, customer.pastDueLimit) &&
        Objects.equals(this.jobLimit, customer.jobLimit) &&
        Objects.equals(this.pastDueDays, customer.pastDueDays) &&
        Objects.equals(this.stockDepositPercentage, customer.stockDepositPercentage) &&
        Objects.equals(this.nonstockDepositPercentage, customer.nonstockDepositPercentage) &&
        Objects.equals(this.alwaysCod, customer.alwaysCod) &&
        Objects.equals(this.codWhenCreditExceeded, customer.codWhenCreditExceeded) &&
        Objects.equals(this.approvalRequired, customer.approvalRequired) &&
        Objects.equals(this.approvalRequiredWhenCreditExceeded, customer.approvalRequiredWhenCreditExceeded) &&
        Objects.equals(this.noOrderEntry, customer.noOrderEntry) &&
        Objects.equals(this.noOrderEntryWhenCreditExceeded, customer.noOrderEntryWhenCreditExceeded) &&
        Objects.equals(this.noOrderEntryUnlessAuth, customer.noOrderEntryUnlessAuth) &&
        Objects.equals(this.noPrintShipTicketWhenCreditExceeded, customer.noPrintShipTicketWhenCreditExceeded) &&
        Objects.equals(this.noPrintShipTicketUnlessAuth, customer.noPrintShipTicketUnlessAuth) &&
        Objects.equals(this.doNotSaveCreditCardInfo, customer.doNotSaveCreditCardInfo) &&
        Objects.equals(this.totalCreditHoldFlag, customer.totalCreditHoldFlag) &&
        Objects.equals(this.overrideInvoiceTerms, customer.overrideInvoiceTerms) &&
        Objects.equals(this.authPersonnelOnly, customer.authPersonnelOnly) &&
        Objects.equals(this.defaultTerms, customer.defaultTerms) &&
        Objects.equals(this.directTerms, customer.directTerms) &&
        Objects.equals(this.companyCheckAccepted, customer.companyCheckAccepted) &&
        Objects.equals(this.personalCheckAccepted, customer.personalCheckAccepted) &&
        Objects.equals(this.taxJurisdictionOverride, customer.taxJurisdictionOverride) &&
        Objects.equals(this.applyCreditsToOldestAr, customer.applyCreditsToOldestAr) &&
        Objects.equals(this.creditControlType, customer.creditControlType) &&
        Objects.equals(this.freightOutExempt, customer.freightOutExempt) &&
        Objects.equals(this.freightInExempt, customer.freightInExempt) &&
        Objects.equals(this.separateAr, customer.separateAr) &&
        Objects.equals(this.outsideSalesperson, customer.outsideSalesperson) &&
        Objects.equals(this.defaultPrintStyle, customer.defaultPrintStyle) &&
        Objects.equals(this.invoicePrintStyle, customer.invoicePrintStyle) &&
        Objects.equals(this.backOrderStatus, customer.backOrderStatus) &&
        Objects.equals(this.insideSalesperson, customer.insideSalesperson) &&
        Objects.equals(this.poNumberRequired, customer.poNumberRequired) &&
        Objects.equals(this.defaultPoNumber, customer.defaultPoNumber) &&
        Objects.equals(this.defaultReleaseNumber, customer.defaultReleaseNumber) &&
        Objects.equals(this.defaultShipVia, customer.defaultShipVia) &&
        Objects.equals(this.sixMonthAverageAr, customer.sixMonthAverageAr) &&
        Objects.equals(this.sixMonthHighAr, customer.sixMonthHighAr) &&
        Objects.equals(this.sixMonthAveragePaymentDays, customer.sixMonthAveragePaymentDays) &&
        Objects.equals(this.twelveMonthAverageAr, customer.twelveMonthAverageAr) &&
        Objects.equals(this.twelveMonthHighAr, customer.twelveMonthHighAr) &&
        Objects.equals(this.twelveMonthAveragePaymentDays, customer.twelveMonthAveragePaymentDays) &&
        Objects.equals(this.createDate, customer.createDate) &&
        Objects.equals(this.invoicePrintCopiesSetting, customer.invoicePrintCopiesSetting) &&
        Objects.equals(this.invoiceFaxCopiesSetting, customer.invoiceFaxCopiesSetting) &&
        Objects.equals(this.disableFtpBilling, customer.disableFtpBilling) &&
        Objects.equals(this.emailBatchInvoiceGroupingMethod, customer.emailBatchInvoiceGroupingMethod) &&
        Objects.equals(this.invoiceSelectCode, customer.invoiceSelectCode) &&
        Objects.equals(this.orderEntryShippingInstructions, customer.orderEntryShippingInstructions) &&
        Objects.equals(this.homeBranch, customer.homeBranch) &&
        Objects.equals(this.homeTerritory, customer.homeTerritory) &&
        Objects.equals(this.parentCustomerStatementType, customer.parentCustomerStatementType) &&
        Objects.equals(this.statementType, customer.statementType) &&
        Objects.equals(this.batchStatementSetting, customer.batchStatementSetting) &&
        Objects.equals(this.autoDelete, customer.autoDelete) &&
        Objects.equals(this.customerPartNumberAlternateCustomer, customer.customerPartNumberAlternateCustomer) &&
        Objects.equals(this.remoteLogBidsForReview, customer.remoteLogBidsForReview) &&
        Objects.equals(this.remoteLogOrdersForReview, customer.remoteLogOrdersForReview) &&
        Objects.equals(this.remoteSlavePrinter, customer.remoteSlavePrinter) &&
        Objects.equals(this.remoteWebLoginMessage, customer.remoteWebLoginMessage) &&
        Objects.equals(this.remoteDisplayProductAvail, customer.remoteDisplayProductAvail) &&
        Objects.equals(this.remoteDefaultOrderStatus, customer.remoteDefaultOrderStatus) &&
        Objects.equals(this.remoteWebPassword, customer.remoteWebPassword) &&
        Objects.equals(this.remoteOnlyLogOrdersWithErrors, customer.remoteOnlyLogOrdersWithErrors) &&
        Objects.equals(this.remoteRoundToSellPackageQty, customer.remoteRoundToSellPackageQty) &&
        Objects.equals(this.remoteBranchAvailOption, customer.remoteBranchAvailOption) &&
        Objects.equals(this.remoteWebDiscountPercentage, customer.remoteWebDiscountPercentage) &&
        Objects.equals(this.remoteWebArPassword, customer.remoteWebArPassword) &&
        Objects.equals(this.remoteWebDisplayListPrice, customer.remoteWebDisplayListPrice) &&
        Objects.equals(this.remoteWebCreditCardPaymentRequired, customer.remoteWebCreditCardPaymentRequired) &&
        Objects.equals(this.remoteWebOrderedByRequired, customer.remoteWebOrderedByRequired) &&
        Objects.equals(this.remoteWebEnableShipToCreate, customer.remoteWebEnableShipToCreate) &&
        Objects.equals(this.remoteWebHideArLedger, customer.remoteWebHideArLedger) &&
        Objects.equals(this.remoteWebHideArInquiry, customer.remoteWebHideArInquiry) &&
        Objects.equals(this.remoteWebB2bPostUrlDefault, customer.remoteWebB2bPostUrlDefault) &&
        Objects.equals(this.remoteWebB2bPostUrlAcknowledgement, customer.remoteWebB2bPostUrlAcknowledgement) &&
        Objects.equals(this.remoteWebB2bPostUrlAdvanceShipNotice, customer.remoteWebB2bPostUrlAdvanceShipNotice) &&
        Objects.equals(this.remoteWebB2bPostUrlInvoice, customer.remoteWebB2bPostUrlInvoice) &&
        Objects.equals(this.remoteWebLogoffUrl, customer.remoteWebLogoffUrl) &&
        Objects.equals(this.remoteWebHideZeroPriceProducts, customer.remoteWebHideZeroPriceProducts) &&
        Objects.equals(this.remoteWebNumberOfShipTosToDisplay, customer.remoteWebNumberOfShipTosToDisplay) &&
        Objects.equals(this.remoteWebDisplayPdwItems, customer.remoteWebDisplayPdwItems) &&
        Objects.equals(this.remoteWebDisplayCatalogItems, customer.remoteWebDisplayCatalogItems) &&
        Objects.equals(this.remoteWebAllowedPricingVarianceType, customer.remoteWebAllowedPricingVarianceType) &&
        Objects.equals(this.remoteWebAllowedPricingVarianceValue, customer.remoteWebAllowedPricingVarianceValue) &&
        Objects.equals(this.remoteWebBidViewOnly, customer.remoteWebBidViewOnly) &&
        Objects.equals(this.remoteWebXmlVendorId, customer.remoteWebXmlVendorId) &&
        Objects.equals(this.remoteWebXmlVendorLogin, customer.remoteWebXmlVendorLogin) &&
        Objects.equals(this.remoteWebXmlVendorPassword, customer.remoteWebXmlVendorPassword) &&
        Objects.equals(this.remoteWebXmlUsePartnerPricing, customer.remoteWebXmlUsePartnerPricing) &&
        Objects.equals(this.remoteWebEnableShipBranchOverride, customer.remoteWebEnableShipBranchOverride) &&
        Objects.equals(this.remoteWebCategoryDisplayId, customer.remoteWebCategoryDisplayId) &&
        Objects.equals(this.remoteVerifyProductAvailability, customer.remoteVerifyProductAvailability) &&
        Objects.equals(this.remoteWebEnableShipToEdit, customer.remoteWebEnableShipToEdit) &&
        Objects.equals(this.remoteWebAccessControlMethod, customer.remoteWebAccessControlMethod) &&
        Objects.equals(this.orderStatusOverride, customer.orderStatusOverride) &&
        Objects.equals(this.salesSourceOverride, customer.salesSourceOverride) &&
        Objects.equals(this.shipBranchOverride, customer.shipBranchOverride) &&
        Objects.equals(this.priceBranchOverride, customer.priceBranchOverride) &&
        Objects.equals(this.printKitComponentOverride, customer.printKitComponentOverride) &&
        Objects.equals(this.requiredDateLeadTime, customer.requiredDateLeadTime) &&
        Objects.equals(this.maxEarlyShipDays, customer.maxEarlyShipDays) &&
        Objects.equals(this.sicCode, customer.sicCode) &&
        Objects.equals(this.customerSelectCodeId, customer.customerSelectCodeId) &&
        Objects.equals(this.parentStatementCustomerId, customer.parentStatementCustomerId) &&
        Objects.equals(this.rankNumber1, customer.rankNumber1) &&
        Objects.equals(this.rankNumber2, customer.rankNumber2) &&
        Objects.equals(this.rankNumber3, customer.rankNumber3) &&
        Objects.equals(this.rankNumber4, customer.rankNumber4) &&
        Objects.equals(this.rankNumber5, customer.rankNumber5) &&
        Objects.equals(this.singleInvoice, customer.singleInvoice) &&
        Objects.equals(this.maxCollectionDays, customer.maxCollectionDays) &&
        Objects.equals(this.uetAllowedEarlyDays, customer.uetAllowedEarlyDays) &&
        Objects.equals(this.uetAllowedLateDays, customer.uetAllowedLateDays) &&
        Objects.equals(this.normalDeliveryTime, customer.normalDeliveryTime) &&
        Objects.equals(this.dunnBradstreetNumber, customer.dunnBradstreetNumber) &&
        Objects.equals(this.currencyCode, customer.currencyCode) &&
        Objects.equals(this.alternateBillingName, customer.alternateBillingName) &&
        Objects.equals(this.alternateBillingAddressLine1, customer.alternateBillingAddressLine1) &&
        Objects.equals(this.alternateBillingAddressLine2, customer.alternateBillingAddressLine2) &&
        Objects.equals(this.alternateBillingAddressLine3, customer.alternateBillingAddressLine3) &&
        Objects.equals(this.alternateBillingAddressLine4, customer.alternateBillingAddressLine4) &&
        Objects.equals(this.alternateBillingCity, customer.alternateBillingCity) &&
        Objects.equals(this.alternateBillingState, customer.alternateBillingState) &&
        Objects.equals(this.alternateBillingPostalCode, customer.alternateBillingPostalCode) &&
        Objects.equals(this.alternateBillingFax, customer.alternateBillingFax) &&
        Objects.equals(this.alternateBillingSortBy, customer.alternateBillingSortBy) &&
        Objects.equals(this.alternateBillingUseShipToAddress, customer.alternateBillingUseShipToAddress) &&
        Objects.equals(this.glAccountOverride, customer.glAccountOverride) &&
        Objects.equals(this.substituteProductsOk, customer.substituteProductsOk) &&
        Objects.equals(this.lineItemTaxableCode, customer.lineItemTaxableCode) &&
        Objects.equals(this.disableDuplicatePoCheck, customer.disableDuplicatePoCheck) &&
        Objects.equals(this.webUrl, customer.webUrl) &&
        Objects.equals(this.handlingExempt, customer.handlingExempt) &&
        Objects.equals(this.freightInsuranceRequired, customer.freightInsuranceRequired) &&
        Objects.equals(this.extraHandlingCharge, customer.extraHandlingCharge) &&
        Objects.equals(this.freightExemptMinimumAmount, customer.freightExemptMinimumAmount) &&
        Objects.equals(this.residentialAddress, customer.residentialAddress) &&
        Objects.equals(this.commissionOverrideWriterPercentage, customer.commissionOverrideWriterPercentage) &&
        Objects.equals(this.commissionOverrideInsideSalesRepPercentage, customer.commissionOverrideInsideSalesRepPercentage) &&
        Objects.equals(this.commissionOverrideOutsideSalesRepPercentage, customer.commissionOverrideOutsideSalesRepPercentage) &&
        Objects.equals(this.commissionReviewDate, customer.commissionReviewDate) &&
        Objects.equals(this.commissionReason, customer.commissionReason) &&
        Objects.equals(this.invoiceTiffPdfOption, customer.invoiceTiffPdfOption) &&
        Objects.equals(this.statementTiffPdfOption, customer.statementTiffPdfOption) &&
        Objects.equals(this.orderEntryInternalNotes, customer.orderEntryInternalNotes) &&
        Objects.equals(this.productLastPriceCheck, customer.productLastPriceCheck) &&
        Objects.equals(this.consignedInventoryFlag, customer.consignedInventoryFlag) &&
        Objects.equals(this.consignedInventoryShipTo, customer.consignedInventoryShipTo) &&
        Objects.equals(this.creditManager, customer.creditManager) &&
        Objects.equals(this.enableAnticipationCredit, customer.enableAnticipationCredit) &&
        Objects.equals(this.lastUpdateDateTime, customer.lastUpdateDateTime) &&
        Objects.equals(this.includeServiceChargeInServiceChargeCalc, customer.includeServiceChargeInServiceChargeCalc) &&
        Objects.equals(this.additionalKeywords, customer.additionalKeywords) &&
        Objects.equals(this.commissionPlan, customer.commissionPlan) &&
        Objects.equals(this.excludeFromSearchIndex, customer.excludeFromSearchIndex) &&
        Objects.equals(this.timeZone, customer.timeZone) &&
        Objects.equals(this.pricePrecisionNumberOfDecimals, customer.pricePrecisionNumberOfDecimals) &&
        Objects.equals(this.excludeServiceCharges, customer.excludeServiceCharges) &&
        Objects.equals(this.remitToOverrideId, customer.remitToOverrideId) &&
        Objects.equals(this.backOrderPrintingOption, customer.backOrderPrintingOption) &&
        Objects.equals(this.productDemandOverrideBranchId, customer.productDemandOverrideBranchId) &&
        Objects.equals(this.arCollectionLastCallDate, customer.arCollectionLastCallDate) &&
        Objects.equals(this.arCollectionNextCallDate, customer.arCollectionNextCallDate) &&
        Objects.equals(this.arCollectionSentLetterFlag, customer.arCollectionSentLetterFlag) &&
        Objects.equals(this.arCollectionLetterTypeId, customer.arCollectionLetterTypeId) &&
        Objects.equals(this.arCollectionTotalCallCount, customer.arCollectionTotalCallCount) &&
        Objects.equals(this.arCollectionExcludeOverdueInvoicePrint, customer.arCollectionExcludeOverdueInvoicePrint) &&
        Objects.equals(this.virtualSupplierAlternateCustomerId, customer.virtualSupplierAlternateCustomerId) &&
        Objects.equals(this.virtualSupplierPassThroughDirect, customer.virtualSupplierPassThroughDirect) &&
        Objects.equals(this.virtualSupplierDefaultVendorId, customer.virtualSupplierDefaultVendorId) &&
        Objects.equals(this.virtualSupplierDefaultShipBranchId, customer.virtualSupplierDefaultShipBranchId) &&
        Objects.equals(this.virtualSupplierDefaultPriceBranchId, customer.virtualSupplierDefaultPriceBranchId) &&
        Objects.equals(this.excludeConsignmentBillingCredit, customer.excludeConsignmentBillingCredit) &&
        Objects.equals(this.restrictPriceChangesInOrderEntry, customer.restrictPriceChangesInOrderEntry) &&
        Objects.equals(this.additionalName, customer.additionalName) &&
        Objects.equals(this.passAlongDiscountPercentage, customer.passAlongDiscountPercentage) &&
        Objects.equals(this.requireCheckVerification, customer.requireCheckVerification) &&
        Objects.equals(this.consolidateInvoiceFlag, customer.consolidateInvoiceFlag) &&
        Objects.equals(this.statementCycleCode, customer.statementCycleCode) &&
        Objects.equals(this.accountManager, customer.accountManager) &&
        Objects.equals(this.orderEntryFillRatePercentage, customer.orderEntryFillRatePercentage) &&
        Objects.equals(this.orderEntryFillRateMeasurement, customer.orderEntryFillRateMeasurement) &&
        Objects.equals(this.emailInvoicePrintStyle, customer.emailInvoicePrintStyle) &&
        Objects.equals(this.emailBidPrintStyle, customer.emailBidPrintStyle) &&
        Objects.equals(this.emailShipTicketPrintStyle, customer.emailShipTicketPrintStyle) &&
        Objects.equals(this.emailAcknowledgementPrintStyle, customer.emailAcknowledgementPrintStyle) &&
        Objects.equals(this.activityTriggerInheritOption, customer.activityTriggerInheritOption) &&
        Objects.equals(this.calculateOrderLevelSplitTaxFlag, customer.calculateOrderLevelSplitTaxFlag) &&
        Objects.equals(this.rfPickingAllowQtyIncrease, customer.rfPickingAllowQtyIncrease) &&
        Objects.equals(this.telemarketingQueueAddToCallLog, customer.telemarketingQueueAddToCallLog) &&
        Objects.equals(this.telemarketingQueueFollowUpDateDays, customer.telemarketingQueueFollowUpDateDays) &&
        Objects.equals(this.strategicPricingCustomerCategory, customer.strategicPricingCustomerCategory) &&
        Objects.equals(this.strategicPricingListPriceCostMethod, customer.strategicPricingListPriceCostMethod) &&
        Objects.equals(this.strategicPricingCustomerSize, customer.strategicPricingCustomerSize) &&
        Objects.equals(this.strategicPricingCustomerSizeLastUpdated, customer.strategicPricingCustomerSizeLastUpdated) &&
        Objects.equals(this.requiresSpecialLabels, customer.requiresSpecialLabels) &&
        Objects.equals(this.requiresSpecialPackaging, customer.requiresSpecialPackaging) &&
        Objects.equals(this.excludeFromAutomaticWriteOffOfCashReceipts, customer.excludeFromAutomaticWriteOffOfCashReceipts) &&
        Objects.equals(this.excludeFromAutomaticWriteOffOfInvoice, customer.excludeFromAutomaticWriteOffOfInvoice) &&
        Objects.equals(this.excludeFromDemandCalcAsofDate, customer.excludeFromDemandCalcAsofDate) &&
        Objects.equals(this.accessLists, customer.accessLists) &&
        Objects.equals(this.allowedPoNumbers, customer.allowedPoNumbers) &&
        Objects.equals(this.allowedPriceLines, customer.allowedPriceLines) &&
        Objects.equals(this.creditAuthPersonnelList, customer.creditAuthPersonnelList) &&
        Objects.equals(this.creditEftList, customer.creditEftList) &&
        Objects.equals(this.ediContractUploadLists, customer.ediContractUploadLists) &&
        Objects.equals(this.emails, customer.emails) &&
        Objects.equals(this.freightCarrierInfoList, customer.freightCarrierInfoList) &&
        Objects.equals(this.orderEntryPrompts, customer.orderEntryPrompts) &&
        Objects.equals(this.phones, customer.phones) &&
        Objects.equals(this.priceClassOverrides, customer.priceClassOverrides) &&
        Objects.equals(this.pricingContractCustomerLists, customer.pricingContractCustomerLists) &&
        Objects.equals(this.productCertifications, customer.productCertifications) &&
        Objects.equals(this.productZones, customer.productZones) &&
        Objects.equals(this.rebates, customer.rebates) &&
        Objects.equals(this.remoteChangeOrderMessageUsers, customer.remoteChangeOrderMessageUsers) &&
        Objects.equals(this.remoteEcommerceIds, customer.remoteEcommerceIds) &&
        Objects.equals(this.remoteErrorMessageUsers, customer.remoteErrorMessageUsers) &&
        Objects.equals(this.remoteLoginMessageUsers, customer.remoteLoginMessageUsers) &&
        Objects.equals(this.remoteNewOrderMessageUsers, customer.remoteNewOrderMessageUsers) &&
        Objects.equals(this.remoteReviewQueueUsers, customer.remoteReviewQueueUsers) &&
        Objects.equals(this.remoteValidMessageUsers, customer.remoteValidMessageUsers) &&
        Objects.equals(this.remoteValidOrderStatuses, customer.remoteValidOrderStatuses) &&
        Objects.equals(this.remoteValidShipVias, customer.remoteValidShipVias) &&
        Objects.equals(this.restrictedVendorLists, customer.restrictedVendorLists) &&
        Objects.equals(this.salesOrderEntryPrinterDocuments, customer.salesOrderEntryPrinterDocuments) &&
        Objects.equals(this.shipToLists, customer.shipToLists) &&
        Objects.equals(this.stagingLocations, customer.stagingLocations) &&
        Objects.equals(this.taxExceptionGroups, customer.taxExceptionGroups) &&
        Objects.equals(this.taxExemptInfoList, customer.taxExemptInfoList) &&
        Objects.equals(this.types, customer.types) &&
        Objects.equals(this.validPoNumbers, customer.validPoNumbers) &&
        Objects.equals(this.virtualSupplierInfoList, customer.virtualSupplierInfoList) &&
        Objects.equals(this.useStrategicFrieght, customer.useStrategicFrieght) &&
        Objects.equals(this.applyCreditsToOldestArPastDueLimit, customer.applyCreditsToOldestArPastDueLimit) &&
        Objects.equals(this.creditReleasePercentageOverride, customer.creditReleasePercentageOverride) &&
        Objects.equals(this.excludeFromCollectionInvoices, customer.excludeFromCollectionInvoices) &&
        Objects.equals(this.statementSubtotals, customer.statementSubtotals) &&
        Objects.equals(this.statementPageBreakOn, customer.statementPageBreakOn) &&
        Objects.equals(this.excludeFromMinimumDollarstoPrint, customer.excludeFromMinimumDollarstoPrint) &&
        Objects.equals(this.strategicPricingCustomerSensitivity, customer.strategicPricingCustomerSensitivity) &&
        Objects.equals(this.strategicPricingCustomerSensitivityExpiryDate, customer.strategicPricingCustomerSensitivityExpiryDate) &&
        Objects.equals(this.httpUrl, customer.httpUrl) &&
        Objects.equals(this.avalaraUsageType, customer.avalaraUsageType) &&
        Objects.equals(this.remoteWebAPITradingPartnerType, customer.remoteWebAPITradingPartnerType) &&
        Objects.equals(this.exportOnly, customer.exportOnly) &&
        Objects.equals(this.alternateShippingAddresses, customer.alternateShippingAddresses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateKey, id, name, addressLine1, addressLine2, addressLine3, addressLine4, city, state, postalCode, countryCode, isBillTo, isShipTo, isBranch, isBranchCash, isProspect, sortBy, nameIndex, billToId, defaultPriceClass, ediId, orderEntryMessage, creditLimit, pastDueLimit, jobLimit, pastDueDays, stockDepositPercentage, nonstockDepositPercentage, alwaysCod, codWhenCreditExceeded, approvalRequired, approvalRequiredWhenCreditExceeded, noOrderEntry, noOrderEntryWhenCreditExceeded, noOrderEntryUnlessAuth, noPrintShipTicketWhenCreditExceeded, noPrintShipTicketUnlessAuth, doNotSaveCreditCardInfo, totalCreditHoldFlag, overrideInvoiceTerms, authPersonnelOnly, defaultTerms, directTerms, companyCheckAccepted, personalCheckAccepted, taxJurisdictionOverride, applyCreditsToOldestAr, creditControlType, freightOutExempt, freightInExempt, separateAr, outsideSalesperson, defaultPrintStyle, invoicePrintStyle, backOrderStatus, insideSalesperson, poNumberRequired, defaultPoNumber, defaultReleaseNumber, defaultShipVia, sixMonthAverageAr, sixMonthHighAr, sixMonthAveragePaymentDays, twelveMonthAverageAr, twelveMonthHighAr, twelveMonthAveragePaymentDays, createDate, invoicePrintCopiesSetting, invoiceFaxCopiesSetting, disableFtpBilling, emailBatchInvoiceGroupingMethod, invoiceSelectCode, orderEntryShippingInstructions, homeBranch, homeTerritory, parentCustomerStatementType, statementType, batchStatementSetting, autoDelete, customerPartNumberAlternateCustomer, remoteLogBidsForReview, remoteLogOrdersForReview, remoteSlavePrinter, remoteWebLoginMessage, remoteDisplayProductAvail, remoteDefaultOrderStatus, remoteWebPassword, remoteOnlyLogOrdersWithErrors, remoteRoundToSellPackageQty, remoteBranchAvailOption, remoteWebDiscountPercentage, remoteWebArPassword, remoteWebDisplayListPrice, remoteWebCreditCardPaymentRequired, remoteWebOrderedByRequired, remoteWebEnableShipToCreate, remoteWebHideArLedger, remoteWebHideArInquiry, remoteWebB2bPostUrlDefault, remoteWebB2bPostUrlAcknowledgement, remoteWebB2bPostUrlAdvanceShipNotice, remoteWebB2bPostUrlInvoice, remoteWebLogoffUrl, remoteWebHideZeroPriceProducts, remoteWebNumberOfShipTosToDisplay, remoteWebDisplayPdwItems, remoteWebDisplayCatalogItems, remoteWebAllowedPricingVarianceType, remoteWebAllowedPricingVarianceValue, remoteWebBidViewOnly, remoteWebXmlVendorId, remoteWebXmlVendorLogin, remoteWebXmlVendorPassword, remoteWebXmlUsePartnerPricing, remoteWebEnableShipBranchOverride, remoteWebCategoryDisplayId, remoteVerifyProductAvailability, remoteWebEnableShipToEdit, remoteWebAccessControlMethod, orderStatusOverride, salesSourceOverride, shipBranchOverride, priceBranchOverride, printKitComponentOverride, requiredDateLeadTime, maxEarlyShipDays, sicCode, customerSelectCodeId, parentStatementCustomerId, rankNumber1, rankNumber2, rankNumber3, rankNumber4, rankNumber5, singleInvoice, maxCollectionDays, uetAllowedEarlyDays, uetAllowedLateDays, normalDeliveryTime, dunnBradstreetNumber, currencyCode, alternateBillingName, alternateBillingAddressLine1, alternateBillingAddressLine2, alternateBillingAddressLine3, alternateBillingAddressLine4, alternateBillingCity, alternateBillingState, alternateBillingPostalCode, alternateBillingFax, alternateBillingSortBy, alternateBillingUseShipToAddress, glAccountOverride, substituteProductsOk, lineItemTaxableCode, disableDuplicatePoCheck, webUrl, handlingExempt, freightInsuranceRequired, extraHandlingCharge, freightExemptMinimumAmount, residentialAddress, commissionOverrideWriterPercentage, commissionOverrideInsideSalesRepPercentage, commissionOverrideOutsideSalesRepPercentage, commissionReviewDate, commissionReason, invoiceTiffPdfOption, statementTiffPdfOption, orderEntryInternalNotes, productLastPriceCheck, consignedInventoryFlag, consignedInventoryShipTo, creditManager, enableAnticipationCredit, lastUpdateDateTime, includeServiceChargeInServiceChargeCalc, additionalKeywords, commissionPlan, excludeFromSearchIndex, timeZone, pricePrecisionNumberOfDecimals, excludeServiceCharges, remitToOverrideId, backOrderPrintingOption, productDemandOverrideBranchId, arCollectionLastCallDate, arCollectionNextCallDate, arCollectionSentLetterFlag, arCollectionLetterTypeId, arCollectionTotalCallCount, arCollectionExcludeOverdueInvoicePrint, virtualSupplierAlternateCustomerId, virtualSupplierPassThroughDirect, virtualSupplierDefaultVendorId, virtualSupplierDefaultShipBranchId, virtualSupplierDefaultPriceBranchId, excludeConsignmentBillingCredit, restrictPriceChangesInOrderEntry, additionalName, passAlongDiscountPercentage, requireCheckVerification, consolidateInvoiceFlag, statementCycleCode, accountManager, orderEntryFillRatePercentage, orderEntryFillRateMeasurement, emailInvoicePrintStyle, emailBidPrintStyle, emailShipTicketPrintStyle, emailAcknowledgementPrintStyle, activityTriggerInheritOption, calculateOrderLevelSplitTaxFlag, rfPickingAllowQtyIncrease, telemarketingQueueAddToCallLog, telemarketingQueueFollowUpDateDays, strategicPricingCustomerCategory, strategicPricingListPriceCostMethod, strategicPricingCustomerSize, strategicPricingCustomerSizeLastUpdated, requiresSpecialLabels, requiresSpecialPackaging, excludeFromAutomaticWriteOffOfCashReceipts, excludeFromAutomaticWriteOffOfInvoice, excludeFromDemandCalcAsofDate, accessLists, allowedPoNumbers, allowedPriceLines, creditAuthPersonnelList, creditEftList, ediContractUploadLists, emails, freightCarrierInfoList, orderEntryPrompts, phones, priceClassOverrides, pricingContractCustomerLists, productCertifications, productZones, rebates, remoteChangeOrderMessageUsers, remoteEcommerceIds, remoteErrorMessageUsers, remoteLoginMessageUsers, remoteNewOrderMessageUsers, remoteReviewQueueUsers, remoteValidMessageUsers, remoteValidOrderStatuses, remoteValidShipVias, restrictedVendorLists, salesOrderEntryPrinterDocuments, shipToLists, stagingLocations, taxExceptionGroups, taxExemptInfoList, types, validPoNumbers, virtualSupplierInfoList, useStrategicFrieght, applyCreditsToOldestArPastDueLimit, creditReleasePercentageOverride, excludeFromCollectionInvoices, statementSubtotals, statementPageBreakOn, excludeFromMinimumDollarstoPrint, strategicPricingCustomerSensitivity, strategicPricingCustomerSensitivityExpiryDate, httpUrl, avalaraUsageType, remoteWebAPITradingPartnerType, exportOnly, alternateShippingAddresses);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Customer {\n");
    
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    addressLine3: ").append(toIndentedString(addressLine3)).append("\n");
    sb.append("    addressLine4: ").append(toIndentedString(addressLine4)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    isBillTo: ").append(toIndentedString(isBillTo)).append("\n");
    sb.append("    isShipTo: ").append(toIndentedString(isShipTo)).append("\n");
    sb.append("    isBranch: ").append(toIndentedString(isBranch)).append("\n");
    sb.append("    isBranchCash: ").append(toIndentedString(isBranchCash)).append("\n");
    sb.append("    isProspect: ").append(toIndentedString(isProspect)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("    nameIndex: ").append(toIndentedString(nameIndex)).append("\n");
    sb.append("    billToId: ").append(toIndentedString(billToId)).append("\n");
    sb.append("    defaultPriceClass: ").append(toIndentedString(defaultPriceClass)).append("\n");
    sb.append("    ediId: ").append(toIndentedString(ediId)).append("\n");
    sb.append("    orderEntryMessage: ").append(toIndentedString(orderEntryMessage)).append("\n");
    sb.append("    creditLimit: ").append(toIndentedString(creditLimit)).append("\n");
    sb.append("    pastDueLimit: ").append(toIndentedString(pastDueLimit)).append("\n");
    sb.append("    jobLimit: ").append(toIndentedString(jobLimit)).append("\n");
    sb.append("    pastDueDays: ").append(toIndentedString(pastDueDays)).append("\n");
    sb.append("    stockDepositPercentage: ").append(toIndentedString(stockDepositPercentage)).append("\n");
    sb.append("    nonstockDepositPercentage: ").append(toIndentedString(nonstockDepositPercentage)).append("\n");
    sb.append("    alwaysCod: ").append(toIndentedString(alwaysCod)).append("\n");
    sb.append("    codWhenCreditExceeded: ").append(toIndentedString(codWhenCreditExceeded)).append("\n");
    sb.append("    approvalRequired: ").append(toIndentedString(approvalRequired)).append("\n");
    sb.append("    approvalRequiredWhenCreditExceeded: ").append(toIndentedString(approvalRequiredWhenCreditExceeded)).append("\n");
    sb.append("    noOrderEntry: ").append(toIndentedString(noOrderEntry)).append("\n");
    sb.append("    noOrderEntryWhenCreditExceeded: ").append(toIndentedString(noOrderEntryWhenCreditExceeded)).append("\n");
    sb.append("    noOrderEntryUnlessAuth: ").append(toIndentedString(noOrderEntryUnlessAuth)).append("\n");
    sb.append("    noPrintShipTicketWhenCreditExceeded: ").append(toIndentedString(noPrintShipTicketWhenCreditExceeded)).append("\n");
    sb.append("    noPrintShipTicketUnlessAuth: ").append(toIndentedString(noPrintShipTicketUnlessAuth)).append("\n");
    sb.append("    doNotSaveCreditCardInfo: ").append(toIndentedString(doNotSaveCreditCardInfo)).append("\n");
    sb.append("    totalCreditHoldFlag: ").append(toIndentedString(totalCreditHoldFlag)).append("\n");
    sb.append("    overrideInvoiceTerms: ").append(toIndentedString(overrideInvoiceTerms)).append("\n");
    sb.append("    authPersonnelOnly: ").append(toIndentedString(authPersonnelOnly)).append("\n");
    sb.append("    defaultTerms: ").append(toIndentedString(defaultTerms)).append("\n");
    sb.append("    directTerms: ").append(toIndentedString(directTerms)).append("\n");
    sb.append("    companyCheckAccepted: ").append(toIndentedString(companyCheckAccepted)).append("\n");
    sb.append("    personalCheckAccepted: ").append(toIndentedString(personalCheckAccepted)).append("\n");
    sb.append("    taxJurisdictionOverride: ").append(toIndentedString(taxJurisdictionOverride)).append("\n");
    sb.append("    applyCreditsToOldestAr: ").append(toIndentedString(applyCreditsToOldestAr)).append("\n");
    sb.append("    creditControlType: ").append(toIndentedString(creditControlType)).append("\n");
    sb.append("    freightOutExempt: ").append(toIndentedString(freightOutExempt)).append("\n");
    sb.append("    freightInExempt: ").append(toIndentedString(freightInExempt)).append("\n");
    sb.append("    separateAr: ").append(toIndentedString(separateAr)).append("\n");
    sb.append("    outsideSalesperson: ").append(toIndentedString(outsideSalesperson)).append("\n");
    sb.append("    defaultPrintStyle: ").append(toIndentedString(defaultPrintStyle)).append("\n");
    sb.append("    invoicePrintStyle: ").append(toIndentedString(invoicePrintStyle)).append("\n");
    sb.append("    backOrderStatus: ").append(toIndentedString(backOrderStatus)).append("\n");
    sb.append("    insideSalesperson: ").append(toIndentedString(insideSalesperson)).append("\n");
    sb.append("    poNumberRequired: ").append(toIndentedString(poNumberRequired)).append("\n");
    sb.append("    defaultPoNumber: ").append(toIndentedString(defaultPoNumber)).append("\n");
    sb.append("    defaultReleaseNumber: ").append(toIndentedString(defaultReleaseNumber)).append("\n");
    sb.append("    defaultShipVia: ").append(toIndentedString(defaultShipVia)).append("\n");
    sb.append("    sixMonthAverageAr: ").append(toIndentedString(sixMonthAverageAr)).append("\n");
    sb.append("    sixMonthHighAr: ").append(toIndentedString(sixMonthHighAr)).append("\n");
    sb.append("    sixMonthAveragePaymentDays: ").append(toIndentedString(sixMonthAveragePaymentDays)).append("\n");
    sb.append("    twelveMonthAverageAr: ").append(toIndentedString(twelveMonthAverageAr)).append("\n");
    sb.append("    twelveMonthHighAr: ").append(toIndentedString(twelveMonthHighAr)).append("\n");
    sb.append("    twelveMonthAveragePaymentDays: ").append(toIndentedString(twelveMonthAveragePaymentDays)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    invoicePrintCopiesSetting: ").append(toIndentedString(invoicePrintCopiesSetting)).append("\n");
    sb.append("    invoiceFaxCopiesSetting: ").append(toIndentedString(invoiceFaxCopiesSetting)).append("\n");
    sb.append("    disableFtpBilling: ").append(toIndentedString(disableFtpBilling)).append("\n");
    sb.append("    emailBatchInvoiceGroupingMethod: ").append(toIndentedString(emailBatchInvoiceGroupingMethod)).append("\n");
    sb.append("    invoiceSelectCode: ").append(toIndentedString(invoiceSelectCode)).append("\n");
    sb.append("    orderEntryShippingInstructions: ").append(toIndentedString(orderEntryShippingInstructions)).append("\n");
    sb.append("    homeBranch: ").append(toIndentedString(homeBranch)).append("\n");
    sb.append("    homeTerritory: ").append(toIndentedString(homeTerritory)).append("\n");
    sb.append("    parentCustomerStatementType: ").append(toIndentedString(parentCustomerStatementType)).append("\n");
    sb.append("    statementType: ").append(toIndentedString(statementType)).append("\n");
    sb.append("    batchStatementSetting: ").append(toIndentedString(batchStatementSetting)).append("\n");
    sb.append("    autoDelete: ").append(toIndentedString(autoDelete)).append("\n");
    sb.append("    customerPartNumberAlternateCustomer: ").append(toIndentedString(customerPartNumberAlternateCustomer)).append("\n");
    sb.append("    remoteLogBidsForReview: ").append(toIndentedString(remoteLogBidsForReview)).append("\n");
    sb.append("    remoteLogOrdersForReview: ").append(toIndentedString(remoteLogOrdersForReview)).append("\n");
    sb.append("    remoteSlavePrinter: ").append(toIndentedString(remoteSlavePrinter)).append("\n");
    sb.append("    remoteWebLoginMessage: ").append(toIndentedString(remoteWebLoginMessage)).append("\n");
    sb.append("    remoteDisplayProductAvail: ").append(toIndentedString(remoteDisplayProductAvail)).append("\n");
    sb.append("    remoteDefaultOrderStatus: ").append(toIndentedString(remoteDefaultOrderStatus)).append("\n");
    sb.append("    remoteWebPassword: ").append(toIndentedString(remoteWebPassword)).append("\n");
    sb.append("    remoteOnlyLogOrdersWithErrors: ").append(toIndentedString(remoteOnlyLogOrdersWithErrors)).append("\n");
    sb.append("    remoteRoundToSellPackageQty: ").append(toIndentedString(remoteRoundToSellPackageQty)).append("\n");
    sb.append("    remoteBranchAvailOption: ").append(toIndentedString(remoteBranchAvailOption)).append("\n");
    sb.append("    remoteWebDiscountPercentage: ").append(toIndentedString(remoteWebDiscountPercentage)).append("\n");
    sb.append("    remoteWebArPassword: ").append(toIndentedString(remoteWebArPassword)).append("\n");
    sb.append("    remoteWebDisplayListPrice: ").append(toIndentedString(remoteWebDisplayListPrice)).append("\n");
    sb.append("    remoteWebCreditCardPaymentRequired: ").append(toIndentedString(remoteWebCreditCardPaymentRequired)).append("\n");
    sb.append("    remoteWebOrderedByRequired: ").append(toIndentedString(remoteWebOrderedByRequired)).append("\n");
    sb.append("    remoteWebEnableShipToCreate: ").append(toIndentedString(remoteWebEnableShipToCreate)).append("\n");
    sb.append("    remoteWebHideArLedger: ").append(toIndentedString(remoteWebHideArLedger)).append("\n");
    sb.append("    remoteWebHideArInquiry: ").append(toIndentedString(remoteWebHideArInquiry)).append("\n");
    sb.append("    remoteWebB2bPostUrlDefault: ").append(toIndentedString(remoteWebB2bPostUrlDefault)).append("\n");
    sb.append("    remoteWebB2bPostUrlAcknowledgement: ").append(toIndentedString(remoteWebB2bPostUrlAcknowledgement)).append("\n");
    sb.append("    remoteWebB2bPostUrlAdvanceShipNotice: ").append(toIndentedString(remoteWebB2bPostUrlAdvanceShipNotice)).append("\n");
    sb.append("    remoteWebB2bPostUrlInvoice: ").append(toIndentedString(remoteWebB2bPostUrlInvoice)).append("\n");
    sb.append("    remoteWebLogoffUrl: ").append(toIndentedString(remoteWebLogoffUrl)).append("\n");
    sb.append("    remoteWebHideZeroPriceProducts: ").append(toIndentedString(remoteWebHideZeroPriceProducts)).append("\n");
    sb.append("    remoteWebNumberOfShipTosToDisplay: ").append(toIndentedString(remoteWebNumberOfShipTosToDisplay)).append("\n");
    sb.append("    remoteWebDisplayPdwItems: ").append(toIndentedString(remoteWebDisplayPdwItems)).append("\n");
    sb.append("    remoteWebDisplayCatalogItems: ").append(toIndentedString(remoteWebDisplayCatalogItems)).append("\n");
    sb.append("    remoteWebAllowedPricingVarianceType: ").append(toIndentedString(remoteWebAllowedPricingVarianceType)).append("\n");
    sb.append("    remoteWebAllowedPricingVarianceValue: ").append(toIndentedString(remoteWebAllowedPricingVarianceValue)).append("\n");
    sb.append("    remoteWebBidViewOnly: ").append(toIndentedString(remoteWebBidViewOnly)).append("\n");
    sb.append("    remoteWebXmlVendorId: ").append(toIndentedString(remoteWebXmlVendorId)).append("\n");
    sb.append("    remoteWebXmlVendorLogin: ").append(toIndentedString(remoteWebXmlVendorLogin)).append("\n");
    sb.append("    remoteWebXmlVendorPassword: ").append(toIndentedString(remoteWebXmlVendorPassword)).append("\n");
    sb.append("    remoteWebXmlUsePartnerPricing: ").append(toIndentedString(remoteWebXmlUsePartnerPricing)).append("\n");
    sb.append("    remoteWebEnableShipBranchOverride: ").append(toIndentedString(remoteWebEnableShipBranchOverride)).append("\n");
    sb.append("    remoteWebCategoryDisplayId: ").append(toIndentedString(remoteWebCategoryDisplayId)).append("\n");
    sb.append("    remoteVerifyProductAvailability: ").append(toIndentedString(remoteVerifyProductAvailability)).append("\n");
    sb.append("    remoteWebEnableShipToEdit: ").append(toIndentedString(remoteWebEnableShipToEdit)).append("\n");
    sb.append("    remoteWebAccessControlMethod: ").append(toIndentedString(remoteWebAccessControlMethod)).append("\n");
    sb.append("    orderStatusOverride: ").append(toIndentedString(orderStatusOverride)).append("\n");
    sb.append("    salesSourceOverride: ").append(toIndentedString(salesSourceOverride)).append("\n");
    sb.append("    shipBranchOverride: ").append(toIndentedString(shipBranchOverride)).append("\n");
    sb.append("    priceBranchOverride: ").append(toIndentedString(priceBranchOverride)).append("\n");
    sb.append("    printKitComponentOverride: ").append(toIndentedString(printKitComponentOverride)).append("\n");
    sb.append("    requiredDateLeadTime: ").append(toIndentedString(requiredDateLeadTime)).append("\n");
    sb.append("    maxEarlyShipDays: ").append(toIndentedString(maxEarlyShipDays)).append("\n");
    sb.append("    sicCode: ").append(toIndentedString(sicCode)).append("\n");
    sb.append("    customerSelectCodeId: ").append(toIndentedString(customerSelectCodeId)).append("\n");
    sb.append("    parentStatementCustomerId: ").append(toIndentedString(parentStatementCustomerId)).append("\n");
    sb.append("    rankNumber1: ").append(toIndentedString(rankNumber1)).append("\n");
    sb.append("    rankNumber2: ").append(toIndentedString(rankNumber2)).append("\n");
    sb.append("    rankNumber3: ").append(toIndentedString(rankNumber3)).append("\n");
    sb.append("    rankNumber4: ").append(toIndentedString(rankNumber4)).append("\n");
    sb.append("    rankNumber5: ").append(toIndentedString(rankNumber5)).append("\n");
    sb.append("    singleInvoice: ").append(toIndentedString(singleInvoice)).append("\n");
    sb.append("    maxCollectionDays: ").append(toIndentedString(maxCollectionDays)).append("\n");
    sb.append("    uetAllowedEarlyDays: ").append(toIndentedString(uetAllowedEarlyDays)).append("\n");
    sb.append("    uetAllowedLateDays: ").append(toIndentedString(uetAllowedLateDays)).append("\n");
    sb.append("    normalDeliveryTime: ").append(toIndentedString(normalDeliveryTime)).append("\n");
    sb.append("    dunnBradstreetNumber: ").append(toIndentedString(dunnBradstreetNumber)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    alternateBillingName: ").append(toIndentedString(alternateBillingName)).append("\n");
    sb.append("    alternateBillingAddressLine1: ").append(toIndentedString(alternateBillingAddressLine1)).append("\n");
    sb.append("    alternateBillingAddressLine2: ").append(toIndentedString(alternateBillingAddressLine2)).append("\n");
    sb.append("    alternateBillingAddressLine3: ").append(toIndentedString(alternateBillingAddressLine3)).append("\n");
    sb.append("    alternateBillingAddressLine4: ").append(toIndentedString(alternateBillingAddressLine4)).append("\n");
    sb.append("    alternateBillingCity: ").append(toIndentedString(alternateBillingCity)).append("\n");
    sb.append("    alternateBillingState: ").append(toIndentedString(alternateBillingState)).append("\n");
    sb.append("    alternateBillingPostalCode: ").append(toIndentedString(alternateBillingPostalCode)).append("\n");
    sb.append("    alternateBillingFax: ").append(toIndentedString(alternateBillingFax)).append("\n");
    sb.append("    alternateBillingSortBy: ").append(toIndentedString(alternateBillingSortBy)).append("\n");
    sb.append("    alternateBillingUseShipToAddress: ").append(toIndentedString(alternateBillingUseShipToAddress)).append("\n");
    sb.append("    glAccountOverride: ").append(toIndentedString(glAccountOverride)).append("\n");
    sb.append("    substituteProductsOk: ").append(toIndentedString(substituteProductsOk)).append("\n");
    sb.append("    lineItemTaxableCode: ").append(toIndentedString(lineItemTaxableCode)).append("\n");
    sb.append("    disableDuplicatePoCheck: ").append(toIndentedString(disableDuplicatePoCheck)).append("\n");
    sb.append("    webUrl: ").append(toIndentedString(webUrl)).append("\n");
    sb.append("    handlingExempt: ").append(toIndentedString(handlingExempt)).append("\n");
    sb.append("    freightInsuranceRequired: ").append(toIndentedString(freightInsuranceRequired)).append("\n");
    sb.append("    extraHandlingCharge: ").append(toIndentedString(extraHandlingCharge)).append("\n");
    sb.append("    freightExemptMinimumAmount: ").append(toIndentedString(freightExemptMinimumAmount)).append("\n");
    sb.append("    residentialAddress: ").append(toIndentedString(residentialAddress)).append("\n");
    sb.append("    commissionOverrideWriterPercentage: ").append(toIndentedString(commissionOverrideWriterPercentage)).append("\n");
    sb.append("    commissionOverrideInsideSalesRepPercentage: ").append(toIndentedString(commissionOverrideInsideSalesRepPercentage)).append("\n");
    sb.append("    commissionOverrideOutsideSalesRepPercentage: ").append(toIndentedString(commissionOverrideOutsideSalesRepPercentage)).append("\n");
    sb.append("    commissionReviewDate: ").append(toIndentedString(commissionReviewDate)).append("\n");
    sb.append("    commissionReason: ").append(toIndentedString(commissionReason)).append("\n");
    sb.append("    invoiceTiffPdfOption: ").append(toIndentedString(invoiceTiffPdfOption)).append("\n");
    sb.append("    statementTiffPdfOption: ").append(toIndentedString(statementTiffPdfOption)).append("\n");
    sb.append("    orderEntryInternalNotes: ").append(toIndentedString(orderEntryInternalNotes)).append("\n");
    sb.append("    productLastPriceCheck: ").append(toIndentedString(productLastPriceCheck)).append("\n");
    sb.append("    consignedInventoryFlag: ").append(toIndentedString(consignedInventoryFlag)).append("\n");
    sb.append("    consignedInventoryShipTo: ").append(toIndentedString(consignedInventoryShipTo)).append("\n");
    sb.append("    creditManager: ").append(toIndentedString(creditManager)).append("\n");
    sb.append("    enableAnticipationCredit: ").append(toIndentedString(enableAnticipationCredit)).append("\n");
    sb.append("    lastUpdateDateTime: ").append(toIndentedString(lastUpdateDateTime)).append("\n");
    sb.append("    includeServiceChargeInServiceChargeCalc: ").append(toIndentedString(includeServiceChargeInServiceChargeCalc)).append("\n");
    sb.append("    additionalKeywords: ").append(toIndentedString(additionalKeywords)).append("\n");
    sb.append("    commissionPlan: ").append(toIndentedString(commissionPlan)).append("\n");
    sb.append("    excludeFromSearchIndex: ").append(toIndentedString(excludeFromSearchIndex)).append("\n");
    sb.append("    timeZone: ").append(toIndentedString(timeZone)).append("\n");
    sb.append("    pricePrecisionNumberOfDecimals: ").append(toIndentedString(pricePrecisionNumberOfDecimals)).append("\n");
    sb.append("    excludeServiceCharges: ").append(toIndentedString(excludeServiceCharges)).append("\n");
    sb.append("    remitToOverrideId: ").append(toIndentedString(remitToOverrideId)).append("\n");
    sb.append("    backOrderPrintingOption: ").append(toIndentedString(backOrderPrintingOption)).append("\n");
    sb.append("    productDemandOverrideBranchId: ").append(toIndentedString(productDemandOverrideBranchId)).append("\n");
    sb.append("    arCollectionLastCallDate: ").append(toIndentedString(arCollectionLastCallDate)).append("\n");
    sb.append("    arCollectionNextCallDate: ").append(toIndentedString(arCollectionNextCallDate)).append("\n");
    sb.append("    arCollectionSentLetterFlag: ").append(toIndentedString(arCollectionSentLetterFlag)).append("\n");
    sb.append("    arCollectionLetterTypeId: ").append(toIndentedString(arCollectionLetterTypeId)).append("\n");
    sb.append("    arCollectionTotalCallCount: ").append(toIndentedString(arCollectionTotalCallCount)).append("\n");
    sb.append("    arCollectionExcludeOverdueInvoicePrint: ").append(toIndentedString(arCollectionExcludeOverdueInvoicePrint)).append("\n");
    sb.append("    virtualSupplierAlternateCustomerId: ").append(toIndentedString(virtualSupplierAlternateCustomerId)).append("\n");
    sb.append("    virtualSupplierPassThroughDirect: ").append(toIndentedString(virtualSupplierPassThroughDirect)).append("\n");
    sb.append("    virtualSupplierDefaultVendorId: ").append(toIndentedString(virtualSupplierDefaultVendorId)).append("\n");
    sb.append("    virtualSupplierDefaultShipBranchId: ").append(toIndentedString(virtualSupplierDefaultShipBranchId)).append("\n");
    sb.append("    virtualSupplierDefaultPriceBranchId: ").append(toIndentedString(virtualSupplierDefaultPriceBranchId)).append("\n");
    sb.append("    excludeConsignmentBillingCredit: ").append(toIndentedString(excludeConsignmentBillingCredit)).append("\n");
    sb.append("    restrictPriceChangesInOrderEntry: ").append(toIndentedString(restrictPriceChangesInOrderEntry)).append("\n");
    sb.append("    additionalName: ").append(toIndentedString(additionalName)).append("\n");
    sb.append("    passAlongDiscountPercentage: ").append(toIndentedString(passAlongDiscountPercentage)).append("\n");
    sb.append("    requireCheckVerification: ").append(toIndentedString(requireCheckVerification)).append("\n");
    sb.append("    consolidateInvoiceFlag: ").append(toIndentedString(consolidateInvoiceFlag)).append("\n");
    sb.append("    statementCycleCode: ").append(toIndentedString(statementCycleCode)).append("\n");
    sb.append("    accountManager: ").append(toIndentedString(accountManager)).append("\n");
    sb.append("    orderEntryFillRatePercentage: ").append(toIndentedString(orderEntryFillRatePercentage)).append("\n");
    sb.append("    orderEntryFillRateMeasurement: ").append(toIndentedString(orderEntryFillRateMeasurement)).append("\n");
    sb.append("    emailInvoicePrintStyle: ").append(toIndentedString(emailInvoicePrintStyle)).append("\n");
    sb.append("    emailBidPrintStyle: ").append(toIndentedString(emailBidPrintStyle)).append("\n");
    sb.append("    emailShipTicketPrintStyle: ").append(toIndentedString(emailShipTicketPrintStyle)).append("\n");
    sb.append("    emailAcknowledgementPrintStyle: ").append(toIndentedString(emailAcknowledgementPrintStyle)).append("\n");
    sb.append("    activityTriggerInheritOption: ").append(toIndentedString(activityTriggerInheritOption)).append("\n");
    sb.append("    calculateOrderLevelSplitTaxFlag: ").append(toIndentedString(calculateOrderLevelSplitTaxFlag)).append("\n");
    sb.append("    rfPickingAllowQtyIncrease: ").append(toIndentedString(rfPickingAllowQtyIncrease)).append("\n");
    sb.append("    telemarketingQueueAddToCallLog: ").append(toIndentedString(telemarketingQueueAddToCallLog)).append("\n");
    sb.append("    telemarketingQueueFollowUpDateDays: ").append(toIndentedString(telemarketingQueueFollowUpDateDays)).append("\n");
    sb.append("    strategicPricingCustomerCategory: ").append(toIndentedString(strategicPricingCustomerCategory)).append("\n");
    sb.append("    strategicPricingListPriceCostMethod: ").append(toIndentedString(strategicPricingListPriceCostMethod)).append("\n");
    sb.append("    strategicPricingCustomerSize: ").append(toIndentedString(strategicPricingCustomerSize)).append("\n");
    sb.append("    strategicPricingCustomerSizeLastUpdated: ").append(toIndentedString(strategicPricingCustomerSizeLastUpdated)).append("\n");
    sb.append("    requiresSpecialLabels: ").append(toIndentedString(requiresSpecialLabels)).append("\n");
    sb.append("    requiresSpecialPackaging: ").append(toIndentedString(requiresSpecialPackaging)).append("\n");
    sb.append("    excludeFromAutomaticWriteOffOfCashReceipts: ").append(toIndentedString(excludeFromAutomaticWriteOffOfCashReceipts)).append("\n");
    sb.append("    excludeFromAutomaticWriteOffOfInvoice: ").append(toIndentedString(excludeFromAutomaticWriteOffOfInvoice)).append("\n");
    sb.append("    excludeFromDemandCalcAsofDate: ").append(toIndentedString(excludeFromDemandCalcAsofDate)).append("\n");
    sb.append("    accessLists: ").append(toIndentedString(accessLists)).append("\n");
    sb.append("    allowedPoNumbers: ").append(toIndentedString(allowedPoNumbers)).append("\n");
    sb.append("    allowedPriceLines: ").append(toIndentedString(allowedPriceLines)).append("\n");
    sb.append("    creditAuthPersonnelList: ").append(toIndentedString(creditAuthPersonnelList)).append("\n");
    sb.append("    creditEftList: ").append(toIndentedString(creditEftList)).append("\n");
    sb.append("    ediContractUploadLists: ").append(toIndentedString(ediContractUploadLists)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("    freightCarrierInfoList: ").append(toIndentedString(freightCarrierInfoList)).append("\n");
    sb.append("    orderEntryPrompts: ").append(toIndentedString(orderEntryPrompts)).append("\n");
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    priceClassOverrides: ").append(toIndentedString(priceClassOverrides)).append("\n");
    sb.append("    pricingContractCustomerLists: ").append(toIndentedString(pricingContractCustomerLists)).append("\n");
    sb.append("    productCertifications: ").append(toIndentedString(productCertifications)).append("\n");
    sb.append("    productZones: ").append(toIndentedString(productZones)).append("\n");
    sb.append("    rebates: ").append(toIndentedString(rebates)).append("\n");
    sb.append("    remoteChangeOrderMessageUsers: ").append(toIndentedString(remoteChangeOrderMessageUsers)).append("\n");
    sb.append("    remoteEcommerceIds: ").append(toIndentedString(remoteEcommerceIds)).append("\n");
    sb.append("    remoteErrorMessageUsers: ").append(toIndentedString(remoteErrorMessageUsers)).append("\n");
    sb.append("    remoteLoginMessageUsers: ").append(toIndentedString(remoteLoginMessageUsers)).append("\n");
    sb.append("    remoteNewOrderMessageUsers: ").append(toIndentedString(remoteNewOrderMessageUsers)).append("\n");
    sb.append("    remoteReviewQueueUsers: ").append(toIndentedString(remoteReviewQueueUsers)).append("\n");
    sb.append("    remoteValidMessageUsers: ").append(toIndentedString(remoteValidMessageUsers)).append("\n");
    sb.append("    remoteValidOrderStatuses: ").append(toIndentedString(remoteValidOrderStatuses)).append("\n");
    sb.append("    remoteValidShipVias: ").append(toIndentedString(remoteValidShipVias)).append("\n");
    sb.append("    restrictedVendorLists: ").append(toIndentedString(restrictedVendorLists)).append("\n");
    sb.append("    salesOrderEntryPrinterDocuments: ").append(toIndentedString(salesOrderEntryPrinterDocuments)).append("\n");
    sb.append("    shipToLists: ").append(toIndentedString(shipToLists)).append("\n");
    sb.append("    stagingLocations: ").append(toIndentedString(stagingLocations)).append("\n");
    sb.append("    taxExceptionGroups: ").append(toIndentedString(taxExceptionGroups)).append("\n");
    sb.append("    taxExemptInfoList: ").append(toIndentedString(taxExemptInfoList)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    validPoNumbers: ").append(toIndentedString(validPoNumbers)).append("\n");
    sb.append("    virtualSupplierInfoList: ").append(toIndentedString(virtualSupplierInfoList)).append("\n");
    sb.append("    useStrategicFrieght: ").append(toIndentedString(useStrategicFrieght)).append("\n");
    sb.append("    applyCreditsToOldestArPastDueLimit: ").append(toIndentedString(applyCreditsToOldestArPastDueLimit)).append("\n");
    sb.append("    creditReleasePercentageOverride: ").append(toIndentedString(creditReleasePercentageOverride)).append("\n");
    sb.append("    excludeFromCollectionInvoices: ").append(toIndentedString(excludeFromCollectionInvoices)).append("\n");
    sb.append("    statementSubtotals: ").append(toIndentedString(statementSubtotals)).append("\n");
    sb.append("    statementPageBreakOn: ").append(toIndentedString(statementPageBreakOn)).append("\n");
    sb.append("    excludeFromMinimumDollarstoPrint: ").append(toIndentedString(excludeFromMinimumDollarstoPrint)).append("\n");
    sb.append("    strategicPricingCustomerSensitivity: ").append(toIndentedString(strategicPricingCustomerSensitivity)).append("\n");
    sb.append("    strategicPricingCustomerSensitivityExpiryDate: ").append(toIndentedString(strategicPricingCustomerSensitivityExpiryDate)).append("\n");
    sb.append("    httpUrl: ").append(toIndentedString(httpUrl)).append("\n");
    sb.append("    avalaraUsageType: ").append(toIndentedString(avalaraUsageType)).append("\n");
    sb.append("    remoteWebAPITradingPartnerType: ").append(toIndentedString(remoteWebAPITradingPartnerType)).append("\n");
    sb.append("    exportOnly: ").append(toIndentedString(exportOnly)).append("\n");
    sb.append("    alternateShippingAddresses: ").append(toIndentedString(alternateShippingAddresses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
