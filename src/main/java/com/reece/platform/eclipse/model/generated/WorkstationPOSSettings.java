/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.NormalNeverPrompt;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Point of Sale settings for a given Terminal/Workstation  File : TTY.DEFINE
 */
@Schema(description = "Point of Sale settings for a given Terminal/Workstation  File : TTY.DEFINE")

public class WorkstationPOSSettings {
  @JsonProperty("receiptPrinterFlag")
  private Boolean receiptPrinterFlag = null;

  @JsonProperty("isCashDrawerAttached")
  private Boolean isCashDrawerAttached = null;

  @JsonProperty("isPoleDisplayAttached")
  private Boolean isPoleDisplayAttached = null;

  @JsonProperty("receiptPrinterEmulation")
  private String receiptPrinterEmulation = null;

  @JsonProperty("printPickTicket")
  private NormalNeverPrompt printPickTicket = null;

  public WorkstationPOSSettings receiptPrinterFlag(Boolean receiptPrinterFlag) {
    this.receiptPrinterFlag = receiptPrinterFlag;
    return this;
  }

   /**
   * Receipt Priner  File : TTY.DEFINE  Attr : 12,1
   * @return receiptPrinterFlag
  **/
  @Schema(description = "Receipt Priner  File : TTY.DEFINE  Attr : 12,1")
  public Boolean isReceiptPrinterFlag() {
    return receiptPrinterFlag;
  }

  public void setReceiptPrinterFlag(Boolean receiptPrinterFlag) {
    this.receiptPrinterFlag = receiptPrinterFlag;
  }

  public WorkstationPOSSettings isCashDrawerAttached(Boolean isCashDrawerAttached) {
    this.isCashDrawerAttached = isCashDrawerAttached;
    return this;
  }

   /**
   * Cash Drawer attached  File : TTY.DEFINE  Attr : 12,2
   * @return isCashDrawerAttached
  **/
  @Schema(description = "Cash Drawer attached  File : TTY.DEFINE  Attr : 12,2")
  public Boolean isIsCashDrawerAttached() {
    return isCashDrawerAttached;
  }

  public void setIsCashDrawerAttached(Boolean isCashDrawerAttached) {
    this.isCashDrawerAttached = isCashDrawerAttached;
  }

  public WorkstationPOSSettings isPoleDisplayAttached(Boolean isPoleDisplayAttached) {
    this.isPoleDisplayAttached = isPoleDisplayAttached;
    return this;
  }

   /**
   * Pole Display attached  File : TTY.DEFINE  Attr : 12,3
   * @return isPoleDisplayAttached
  **/
  @Schema(description = "Pole Display attached  File : TTY.DEFINE  Attr : 12,3")
  public Boolean isIsPoleDisplayAttached() {
    return isPoleDisplayAttached;
  }

  public void setIsPoleDisplayAttached(Boolean isPoleDisplayAttached) {
    this.isPoleDisplayAttached = isPoleDisplayAttached;
  }

  public WorkstationPOSSettings receiptPrinterEmulation(String receiptPrinterEmulation) {
    this.receiptPrinterEmulation = receiptPrinterEmulation;
    return this;
  }

   /**
   * Receipt Printer Emulation  File : TTY.DEFINE  Attr : 12,4
   * @return receiptPrinterEmulation
  **/
  @Schema(description = "Receipt Printer Emulation  File : TTY.DEFINE  Attr : 12,4")
  public String getReceiptPrinterEmulation() {
    return receiptPrinterEmulation;
  }

  public void setReceiptPrinterEmulation(String receiptPrinterEmulation) {
    this.receiptPrinterEmulation = receiptPrinterEmulation;
  }

  public WorkstationPOSSettings printPickTicket(NormalNeverPrompt printPickTicket) {
    this.printPickTicket = printPickTicket;
    return this;
  }

   /**
   * Get printPickTicket
   * @return printPickTicket
  **/
  @Valid
  @Schema(description = "")
  public NormalNeverPrompt getPrintPickTicket() {
    return printPickTicket;
  }

  public void setPrintPickTicket(NormalNeverPrompt printPickTicket) {
    this.printPickTicket = printPickTicket;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkstationPOSSettings workstationPOSSettings = (WorkstationPOSSettings) o;
    return Objects.equals(this.receiptPrinterFlag, workstationPOSSettings.receiptPrinterFlag) &&
        Objects.equals(this.isCashDrawerAttached, workstationPOSSettings.isCashDrawerAttached) &&
        Objects.equals(this.isPoleDisplayAttached, workstationPOSSettings.isPoleDisplayAttached) &&
        Objects.equals(this.receiptPrinterEmulation, workstationPOSSettings.receiptPrinterEmulation) &&
        Objects.equals(this.printPickTicket, workstationPOSSettings.printPickTicket);
  }

  @Override
  public int hashCode() {
    return Objects.hash(receiptPrinterFlag, isCashDrawerAttached, isPoleDisplayAttached, receiptPrinterEmulation, printPickTicket);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkstationPOSSettings {\n");
    
    sb.append("    receiptPrinterFlag: ").append(toIndentedString(receiptPrinterFlag)).append("\n");
    sb.append("    isCashDrawerAttached: ").append(toIndentedString(isCashDrawerAttached)).append("\n");
    sb.append("    isPoleDisplayAttached: ").append(toIndentedString(isPoleDisplayAttached)).append("\n");
    sb.append("    receiptPrinterEmulation: ").append(toIndentedString(receiptPrinterEmulation)).append("\n");
    sb.append("    printPickTicket: ").append(toIndentedString(printPickTicket)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
