/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.ContactWebAccountManager;
import com.reece.platform.eclipse.model.generated.Money;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse ContactWeb.
 */
@Schema(description = "Object representing an Eclipse ContactWeb.")

public class ContactWeb {
  @JsonProperty("updateKey")
  private String updateKey = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("contactId")
  private Integer contactId = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("hideAccountInquiry")
  private Boolean hideAccountInquiry = null;

  @JsonProperty("superuser")
  private Boolean superuser = null;

  @JsonProperty("trackerViewOnly")
  private Boolean trackerViewOnly = null;

  @JsonProperty("enableShipToCreate")
  private Boolean enableShipToCreate = null;

  @JsonProperty("productDisplayViewThumbnails")
  private String productDisplayViewThumbnails = null;

  @JsonProperty("bidViewOnly")
  private Boolean bidViewOnly = null;

  @JsonProperty("creditDecisionMaker")
  private Boolean creditDecisionMaker = null;

  @JsonProperty("numberOfItemsToDisplay")
  private Integer numberOfItemsToDisplay = null;

  @JsonProperty("expressCheckoutPaymentType")
  private String expressCheckoutPaymentType = null;

  @JsonProperty("sendEmailOnTrackerUpdate")
  private Boolean sendEmailOnTrackerUpdate = null;

  @JsonProperty("hideAccountLedger")
  private Boolean hideAccountLedger = null;

  @JsonProperty("enableShipBranchOverride")
  private Boolean enableShipBranchOverride = null;

  @JsonProperty("enableShipToEdit")
  private Boolean enableShipToEdit = null;

  @JsonProperty("orderCreditLimit")
  private Money orderCreditLimit = null;

  @JsonProperty("enableJobManagementLogin")
  private Boolean enableJobManagementLogin = null;

  @JsonProperty("webAccessControlMethod")
  private String webAccessControlMethod = null;

  @JsonProperty("accountManagers")
  private List<ContactWebAccountManager> accountManagers = null;

  public ContactWeb updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update key to handle concurrency during updates within Eclipse
   * @return updateKey
  **/
  @Schema(description = "Update key to handle concurrency during updates within Eclipse")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }

  public ContactWeb id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Eclipse ID for the record
   * @return id
  **/
  @Schema(description = "Eclipse ID for the record")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ContactWeb contactId(Integer contactId) {
    this.contactId = contactId;
    return this;
  }

   /**
   * Desc: The ContactWeb ContactId  File: WC.PASSWORD  Attr: 1
   * @return contactId
  **/
  @Schema(description = "Desc: The ContactWeb ContactId  File: WC.PASSWORD  Attr: 1")
  public Integer getContactId() {
    return contactId;
  }

  public void setContactId(Integer contactId) {
    this.contactId = contactId;
  }

  public ContactWeb password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Desc: The ContactWeb Password  File: WC.PASSWORD  Attr: 2
   * @return password
  **/
  @NotNull
 @Size(min=6,max=14)  @Schema(required = true, description = "Desc: The ContactWeb Password  File: WC.PASSWORD  Attr: 2")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public ContactWeb hideAccountInquiry(Boolean hideAccountInquiry) {
    this.hideAccountInquiry = hideAccountInquiry;
    return this;
  }

   /**
   * Desc: The ContactWeb HideAccountInquiry flag  File: WC.PASSWORD  Attr: 3
   * @return hideAccountInquiry
  **/
  @Schema(description = "Desc: The ContactWeb HideAccountInquiry flag  File: WC.PASSWORD  Attr: 3")
  public Boolean isHideAccountInquiry() {
    return hideAccountInquiry;
  }

  public void setHideAccountInquiry(Boolean hideAccountInquiry) {
    this.hideAccountInquiry = hideAccountInquiry;
  }

  public ContactWeb superuser(Boolean superuser) {
    this.superuser = superuser;
    return this;
  }

   /**
   * Desc: The ContactWeb Superuser flag  File: WC.PASSWORD  Attr: 5
   * @return superuser
  **/
  @Schema(description = "Desc: The ContactWeb Superuser flag  File: WC.PASSWORD  Attr: 5")
  public Boolean isSuperuser() {
    return superuser;
  }

  public void setSuperuser(Boolean superuser) {
    this.superuser = superuser;
  }

  public ContactWeb trackerViewOnly(Boolean trackerViewOnly) {
    this.trackerViewOnly = trackerViewOnly;
    return this;
  }

   /**
   * Desc: The ContactWeb TrackerViewOnly flag  File: WC.PASSWORD  Attr: 6
   * @return trackerViewOnly
  **/
  @Schema(description = "Desc: The ContactWeb TrackerViewOnly flag  File: WC.PASSWORD  Attr: 6")
  public Boolean isTrackerViewOnly() {
    return trackerViewOnly;
  }

  public void setTrackerViewOnly(Boolean trackerViewOnly) {
    this.trackerViewOnly = trackerViewOnly;
  }

  public ContactWeb enableShipToCreate(Boolean enableShipToCreate) {
    this.enableShipToCreate = enableShipToCreate;
    return this;
  }

   /**
   * Desc: The ContactWeb EnableShipToCreate flag  File: WC.PASSWORD  Attr: 7
   * @return enableShipToCreate
  **/
  @Schema(description = "Desc: The ContactWeb EnableShipToCreate flag  File: WC.PASSWORD  Attr: 7")
  public Boolean isEnableShipToCreate() {
    return enableShipToCreate;
  }

  public void setEnableShipToCreate(Boolean enableShipToCreate) {
    this.enableShipToCreate = enableShipToCreate;
  }

  public ContactWeb productDisplayViewThumbnails(String productDisplayViewThumbnails) {
    this.productDisplayViewThumbnails = productDisplayViewThumbnails;
    return this;
  }

   /**
   * Desc: The ContactWeb ProductDisplayViewThumbnails  File: WC.PASSWORD  Attr: 8
   * @return productDisplayViewThumbnails
  **/
  @Schema(description = "Desc: The ContactWeb ProductDisplayViewThumbnails  File: WC.PASSWORD  Attr: 8")
  public String getProductDisplayViewThumbnails() {
    return productDisplayViewThumbnails;
  }

  public void setProductDisplayViewThumbnails(String productDisplayViewThumbnails) {
    this.productDisplayViewThumbnails = productDisplayViewThumbnails;
  }

  public ContactWeb bidViewOnly(Boolean bidViewOnly) {
    this.bidViewOnly = bidViewOnly;
    return this;
  }

   /**
   * Desc: The ContactWeb BidViewOnly flag  File: WC.PASSWORD  Attr: 9
   * @return bidViewOnly
  **/
  @Schema(description = "Desc: The ContactWeb BidViewOnly flag  File: WC.PASSWORD  Attr: 9")
  public Boolean isBidViewOnly() {
    return bidViewOnly;
  }

  public void setBidViewOnly(Boolean bidViewOnly) {
    this.bidViewOnly = bidViewOnly;
  }

  public ContactWeb creditDecisionMaker(Boolean creditDecisionMaker) {
    this.creditDecisionMaker = creditDecisionMaker;
    return this;
  }

   /**
   * Desc: The ContactWeb CreditDecisionMaker flag  File: WC.PASSWORD  Attr: 10
   * @return creditDecisionMaker
  **/
  @Schema(description = "Desc: The ContactWeb CreditDecisionMaker flag  File: WC.PASSWORD  Attr: 10")
  public Boolean isCreditDecisionMaker() {
    return creditDecisionMaker;
  }

  public void setCreditDecisionMaker(Boolean creditDecisionMaker) {
    this.creditDecisionMaker = creditDecisionMaker;
  }

  public ContactWeb numberOfItemsToDisplay(Integer numberOfItemsToDisplay) {
    this.numberOfItemsToDisplay = numberOfItemsToDisplay;
    return this;
  }

   /**
   * Desc: The ContactWeb NumberOfItemsToDisplay  File: WC.PASSWORD  Attr: 11
   * @return numberOfItemsToDisplay
  **/
  @Schema(description = "Desc: The ContactWeb NumberOfItemsToDisplay  File: WC.PASSWORD  Attr: 11")
  public Integer getNumberOfItemsToDisplay() {
    return numberOfItemsToDisplay;
  }

  public void setNumberOfItemsToDisplay(Integer numberOfItemsToDisplay) {
    this.numberOfItemsToDisplay = numberOfItemsToDisplay;
  }

  public ContactWeb expressCheckoutPaymentType(String expressCheckoutPaymentType) {
    this.expressCheckoutPaymentType = expressCheckoutPaymentType;
    return this;
  }

   /**
   * Desc: The ContactWeb ExpressCheckoutPaymentType  File: WC.PASSWORD  Attr: 13
   * @return expressCheckoutPaymentType
  **/
  @Schema(description = "Desc: The ContactWeb ExpressCheckoutPaymentType  File: WC.PASSWORD  Attr: 13")
  public String getExpressCheckoutPaymentType() {
    return expressCheckoutPaymentType;
  }

  public void setExpressCheckoutPaymentType(String expressCheckoutPaymentType) {
    this.expressCheckoutPaymentType = expressCheckoutPaymentType;
  }

  public ContactWeb sendEmailOnTrackerUpdate(Boolean sendEmailOnTrackerUpdate) {
    this.sendEmailOnTrackerUpdate = sendEmailOnTrackerUpdate;
    return this;
  }

   /**
   * Desc: The ContactWeb SendEmailOnTrackerUpdate flag  File: WC.PASSWORD  Attr: 14
   * @return sendEmailOnTrackerUpdate
  **/
  @Schema(description = "Desc: The ContactWeb SendEmailOnTrackerUpdate flag  File: WC.PASSWORD  Attr: 14")
  public Boolean isSendEmailOnTrackerUpdate() {
    return sendEmailOnTrackerUpdate;
  }

  public void setSendEmailOnTrackerUpdate(Boolean sendEmailOnTrackerUpdate) {
    this.sendEmailOnTrackerUpdate = sendEmailOnTrackerUpdate;
  }

  public ContactWeb hideAccountLedger(Boolean hideAccountLedger) {
    this.hideAccountLedger = hideAccountLedger;
    return this;
  }

   /**
   * Desc: The ContactWeb HideAccountLedger flag  File: WC.PASSWORD  Attr: 15
   * @return hideAccountLedger
  **/
  @Schema(description = "Desc: The ContactWeb HideAccountLedger flag  File: WC.PASSWORD  Attr: 15")
  public Boolean isHideAccountLedger() {
    return hideAccountLedger;
  }

  public void setHideAccountLedger(Boolean hideAccountLedger) {
    this.hideAccountLedger = hideAccountLedger;
  }

  public ContactWeb enableShipBranchOverride(Boolean enableShipBranchOverride) {
    this.enableShipBranchOverride = enableShipBranchOverride;
    return this;
  }

   /**
   * Desc: The ContactWeb EnableShipBranchOverride flag  File: WC.PASSWORD  Attr: 18
   * @return enableShipBranchOverride
  **/
  @Schema(description = "Desc: The ContactWeb EnableShipBranchOverride flag  File: WC.PASSWORD  Attr: 18")
  public Boolean isEnableShipBranchOverride() {
    return enableShipBranchOverride;
  }

  public void setEnableShipBranchOverride(Boolean enableShipBranchOverride) {
    this.enableShipBranchOverride = enableShipBranchOverride;
  }

  public ContactWeb enableShipToEdit(Boolean enableShipToEdit) {
    this.enableShipToEdit = enableShipToEdit;
    return this;
  }

   /**
   * Desc: The ContactWeb EnableShipToEdit flag  File: WC.PASSWORD  Attr: 19
   * @return enableShipToEdit
  **/
  @Schema(description = "Desc: The ContactWeb EnableShipToEdit flag  File: WC.PASSWORD  Attr: 19")
  public Boolean isEnableShipToEdit() {
    return enableShipToEdit;
  }

  public void setEnableShipToEdit(Boolean enableShipToEdit) {
    this.enableShipToEdit = enableShipToEdit;
  }

  public ContactWeb orderCreditLimit(Money orderCreditLimit) {
    this.orderCreditLimit = orderCreditLimit;
    return this;
  }

   /**
   * Get orderCreditLimit
   * @return orderCreditLimit
  **/
  @Valid
  @Schema(description = "")
  public Money getOrderCreditLimit() {
    return orderCreditLimit;
  }

  public void setOrderCreditLimit(Money orderCreditLimit) {
    this.orderCreditLimit = orderCreditLimit;
  }

  public ContactWeb enableJobManagementLogin(Boolean enableJobManagementLogin) {
    this.enableJobManagementLogin = enableJobManagementLogin;
    return this;
  }

   /**
   * Desc: The ContactWeb EnableJobManagementLogin flag  File: WC.PASSWORD  Attr: 21
   * @return enableJobManagementLogin
  **/
  @Schema(description = "Desc: The ContactWeb EnableJobManagementLogin flag  File: WC.PASSWORD  Attr: 21")
  public Boolean isEnableJobManagementLogin() {
    return enableJobManagementLogin;
  }

  public void setEnableJobManagementLogin(Boolean enableJobManagementLogin) {
    this.enableJobManagementLogin = enableJobManagementLogin;
  }

  public ContactWeb webAccessControlMethod(String webAccessControlMethod) {
    this.webAccessControlMethod = webAccessControlMethod;
    return this;
  }

   /**
   * Desc: The ContactWeb WebAccessControlMethod  File: WC.PASSWORD  Attr: 22
   * @return webAccessControlMethod
  **/
  @Schema(description = "Desc: The ContactWeb WebAccessControlMethod  File: WC.PASSWORD  Attr: 22")
  public String getWebAccessControlMethod() {
    return webAccessControlMethod;
  }

  public void setWebAccessControlMethod(String webAccessControlMethod) {
    this.webAccessControlMethod = webAccessControlMethod;
  }

  public ContactWeb accountManagers(List<ContactWebAccountManager> accountManagers) {
    this.accountManagers = accountManagers;
    return this;
  }

  public ContactWeb addAccountManagersItem(ContactWebAccountManager accountManagersItem) {
    if (this.accountManagers == null) {
      this.accountManagers = new ArrayList<>();
    }
    this.accountManagers.add(accountManagersItem);
    return this;
  }

   /**
   * A list of ContactWeb AccountManagers
   * @return accountManagers
  **/
  @Valid
  @Schema(description = "A list of ContactWeb AccountManagers")
  public List<ContactWebAccountManager> getAccountManagers() {
    return accountManagers;
  }

  public void setAccountManagers(List<ContactWebAccountManager> accountManagers) {
    this.accountManagers = accountManagers;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactWeb contactWeb = (ContactWeb) o;
    return Objects.equals(this.updateKey, contactWeb.updateKey) &&
        Objects.equals(this.id, contactWeb.id) &&
        Objects.equals(this.contactId, contactWeb.contactId) &&
        Objects.equals(this.password, contactWeb.password) &&
        Objects.equals(this.hideAccountInquiry, contactWeb.hideAccountInquiry) &&
        Objects.equals(this.superuser, contactWeb.superuser) &&
        Objects.equals(this.trackerViewOnly, contactWeb.trackerViewOnly) &&
        Objects.equals(this.enableShipToCreate, contactWeb.enableShipToCreate) &&
        Objects.equals(this.productDisplayViewThumbnails, contactWeb.productDisplayViewThumbnails) &&
        Objects.equals(this.bidViewOnly, contactWeb.bidViewOnly) &&
        Objects.equals(this.creditDecisionMaker, contactWeb.creditDecisionMaker) &&
        Objects.equals(this.numberOfItemsToDisplay, contactWeb.numberOfItemsToDisplay) &&
        Objects.equals(this.expressCheckoutPaymentType, contactWeb.expressCheckoutPaymentType) &&
        Objects.equals(this.sendEmailOnTrackerUpdate, contactWeb.sendEmailOnTrackerUpdate) &&
        Objects.equals(this.hideAccountLedger, contactWeb.hideAccountLedger) &&
        Objects.equals(this.enableShipBranchOverride, contactWeb.enableShipBranchOverride) &&
        Objects.equals(this.enableShipToEdit, contactWeb.enableShipToEdit) &&
        Objects.equals(this.orderCreditLimit, contactWeb.orderCreditLimit) &&
        Objects.equals(this.enableJobManagementLogin, contactWeb.enableJobManagementLogin) &&
        Objects.equals(this.webAccessControlMethod, contactWeb.webAccessControlMethod) &&
        Objects.equals(this.accountManagers, contactWeb.accountManagers);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateKey, id, contactId, password, hideAccountInquiry, superuser, trackerViewOnly, enableShipToCreate, productDisplayViewThumbnails, bidViewOnly, creditDecisionMaker, numberOfItemsToDisplay, expressCheckoutPaymentType, sendEmailOnTrackerUpdate, hideAccountLedger, enableShipBranchOverride, enableShipToEdit, orderCreditLimit, enableJobManagementLogin, webAccessControlMethod, accountManagers);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactWeb {\n");
    
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    hideAccountInquiry: ").append(toIndentedString(hideAccountInquiry)).append("\n");
    sb.append("    superuser: ").append(toIndentedString(superuser)).append("\n");
    sb.append("    trackerViewOnly: ").append(toIndentedString(trackerViewOnly)).append("\n");
    sb.append("    enableShipToCreate: ").append(toIndentedString(enableShipToCreate)).append("\n");
    sb.append("    productDisplayViewThumbnails: ").append(toIndentedString(productDisplayViewThumbnails)).append("\n");
    sb.append("    bidViewOnly: ").append(toIndentedString(bidViewOnly)).append("\n");
    sb.append("    creditDecisionMaker: ").append(toIndentedString(creditDecisionMaker)).append("\n");
    sb.append("    numberOfItemsToDisplay: ").append(toIndentedString(numberOfItemsToDisplay)).append("\n");
    sb.append("    expressCheckoutPaymentType: ").append(toIndentedString(expressCheckoutPaymentType)).append("\n");
    sb.append("    sendEmailOnTrackerUpdate: ").append(toIndentedString(sendEmailOnTrackerUpdate)).append("\n");
    sb.append("    hideAccountLedger: ").append(toIndentedString(hideAccountLedger)).append("\n");
    sb.append("    enableShipBranchOverride: ").append(toIndentedString(enableShipBranchOverride)).append("\n");
    sb.append("    enableShipToEdit: ").append(toIndentedString(enableShipToEdit)).append("\n");
    sb.append("    orderCreditLimit: ").append(toIndentedString(orderCreditLimit)).append("\n");
    sb.append("    enableJobManagementLogin: ").append(toIndentedString(enableJobManagementLogin)).append("\n");
    sb.append("    webAccessControlMethod: ").append(toIndentedString(webAccessControlMethod)).append("\n");
    sb.append("    accountManagers: ").append(toIndentedString(accountManagers)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
