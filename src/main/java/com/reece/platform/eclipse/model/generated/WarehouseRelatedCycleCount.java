/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.WarehouseRelatedCycleLocations;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Create a new CycleCount instance
 */
@Schema(description = "Create a new CycleCount instance")

public class WarehouseRelatedCycleCount {
  @JsonProperty("warehouseOP")
  private String warehouseOP = null;

  @JsonProperty("branchId")
  private String branchId = null;

  @JsonProperty("pickerId")
  private String pickerId = null;

  @JsonProperty("productId")
  private Integer productId = null;

  @JsonProperty("fullLocation")
  private String fullLocation = null;

  @JsonProperty("relatedLocations")
  private List<WarehouseRelatedCycleLocations> relatedLocations = null;

  @JsonProperty("startPickTime")
  private LocalDateTime startPickTime = null;

  public WarehouseRelatedCycleCount warehouseOP(String warehouseOP) {
    this.warehouseOP = warehouseOP;
    return this;
  }

   /**
   * WarehouseOP
   * @return warehouseOP
  **/
  @Schema(description = "WarehouseOP")
  public String getWarehouseOP() {
    return warehouseOP;
  }

  public void setWarehouseOP(String warehouseOP) {
    this.warehouseOP = warehouseOP;
  }

  public WarehouseRelatedCycleCount branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Branch id
   * @return branchId
  **/
  @NotNull
  @Schema(required = true, description = "Branch id")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public WarehouseRelatedCycleCount pickerId(String pickerId) {
    this.pickerId = pickerId;
    return this;
  }

   /**
   * Picker Id
   * @return pickerId
  **/
  @Schema(description = "Picker Id")
  public String getPickerId() {
    return pickerId;
  }

  public void setPickerId(String pickerId) {
    this.pickerId = pickerId;
  }

  public WarehouseRelatedCycleCount productId(Integer productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Product id
   * @return productId
  **/
  @NotNull
  @Schema(required = true, description = "Product id")
  public Integer getProductId() {
    return productId;
  }

  public void setProductId(Integer productId) {
    this.productId = productId;
  }

  public WarehouseRelatedCycleCount fullLocation(String fullLocation) {
    this.fullLocation = fullLocation;
    return this;
  }

   /**
   * Original Full Location
   * @return fullLocation
  **/
  @NotNull
  @Schema(required = true, description = "Original Full Location")
  public String getFullLocation() {
    return fullLocation;
  }

  public void setFullLocation(String fullLocation) {
    this.fullLocation = fullLocation;
  }

  public WarehouseRelatedCycleCount relatedLocations(List<WarehouseRelatedCycleLocations> relatedLocations) {
    this.relatedLocations = relatedLocations;
    return this;
  }

  public WarehouseRelatedCycleCount addRelatedLocationsItem(WarehouseRelatedCycleLocations relatedLocationsItem) {
    if (this.relatedLocations == null) {
      this.relatedLocations = new ArrayList<>();
    }
    this.relatedLocations.add(relatedLocationsItem);
    return this;
  }

   /**
   * Get relatedLocations
   * @return relatedLocations
  **/
  @Valid
  @Schema(description = "")
  public List<WarehouseRelatedCycleLocations> getRelatedLocations() {
    return relatedLocations;
  }

  public void setRelatedLocations(List<WarehouseRelatedCycleLocations> relatedLocations) {
    this.relatedLocations = relatedLocations;
  }

  public WarehouseRelatedCycleCount startPickTime(LocalDateTime startPickTime) {
    this.startPickTime = startPickTime;
    return this;
  }

   /**
   * Optional. Start Pick Time used for logging
   * @return startPickTime
  **/
  @Valid
  @Schema(description = "Optional. Start Pick Time used for logging")
  public LocalDateTime getStartPickTime() {
    return startPickTime;
  }

  public void setStartPickTime(LocalDateTime startPickTime) {
    this.startPickTime = startPickTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WarehouseRelatedCycleCount warehouseRelatedCycleCount = (WarehouseRelatedCycleCount) o;
    return Objects.equals(this.warehouseOP, warehouseRelatedCycleCount.warehouseOP) &&
        Objects.equals(this.branchId, warehouseRelatedCycleCount.branchId) &&
        Objects.equals(this.pickerId, warehouseRelatedCycleCount.pickerId) &&
        Objects.equals(this.productId, warehouseRelatedCycleCount.productId) &&
        Objects.equals(this.fullLocation, warehouseRelatedCycleCount.fullLocation) &&
        Objects.equals(this.relatedLocations, warehouseRelatedCycleCount.relatedLocations) &&
        Objects.equals(this.startPickTime, warehouseRelatedCycleCount.startPickTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(warehouseOP, branchId, pickerId, productId, fullLocation, relatedLocations, startPickTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WarehouseRelatedCycleCount {\n");
    
    sb.append("    warehouseOP: ").append(toIndentedString(warehouseOP)).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    pickerId: ").append(toIndentedString(pickerId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    fullLocation: ").append(toIndentedString(fullLocation)).append("\n");
    sb.append("    relatedLocations: ").append(toIndentedString(relatedLocations)).append("\n");
    sb.append("    startPickTime: ").append(toIndentedString(startPickTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
