/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.ReplenishmentAction;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing a Replenishment Assign Task.
 */
@Schema(description = "Object representing a Replenishment Assign Task.")

public class ReplenishmentAssignTask {
  @JsonProperty("jobId")
  private String jobId = null;

  @JsonProperty("branchId")
  private String branchId = null;

  @JsonProperty("picker")
  private String picker = null;

  @JsonProperty("products")
  private List<String> products = null;

  @JsonProperty("action")
  private ReplenishmentAction action = null;

  public ReplenishmentAssignTask jobId(String jobId) {
    this.jobId = jobId;
    return this;
  }

   /**
   * Desc: JobId
   * @return jobId
  **/
  @NotNull
  @Schema(required = true, description = "Desc: JobId")
  public String getJobId() {
    return jobId;
  }

  public void setJobId(String jobId) {
    this.jobId = jobId;
  }

  public ReplenishmentAssignTask branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Desc: The Branch Id
   * @return branchId
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The Branch Id")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public ReplenishmentAssignTask picker(String picker) {
    this.picker = picker;
    return this;
  }

   /**
   * Desc: The Picker
   * @return picker
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The Picker")
  public String getPicker() {
    return picker;
  }

  public void setPicker(String picker) {
    this.picker = picker;
  }

  public ReplenishmentAssignTask products(List<String> products) {
    this.products = products;
    return this;
  }

  public ReplenishmentAssignTask addProductsItem(String productsItem) {
    if (this.products == null) {
      this.products = new ArrayList<>();
    }
    this.products.add(productsItem);
    return this;
  }

   /**
   * Desc: The products
   * @return products
  **/
  @Schema(description = "Desc: The products")
  public List<String> getProducts() {
    return products;
  }

  public void setProducts(List<String> products) {
    this.products = products;
  }

  public ReplenishmentAssignTask action(ReplenishmentAction action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Valid
  @Schema(description = "")
  public ReplenishmentAction getAction() {
    return action;
  }

  public void setAction(ReplenishmentAction action) {
    this.action = action;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReplenishmentAssignTask replenishmentAssignTask = (ReplenishmentAssignTask) o;
    return Objects.equals(this.jobId, replenishmentAssignTask.jobId) &&
        Objects.equals(this.branchId, replenishmentAssignTask.branchId) &&
        Objects.equals(this.picker, replenishmentAssignTask.picker) &&
        Objects.equals(this.products, replenishmentAssignTask.products) &&
        Objects.equals(this.action, replenishmentAssignTask.action);
  }

  @Override
  public int hashCode() {
    return Objects.hash(jobId, branchId, picker, products, action);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReplenishmentAssignTask {\n");
    
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    picker: ").append(toIndentedString(picker)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
