/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.Company;
import com.reece.platform.eclipse.model.generated.Role;
import com.reece.platform.eclipse.model.generated.SessionUserType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * User for identity management on the API server.  This will be linked to the ERP user via a session
 */
@Schema(description = "User for identity management on the API server.  This will be linked to the ERP user via a session")

public class SessionUser {
  @JsonProperty("id")
  private UUID id = null;

  @JsonProperty("userName")
  private String userName = null;

  @JsonProperty("type")
  private SessionUserType type = null;

  @JsonProperty("roles")
  private List<Role> roles = null;

  @JsonProperty("companies")
  private List<Company> companies = null;

  public SessionUser id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Id of the user object  Required by ASP.NET Identity
   * @return id
  **/
  @Valid
  @Schema(description = "Id of the user object  Required by ASP.NET Identity")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public SessionUser userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Username for the user  Required by ASP.NET Identity
   * @return userName
  **/
  @Schema(description = "Username for the user  Required by ASP.NET Identity")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public SessionUser type(SessionUserType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Valid
  @Schema(description = "")
  public SessionUserType getType() {
    return type;
  }

  public void setType(SessionUserType type) {
    this.type = type;
  }

  public SessionUser roles(List<Role> roles) {
    this.roles = roles;
    return this;
  }

  public SessionUser addRolesItem(Role rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * Roles associated with the logged in user.
   * @return roles
  **/
  @Valid
  @Schema(description = "Roles associated with the logged in user.")
  public List<Role> getRoles() {
    return roles;
  }

  public void setRoles(List<Role> roles) {
    this.roles = roles;
  }

  public SessionUser companies(List<Company> companies) {
    this.companies = companies;
    return this;
  }

  public SessionUser addCompaniesItem(Company companiesItem) {
    if (this.companies == null) {
      this.companies = new ArrayList<>();
    }
    this.companies.add(companiesItem);
    return this;
  }

   /**
   * Companys for multi-tenant installs associated with the logged in user.  Normally just 1, but can have more
   * @return companies
  **/
  @Valid
  @Schema(description = "Companys for multi-tenant installs associated with the logged in user.  Normally just 1, but can have more")
  public List<Company> getCompanies() {
    return companies;
  }

  public void setCompanies(List<Company> companies) {
    this.companies = companies;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SessionUser sessionUser = (SessionUser) o;
    return Objects.equals(this.id, sessionUser.id) &&
        Objects.equals(this.userName, sessionUser.userName) &&
        Objects.equals(this.type, sessionUser.type) &&
        Objects.equals(this.roles, sessionUser.roles) &&
        Objects.equals(this.companies, sessionUser.companies);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userName, type, roles, companies);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SessionUser {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    companies: ").append(toIndentedString(companies)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
