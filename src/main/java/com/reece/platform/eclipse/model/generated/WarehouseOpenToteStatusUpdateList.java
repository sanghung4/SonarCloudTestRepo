/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.ToteTasksAction;
import com.reece.platform.eclipse.model.generated.WarehouseCloseTaskTotes;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse WarehouseOpenToteStatusUpdateList.
 */
@Schema(description = "Object representing an Eclipse WarehouseOpenToteStatusUpdateList.")

public class WarehouseOpenToteStatusUpdateList {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("branchId")
  private String branchId = null;

  @JsonProperty("userId")
  private String userId = null;

  @JsonProperty("location")
  private String location = null;

  @JsonProperty("action")
  private ToteTasksAction action = null;

  @JsonProperty("totesList")
  private List<String> totesList = null;

  @JsonProperty("totes")
  private List<WarehouseCloseTaskTotes> totes = null;

  @JsonProperty("invalidTotesList")
  private List<String> invalidTotesList = null;

  @JsonProperty("warningMsgList")
  private List<String> warningMsgList = null;

  public WarehouseOpenToteStatusUpdateList id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Desc: Id
   * @return id
  **/
  @NotNull
  @Schema(required = true, description = "Desc: Id")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public WarehouseOpenToteStatusUpdateList branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Branch Id
   * @return branchId
  **/
  @NotNull
  @Schema(required = true, description = "Branch Id")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public WarehouseOpenToteStatusUpdateList userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Eclipse Picker ID
   * @return userId
  **/
  @NotNull
  @Schema(required = true, description = "Eclipse Picker ID")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public WarehouseOpenToteStatusUpdateList location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Staging Location.
   * @return location
  **/
  @NotNull
  @Schema(required = true, description = "Staging Location.")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public WarehouseOpenToteStatusUpdateList action(ToteTasksAction action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Valid
  @Schema(description = "")
  public ToteTasksAction getAction() {
    return action;
  }

  public void setAction(ToteTasksAction action) {
    this.action = action;
  }

  public WarehouseOpenToteStatusUpdateList totesList(List<String> totesList) {
    this.totesList = totesList;
    return this;
  }

  public WarehouseOpenToteStatusUpdateList addTotesListItem(String totesListItem) {
    if (this.totesList == null) {
      this.totesList = new ArrayList<>();
    }
    this.totesList.add(totesListItem);
    return this;
  }

   /**
   * A list of Totes
   * @return totesList
  **/
  @Schema(description = "A list of Totes")
  public List<String> getTotesList() {
    return totesList;
  }

  public void setTotesList(List<String> totesList) {
    this.totesList = totesList;
  }

  public WarehouseOpenToteStatusUpdateList totes(List<WarehouseCloseTaskTotes> totes) {
    this.totes = totes;
    return this;
  }

  public WarehouseOpenToteStatusUpdateList addTotesItem(WarehouseCloseTaskTotes totesItem) {
    if (this.totes == null) {
      this.totes = new ArrayList<>();
    }
    this.totes.add(totesItem);
    return this;
  }

   /**
   * A list of Totes for CLOSE
   * @return totes
  **/
  @Valid
  @Schema(description = "A list of Totes for CLOSE")
  public List<WarehouseCloseTaskTotes> getTotes() {
    return totes;
  }

  public void setTotes(List<WarehouseCloseTaskTotes> totes) {
    this.totes = totes;
  }

  public WarehouseOpenToteStatusUpdateList invalidTotesList(List<String> invalidTotesList) {
    this.invalidTotesList = invalidTotesList;
    return this;
  }

  public WarehouseOpenToteStatusUpdateList addInvalidTotesListItem(String invalidTotesListItem) {
    if (this.invalidTotesList == null) {
      this.invalidTotesList = new ArrayList<>();
    }
    this.invalidTotesList.add(invalidTotesListItem);
    return this;
  }

   /**
   * A list of Failure Totes
   * @return invalidTotesList
  **/
  @Schema(description = "A list of Failure Totes")
  public List<String> getInvalidTotesList() {
    return invalidTotesList;
  }

  public void setInvalidTotesList(List<String> invalidTotesList) {
    this.invalidTotesList = invalidTotesList;
  }

  public WarehouseOpenToteStatusUpdateList warningMsgList(List<String> warningMsgList) {
    this.warningMsgList = warningMsgList;
    return this;
  }

  public WarehouseOpenToteStatusUpdateList addWarningMsgListItem(String warningMsgListItem) {
    if (this.warningMsgList == null) {
      this.warningMsgList = new ArrayList<>();
    }
    this.warningMsgList.add(warningMsgListItem);
    return this;
  }

   /**
   * A list of warning Totes
   * @return warningMsgList
  **/
  @Schema(description = "A list of warning Totes")
  public List<String> getWarningMsgList() {
    return warningMsgList;
  }

  public void setWarningMsgList(List<String> warningMsgList) {
    this.warningMsgList = warningMsgList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WarehouseOpenToteStatusUpdateList warehouseOpenToteStatusUpdateList = (WarehouseOpenToteStatusUpdateList) o;
    return Objects.equals(this.id, warehouseOpenToteStatusUpdateList.id) &&
        Objects.equals(this.branchId, warehouseOpenToteStatusUpdateList.branchId) &&
        Objects.equals(this.userId, warehouseOpenToteStatusUpdateList.userId) &&
        Objects.equals(this.location, warehouseOpenToteStatusUpdateList.location) &&
        Objects.equals(this.action, warehouseOpenToteStatusUpdateList.action) &&
        Objects.equals(this.totesList, warehouseOpenToteStatusUpdateList.totesList) &&
        Objects.equals(this.totes, warehouseOpenToteStatusUpdateList.totes) &&
        Objects.equals(this.invalidTotesList, warehouseOpenToteStatusUpdateList.invalidTotesList) &&
        Objects.equals(this.warningMsgList, warehouseOpenToteStatusUpdateList.warningMsgList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, branchId, userId, location, action, totesList, totes, invalidTotesList, warningMsgList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WarehouseOpenToteStatusUpdateList {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    totesList: ").append(toIndentedString(totesList)).append("\n");
    sb.append("    totes: ").append(toIndentedString(totes)).append("\n");
    sb.append("    invalidTotesList: ").append(toIndentedString(invalidTotesList)).append("\n");
    sb.append("    warningMsgList: ").append(toIndentedString(warningMsgList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
