/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.WarehouseQuantityAdjustmentType;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse WarehouseTask.
 */
@Schema(description = "Object representing an Eclipse WarehouseTask.")

public class WarehouseAdjustmentTask {
  @JsonProperty("warehouseID")
  private String warehouseID = null;

  @JsonProperty("quantity")
  private Integer quantity = null;

  @JsonProperty("uom")
  private String uom = null;

  @JsonProperty("adjustmentType")
  private WarehouseQuantityAdjustmentType adjustmentType = null;

  @JsonProperty("isNewGen")
  private Boolean isNewGen = null;

  @JsonProperty("overrideCreditLimit")
  private Boolean overrideCreditLimit = null;

  @JsonProperty("splitWarehouseID")
  private String splitWarehouseID = null;

  @JsonProperty("splitQuantity")
  private Integer splitQuantity = null;

  @JsonProperty("splitUOM")
  private String splitUOM = null;

  public WarehouseAdjustmentTask warehouseID(String warehouseID) {
    this.warehouseID = warehouseID;
    return this;
  }

   /**
   * Warehouse ID
   * @return warehouseID
  **/
  @NotNull
  @Schema(required = true, description = "Warehouse ID")
  public String getWarehouseID() {
    return warehouseID;
  }

  public void setWarehouseID(String warehouseID) {
    this.warehouseID = warehouseID;
  }

  public WarehouseAdjustmentTask quantity(Integer quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * New Quantity.   If backordering, this is the qty to be Received/Picked.
   * minimum: 0
   * maximum: 2147483647
   * @return quantity
  **/
  @NotNull
 @Min(0) @Max(2147483647)  @Schema(required = true, description = "New Quantity.   If backordering, this is the qty to be Received/Picked.")
  public Integer getQuantity() {
    return quantity;
  }

  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }

  public WarehouseAdjustmentTask uom(String uom) {
    this.uom = uom;
    return this;
  }

   /**
   * UOM per Quantity
   * @return uom
  **/
  @Schema(description = "UOM per Quantity")
  public String getUom() {
    return uom;
  }

  public void setUom(String uom) {
    this.uom = uom;
  }

  public WarehouseAdjustmentTask adjustmentType(WarehouseQuantityAdjustmentType adjustmentType) {
    this.adjustmentType = adjustmentType;
    return this;
  }

   /**
   * Get adjustmentType
   * @return adjustmentType
  **/
  @NotNull
  @Valid
  @Schema(required = true, description = "")
  public WarehouseQuantityAdjustmentType getAdjustmentType() {
    return adjustmentType;
  }

  public void setAdjustmentType(WarehouseQuantityAdjustmentType adjustmentType) {
    this.adjustmentType = adjustmentType;
  }

  public WarehouseAdjustmentTask isNewGen(Boolean isNewGen) {
    this.isNewGen = isNewGen;
    return this;
  }

   /**
   * isNewGen flag.   Enter 1 for &#x27;Yes&#x27; or 0 for &#x27;No&#x27;, to create a new generation on the order for the overage items during RF Receive Verify. See CR \&quot;Create New Generation For RF Recv Verify Overages\&quot;, this field is only necessary when CR is set to prompt and the adjustment type is \&quot;Increase\&quot;
   * @return isNewGen
  **/
  @Schema(description = "isNewGen flag.   Enter 1 for 'Yes' or 0 for 'No', to create a new generation on the order for the overage items during RF Receive Verify. See CR \"Create New Generation For RF Recv Verify Overages\", this field is only necessary when CR is set to prompt and the adjustment type is \"Increase\"")
  public Boolean isIsNewGen() {
    return isNewGen;
  }

  public void setIsNewGen(Boolean isNewGen) {
    this.isNewGen = isNewGen;
  }

  public WarehouseAdjustmentTask overrideCreditLimit(Boolean overrideCreditLimit) {
    this.overrideCreditLimit = overrideCreditLimit;
    return this;
  }

   /**
   * Override Credit Limit. This will allow to proceed in case an increase exceed the credit limit.
   * @return overrideCreditLimit
  **/
  @Schema(description = "Override Credit Limit. This will allow to proceed in case an increase exceed the credit limit.")
  public Boolean isOverrideCreditLimit() {
    return overrideCreditLimit;
  }

  public void setOverrideCreditLimit(Boolean overrideCreditLimit) {
    this.overrideCreditLimit = overrideCreditLimit;
  }

  public WarehouseAdjustmentTask splitWarehouseID(String splitWarehouseID) {
    this.splitWarehouseID = splitWarehouseID;
    return this;
  }

   /**
   * New WarehouseID if quantity got splitted.
   * @return splitWarehouseID
  **/
  @Schema(description = "New WarehouseID if quantity got splitted.")
  public String getSplitWarehouseID() {
    return splitWarehouseID;
  }

  public void setSplitWarehouseID(String splitWarehouseID) {
    this.splitWarehouseID = splitWarehouseID;
  }

  public WarehouseAdjustmentTask splitQuantity(Integer splitQuantity) {
    this.splitQuantity = splitQuantity;
    return this;
  }

   /**
   * If quantity got splitted. This will display Quantity.
   * @return splitQuantity
  **/
  @Schema(description = "If quantity got splitted. This will display Quantity.")
  public Integer getSplitQuantity() {
    return splitQuantity;
  }

  public void setSplitQuantity(Integer splitQuantity) {
    this.splitQuantity = splitQuantity;
  }

  public WarehouseAdjustmentTask splitUOM(String splitUOM) {
    this.splitUOM = splitUOM;
    return this;
  }

   /**
   * If quantity got splitted. This will display UOM.
   * @return splitUOM
  **/
  @Schema(description = "If quantity got splitted. This will display UOM.")
  public String getSplitUOM() {
    return splitUOM;
  }

  public void setSplitUOM(String splitUOM) {
    this.splitUOM = splitUOM;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WarehouseAdjustmentTask warehouseAdjustmentTask = (WarehouseAdjustmentTask) o;
    return Objects.equals(this.warehouseID, warehouseAdjustmentTask.warehouseID) &&
        Objects.equals(this.quantity, warehouseAdjustmentTask.quantity) &&
        Objects.equals(this.uom, warehouseAdjustmentTask.uom) &&
        Objects.equals(this.adjustmentType, warehouseAdjustmentTask.adjustmentType) &&
        Objects.equals(this.isNewGen, warehouseAdjustmentTask.isNewGen) &&
        Objects.equals(this.overrideCreditLimit, warehouseAdjustmentTask.overrideCreditLimit) &&
        Objects.equals(this.splitWarehouseID, warehouseAdjustmentTask.splitWarehouseID) &&
        Objects.equals(this.splitQuantity, warehouseAdjustmentTask.splitQuantity) &&
        Objects.equals(this.splitUOM, warehouseAdjustmentTask.splitUOM);
  }

  @Override
  public int hashCode() {
    return Objects.hash(warehouseID, quantity, uom, adjustmentType, isNewGen, overrideCreditLimit, splitWarehouseID, splitQuantity, splitUOM);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WarehouseAdjustmentTask {\n");
    
    sb.append("    warehouseID: ").append(toIndentedString(warehouseID)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    uom: ").append(toIndentedString(uom)).append("\n");
    sb.append("    adjustmentType: ").append(toIndentedString(adjustmentType)).append("\n");
    sb.append("    isNewGen: ").append(toIndentedString(isNewGen)).append("\n");
    sb.append("    overrideCreditLimit: ").append(toIndentedString(overrideCreditLimit)).append("\n");
    sb.append("    splitWarehouseID: ").append(toIndentedString(splitWarehouseID)).append("\n");
    sb.append("    splitQuantity: ").append(toIndentedString(splitQuantity)).append("\n");
    sb.append("    splitUOM: ").append(toIndentedString(splitUOM)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
