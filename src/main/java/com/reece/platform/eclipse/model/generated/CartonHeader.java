/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing a Carton Header
 */
@Schema(description = "Object representing a Carton Header")

public class CartonHeader {
  @JsonProperty("cartonId")
  private String cartonId = null;

  @JsonProperty("invoiceNumber")
  private String invoiceNumber = null;

  @JsonProperty("cartonStatusType")
  private String cartonStatusType = null;

  @JsonProperty("cartonNumber")
  private String cartonNumber = null;

  @JsonProperty("typeOfPackage")
  private String typeOfPackage = null;

  @JsonProperty("trackingNumber")
  private String trackingNumber = null;

  @JsonProperty("packerId")
  private String packerId = null;

  @JsonProperty("cartonStagingLocation")
  private String cartonStagingLocation = null;

  @JsonProperty("branchId")
  private String branchId = null;

  @JsonProperty("cartonWeight")
  private String cartonWeight = null;

  @JsonProperty("manifestId")
  private String manifestId = null;

  @JsonProperty("orderId")
  private String orderId = null;

  @JsonProperty("defaultStagingLocation")
  private String defaultStagingLocation = null;

  @JsonProperty("masterId")
  private String masterId = null;

  @JsonProperty("shipVia")
  private String shipVia = null;

  @JsonProperty("updateKey")
  private String updateKey = null;

  public CartonHeader cartonId(String cartonId) {
    this.cartonId = cartonId;
    return this;
  }

   /**
   * Carton ID
   * @return cartonId
  **/
  @NotNull
  @Schema(required = true, description = "Carton ID")
  public String getCartonId() {
    return cartonId;
  }

  public void setCartonId(String cartonId) {
    this.cartonId = cartonId;
  }

  public CartonHeader invoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
    return this;
  }

   /**
   * Invoice Number
   * @return invoiceNumber
  **/
  @NotNull
  @Schema(required = true, description = "Invoice Number")
  public String getInvoiceNumber() {
    return invoiceNumber;
  }

  public void setInvoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }

  public CartonHeader cartonStatusType(String cartonStatusType) {
    this.cartonStatusType = cartonStatusType;
    return this;
  }

   /**
   * Carton Status Type
   * @return cartonStatusType
  **/
  @Schema(description = "Carton Status Type")
  public String getCartonStatusType() {
    return cartonStatusType;
  }

  public void setCartonStatusType(String cartonStatusType) {
    this.cartonStatusType = cartonStatusType;
  }

  public CartonHeader cartonNumber(String cartonNumber) {
    this.cartonNumber = cartonNumber;
    return this;
  }

   /**
   * Carton Number
   * @return cartonNumber
  **/
  @Schema(description = "Carton Number")
  public String getCartonNumber() {
    return cartonNumber;
  }

  public void setCartonNumber(String cartonNumber) {
    this.cartonNumber = cartonNumber;
  }

  public CartonHeader typeOfPackage(String typeOfPackage) {
    this.typeOfPackage = typeOfPackage;
    return this;
  }

   /**
   * Type of package
   * @return typeOfPackage
  **/
  @Schema(description = "Type of package")
  public String getTypeOfPackage() {
    return typeOfPackage;
  }

  public void setTypeOfPackage(String typeOfPackage) {
    this.typeOfPackage = typeOfPackage;
  }

  public CartonHeader trackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
    return this;
  }

   /**
   * Tracking Number
   * @return trackingNumber
  **/
  @Schema(description = "Tracking Number")
  public String getTrackingNumber() {
    return trackingNumber;
  }

  public void setTrackingNumber(String trackingNumber) {
    this.trackingNumber = trackingNumber;
  }

  public CartonHeader packerId(String packerId) {
    this.packerId = packerId;
    return this;
  }

   /**
   * Packer ID
   * @return packerId
  **/
  @Schema(description = "Packer ID")
  public String getPackerId() {
    return packerId;
  }

  public void setPackerId(String packerId) {
    this.packerId = packerId;
  }

  public CartonHeader cartonStagingLocation(String cartonStagingLocation) {
    this.cartonStagingLocation = cartonStagingLocation;
    return this;
  }

   /**
   * Carton Staging Location
   * @return cartonStagingLocation
  **/
  @Schema(description = "Carton Staging Location")
  public String getCartonStagingLocation() {
    return cartonStagingLocation;
  }

  public void setCartonStagingLocation(String cartonStagingLocation) {
    this.cartonStagingLocation = cartonStagingLocation;
  }

  public CartonHeader branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Branch ID
   * @return branchId
  **/
  @Schema(description = "Branch ID")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public CartonHeader cartonWeight(String cartonWeight) {
    this.cartonWeight = cartonWeight;
    return this;
  }

   /**
   * Carton Weight
   * @return cartonWeight
  **/
  @Schema(description = "Carton Weight")
  public String getCartonWeight() {
    return cartonWeight;
  }

  public void setCartonWeight(String cartonWeight) {
    this.cartonWeight = cartonWeight;
  }

  public CartonHeader manifestId(String manifestId) {
    this.manifestId = manifestId;
    return this;
  }

   /**
   * Manifest ID
   * @return manifestId
  **/
  @Schema(description = "Manifest ID")
  public String getManifestId() {
    return manifestId;
  }

  public void setManifestId(String manifestId) {
    this.manifestId = manifestId;
  }

  public CartonHeader orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * Order ID
   * @return orderId
  **/
  @Schema(description = "Order ID")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public CartonHeader defaultStagingLocation(String defaultStagingLocation) {
    this.defaultStagingLocation = defaultStagingLocation;
    return this;
  }

   /**
   * Default Staging Location
   * @return defaultStagingLocation
  **/
  @Schema(description = "Default Staging Location")
  public String getDefaultStagingLocation() {
    return defaultStagingLocation;
  }

  public void setDefaultStagingLocation(String defaultStagingLocation) {
    this.defaultStagingLocation = defaultStagingLocation;
  }

  public CartonHeader masterId(String masterId) {
    this.masterId = masterId;
    return this;
  }

   /**
   * Master ID
   * @return masterId
  **/
  @Schema(description = "Master ID")
  public String getMasterId() {
    return masterId;
  }

  public void setMasterId(String masterId) {
    this.masterId = masterId;
  }

  public CartonHeader shipVia(String shipVia) {
    this.shipVia = shipVia;
    return this;
  }

   /**
   * ShipVia
   * @return shipVia
  **/
  @Schema(description = "ShipVia")
  public String getShipVia() {
    return shipVia;
  }

  public void setShipVia(String shipVia) {
    this.shipVia = shipVia;
  }

  public CartonHeader updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update Key
   * @return updateKey
  **/
  @Schema(description = "Update Key")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CartonHeader cartonHeader = (CartonHeader) o;
    return Objects.equals(this.cartonId, cartonHeader.cartonId) &&
        Objects.equals(this.invoiceNumber, cartonHeader.invoiceNumber) &&
        Objects.equals(this.cartonStatusType, cartonHeader.cartonStatusType) &&
        Objects.equals(this.cartonNumber, cartonHeader.cartonNumber) &&
        Objects.equals(this.typeOfPackage, cartonHeader.typeOfPackage) &&
        Objects.equals(this.trackingNumber, cartonHeader.trackingNumber) &&
        Objects.equals(this.packerId, cartonHeader.packerId) &&
        Objects.equals(this.cartonStagingLocation, cartonHeader.cartonStagingLocation) &&
        Objects.equals(this.branchId, cartonHeader.branchId) &&
        Objects.equals(this.cartonWeight, cartonHeader.cartonWeight) &&
        Objects.equals(this.manifestId, cartonHeader.manifestId) &&
        Objects.equals(this.orderId, cartonHeader.orderId) &&
        Objects.equals(this.defaultStagingLocation, cartonHeader.defaultStagingLocation) &&
        Objects.equals(this.masterId, cartonHeader.masterId) &&
        Objects.equals(this.shipVia, cartonHeader.shipVia) &&
        Objects.equals(this.updateKey, cartonHeader.updateKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cartonId, invoiceNumber, cartonStatusType, cartonNumber, typeOfPackage, trackingNumber, packerId, cartonStagingLocation, branchId, cartonWeight, manifestId, orderId, defaultStagingLocation, masterId, shipVia, updateKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CartonHeader {\n");
    
    sb.append("    cartonId: ").append(toIndentedString(cartonId)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    cartonStatusType: ").append(toIndentedString(cartonStatusType)).append("\n");
    sb.append("    cartonNumber: ").append(toIndentedString(cartonNumber)).append("\n");
    sb.append("    typeOfPackage: ").append(toIndentedString(typeOfPackage)).append("\n");
    sb.append("    trackingNumber: ").append(toIndentedString(trackingNumber)).append("\n");
    sb.append("    packerId: ").append(toIndentedString(packerId)).append("\n");
    sb.append("    cartonStagingLocation: ").append(toIndentedString(cartonStagingLocation)).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    cartonWeight: ").append(toIndentedString(cartonWeight)).append("\n");
    sb.append("    manifestId: ").append(toIndentedString(manifestId)).append("\n");
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    defaultStagingLocation: ").append(toIndentedString(defaultStagingLocation)).append("\n");
    sb.append("    masterId: ").append(toIndentedString(masterId)).append("\n");
    sb.append("    shipVia: ").append(toIndentedString(shipVia)).append("\n");
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
