/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.Money;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse PayableGlPosting.
 */
@Schema(description = "Object representing an Eclipse PayableGlPosting.")

public class PayablePurchaseOrder {
  @JsonProperty("updateKey")
  private String updateKey = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("poBranch")
  private String poBranch = null;

  @JsonProperty("poNumber")
  private String poNumber = null;

  @JsonProperty("receivedDate")
  private LocalDateTime receivedDate = null;

  @JsonProperty("vendorFreightAllowed")
  private Boolean vendorFreightAllowed = null;

  @JsonProperty("freightAmount")
  private Money freightAmount = null;

  @JsonProperty("displayPOAmount")
  private Money displayPOAmount = null;

  @JsonProperty("terms")
  private String terms = null;

  @JsonProperty("selectedFlag")
  private Boolean selectedFlag = null;

  @JsonProperty("currencyRate")
  private Double currencyRate = null;

  @JsonProperty("poTotal")
  private Money poTotal = null;

  @JsonProperty("selectedLastUpdate")
  private Boolean selectedLastUpdate = null;

  @JsonProperty("lotBillFlag")
  private Boolean lotBillFlag = null;

  @JsonProperty("poCurrencyRate")
  private Double poCurrencyRate = null;

  @JsonProperty("age")
  private Integer age = null;

  @JsonProperty("freightTerms")
  private String freightTerms = null;

  @JsonProperty("purchaseOrderOIDS")
  private String purchaseOrderOIDS = null;

  @JsonProperty("purchaseOrderID")
  private String purchaseOrderID = null;

  @JsonProperty("jobManagementNumber")
  private String jobManagementNumber = null;

  @JsonProperty("directInvoiced")
  private Boolean directInvoiced = null;

  @JsonProperty("rebatePO")
  private Boolean rebatePO = null;

  @JsonProperty("spjFlag")
  private Boolean spjFlag = null;

  @JsonProperty("dtsFlag")
  private Boolean dtsFlag = null;

  @JsonProperty("freightDistributionOverride")
  private String freightDistributionOverride = null;

  public PayablePurchaseOrder updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update key to handle concurrency during updates within Eclipse
   * @return updateKey
  **/
  @Schema(description = "Update key to handle concurrency during updates within Eclipse")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }

  public PayablePurchaseOrder id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Eclipse ID for the record
   * @return id
  **/
  @Schema(description = "Eclipse ID for the record")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PayablePurchaseOrder poBranch(String poBranch) {
    this.poBranch = poBranch;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder POBranch  PO.DATA 1,1
   * @return poBranch
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder POBranch  PO.DATA 1,1")
  public String getPoBranch() {
    return poBranch;
  }

  public void setPoBranch(String poBranch) {
    this.poBranch = poBranch;
  }

  public PayablePurchaseOrder poNumber(String poNumber) {
    this.poNumber = poNumber;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder P/O # or BOL or   P/O.HLD (for Hold Lot Items) or  P/O.REL (for Released Lot Items)   PO.DATA 1,2
   * @return poNumber
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder P/O # or BOL or   P/O.HLD (for Hold Lot Items) or  P/O.REL (for Released Lot Items)   PO.DATA 1,2")
  public String getPoNumber() {
    return poNumber;
  }

  public void setPoNumber(String poNumber) {
    this.poNumber = poNumber;
  }

  public PayablePurchaseOrder receivedDate(LocalDateTime receivedDate) {
    this.receivedDate = receivedDate;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder Received Date  PO.DATA 1,3
   * @return receivedDate
  **/
  @Valid
  @Schema(description = "Desc: The PayablePurchaseOrder Received Date  PO.DATA 1,3")
  public LocalDateTime getReceivedDate() {
    return receivedDate;
  }

  public void setReceivedDate(LocalDateTime receivedDate) {
    this.receivedDate = receivedDate;
  }

  public PayablePurchaseOrder vendorFreightAllowed(Boolean vendorFreightAllowed) {
    this.vendorFreightAllowed = vendorFreightAllowed;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder Vendor Freight Allowed  PO.DATA 1,4
   * @return vendorFreightAllowed
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder Vendor Freight Allowed  PO.DATA 1,4")
  public Boolean isVendorFreightAllowed() {
    return vendorFreightAllowed;
  }

  public void setVendorFreightAllowed(Boolean vendorFreightAllowed) {
    this.vendorFreightAllowed = vendorFreightAllowed;
  }

  public PayablePurchaseOrder freightAmount(Money freightAmount) {
    this.freightAmount = freightAmount;
    return this;
  }

   /**
   * Get freightAmount
   * @return freightAmount
  **/
  @Valid
  @Schema(description = "")
  public Money getFreightAmount() {
    return freightAmount;
  }

  public void setFreightAmount(Money freightAmount) {
    this.freightAmount = freightAmount;
  }

  public PayablePurchaseOrder displayPOAmount(Money displayPOAmount) {
    this.displayPOAmount = displayPOAmount;
    return this;
  }

   /**
   * Get displayPOAmount
   * @return displayPOAmount
  **/
  @Valid
  @Schema(description = "")
  public Money getDisplayPOAmount() {
    return displayPOAmount;
  }

  public void setDisplayPOAmount(Money displayPOAmount) {
    this.displayPOAmount = displayPOAmount;
  }

  public PayablePurchaseOrder terms(String terms) {
    this.terms = terms;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder Terms  PO.DATA 1,7
   * @return terms
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder Terms  PO.DATA 1,7")
  public String getTerms() {
    return terms;
  }

  public void setTerms(String terms) {
    this.terms = terms;
  }

  public PayablePurchaseOrder selectedFlag(Boolean selectedFlag) {
    this.selectedFlag = selectedFlag;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder selectedFlag  PO.DATA 1,8
   * @return selectedFlag
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder selectedFlag  PO.DATA 1,8")
  public Boolean isSelectedFlag() {
    return selectedFlag;
  }

  public void setSelectedFlag(Boolean selectedFlag) {
    this.selectedFlag = selectedFlag;
  }

  public PayablePurchaseOrder currencyRate(Double currencyRate) {
    this.currencyRate = currencyRate;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder Currency rate  PO.DATA 1,9
   * @return currencyRate
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder Currency rate  PO.DATA 1,9")
  public Double getCurrencyRate() {
    return currencyRate;
  }

  public void setCurrencyRate(Double currencyRate) {
    this.currencyRate = currencyRate;
  }

  public PayablePurchaseOrder poTotal(Money poTotal) {
    this.poTotal = poTotal;
    return this;
  }

   /**
   * Get poTotal
   * @return poTotal
  **/
  @Valid
  @Schema(description = "")
  public Money getPoTotal() {
    return poTotal;
  }

  public void setPoTotal(Money poTotal) {
    this.poTotal = poTotal;
  }

  public PayablePurchaseOrder selectedLastUpdate(Boolean selectedLastUpdate) {
    this.selectedLastUpdate = selectedLastUpdate;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder Selected Since Last Update Flag  PO.DATA 1,11
   * @return selectedLastUpdate
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder Selected Since Last Update Flag  PO.DATA 1,11")
  public Boolean isSelectedLastUpdate() {
    return selectedLastUpdate;
  }

  public void setSelectedLastUpdate(Boolean selectedLastUpdate) {
    this.selectedLastUpdate = selectedLastUpdate;
  }

  public PayablePurchaseOrder lotBillFlag(Boolean lotBillFlag) {
    this.lotBillFlag = lotBillFlag;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder LotBillFlag  PO.DATA 1,12
   * @return lotBillFlag
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder LotBillFlag  PO.DATA 1,12")
  public Boolean isLotBillFlag() {
    return lotBillFlag;
  }

  public void setLotBillFlag(Boolean lotBillFlag) {
    this.lotBillFlag = lotBillFlag;
  }

  public PayablePurchaseOrder poCurrencyRate(Double poCurrencyRate) {
    this.poCurrencyRate = poCurrencyRate;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder PO Currency Rate  PO.DATA 1,13
   * @return poCurrencyRate
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder PO Currency Rate  PO.DATA 1,13")
  public Double getPoCurrencyRate() {
    return poCurrencyRate;
  }

  public void setPoCurrencyRate(Double poCurrencyRate) {
    this.poCurrencyRate = poCurrencyRate;
  }

  public PayablePurchaseOrder age(Integer age) {
    this.age = age;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder Age  PO.DATA 1,14
   * @return age
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder Age  PO.DATA 1,14")
  public Integer getAge() {
    return age;
  }

  public void setAge(Integer age) {
    this.age = age;
  }

  public PayablePurchaseOrder freightTerms(String freightTerms) {
    this.freightTerms = freightTerms;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder Freight Terms for PO  PO.DATA 1,15
   * @return freightTerms
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder Freight Terms for PO  PO.DATA 1,15")
  public String getFreightTerms() {
    return freightTerms;
  }

  public void setFreightTerms(String freightTerms) {
    this.freightTerms = freightTerms;
  }

  public PayablePurchaseOrder purchaseOrderOIDS(String purchaseOrderOIDS) {
    this.purchaseOrderOIDS = purchaseOrderOIDS;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder Order ID from PO Header  PO.DATA 1,17
   * @return purchaseOrderOIDS
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder Order ID from PO Header  PO.DATA 1,17")
  public String getPurchaseOrderOIDS() {
    return purchaseOrderOIDS;
  }

  public void setPurchaseOrderOIDS(String purchaseOrderOIDS) {
    this.purchaseOrderOIDS = purchaseOrderOIDS;
  }

  public PayablePurchaseOrder purchaseOrderID(String purchaseOrderID) {
    this.purchaseOrderID = purchaseOrderID;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder PO# if in freight mode to display in view 3  PO.DATA 1,18
   * @return purchaseOrderID
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder PO# if in freight mode to display in view 3  PO.DATA 1,18")
  public String getPurchaseOrderID() {
    return purchaseOrderID;
  }

  public void setPurchaseOrderID(String purchaseOrderID) {
    this.purchaseOrderID = purchaseOrderID;
  }

  public PayablePurchaseOrder jobManagementNumber(String jobManagementNumber) {
    this.jobManagementNumber = jobManagementNumber;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder Job Management Number  PO.DATA 1,23
   * @return jobManagementNumber
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder Job Management Number  PO.DATA 1,23")
  public String getJobManagementNumber() {
    return jobManagementNumber;
  }

  public void setJobManagementNumber(String jobManagementNumber) {
    this.jobManagementNumber = jobManagementNumber;
  }

  public PayablePurchaseOrder directInvoiced(Boolean directInvoiced) {
    this.directInvoiced = directInvoiced;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder Sales Order side has been invoiced  PO.DATA 1,24
   * @return directInvoiced
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder Sales Order side has been invoiced  PO.DATA 1,24")
  public Boolean isDirectInvoiced() {
    return directInvoiced;
  }

  public void setDirectInvoiced(Boolean directInvoiced) {
    this.directInvoiced = directInvoiced;
  }

  public PayablePurchaseOrder rebatePO(Boolean rebatePO) {
    this.rebatePO = rebatePO;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder Rebate PO Flag  PO.DATA 1,25
   * @return rebatePO
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder Rebate PO Flag  PO.DATA 1,25")
  public Boolean isRebatePO() {
    return rebatePO;
  }

  public void setRebatePO(Boolean rebatePO) {
    this.rebatePO = rebatePO;
  }

  public PayablePurchaseOrder spjFlag(Boolean spjFlag) {
    this.spjFlag = spjFlag;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder Small Project Job PO flag  PO.DATA 1,26
   * @return spjFlag
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder Small Project Job PO flag  PO.DATA 1,26")
  public Boolean isSpjFlag() {
    return spjFlag;
  }

  public void setSpjFlag(Boolean spjFlag) {
    this.spjFlag = spjFlag;
  }

  public PayablePurchaseOrder dtsFlag(Boolean dtsFlag) {
    this.dtsFlag = dtsFlag;
    return this;
  }

   /**
   * Desc: The PayablePurchaseOrder DTS PO Flag  PO.DATA 1,27
   * @return dtsFlag
  **/
  @Schema(description = "Desc: The PayablePurchaseOrder DTS PO Flag  PO.DATA 1,27")
  public Boolean isDtsFlag() {
    return dtsFlag;
  }

  public void setDtsFlag(Boolean dtsFlag) {
    this.dtsFlag = dtsFlag;
  }

  public PayablePurchaseOrder freightDistributionOverride(String freightDistributionOverride) {
    this.freightDistributionOverride = freightDistributionOverride;
    return this;
  }

   /**
   * Desc: Freight Method Distribution Override new value.  PO.DATA 1,28
   * @return freightDistributionOverride
  **/
  @Schema(description = "Desc: Freight Method Distribution Override new value.  PO.DATA 1,28")
  public String getFreightDistributionOverride() {
    return freightDistributionOverride;
  }

  public void setFreightDistributionOverride(String freightDistributionOverride) {
    this.freightDistributionOverride = freightDistributionOverride;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayablePurchaseOrder payablePurchaseOrder = (PayablePurchaseOrder) o;
    return Objects.equals(this.updateKey, payablePurchaseOrder.updateKey) &&
        Objects.equals(this.id, payablePurchaseOrder.id) &&
        Objects.equals(this.poBranch, payablePurchaseOrder.poBranch) &&
        Objects.equals(this.poNumber, payablePurchaseOrder.poNumber) &&
        Objects.equals(this.receivedDate, payablePurchaseOrder.receivedDate) &&
        Objects.equals(this.vendorFreightAllowed, payablePurchaseOrder.vendorFreightAllowed) &&
        Objects.equals(this.freightAmount, payablePurchaseOrder.freightAmount) &&
        Objects.equals(this.displayPOAmount, payablePurchaseOrder.displayPOAmount) &&
        Objects.equals(this.terms, payablePurchaseOrder.terms) &&
        Objects.equals(this.selectedFlag, payablePurchaseOrder.selectedFlag) &&
        Objects.equals(this.currencyRate, payablePurchaseOrder.currencyRate) &&
        Objects.equals(this.poTotal, payablePurchaseOrder.poTotal) &&
        Objects.equals(this.selectedLastUpdate, payablePurchaseOrder.selectedLastUpdate) &&
        Objects.equals(this.lotBillFlag, payablePurchaseOrder.lotBillFlag) &&
        Objects.equals(this.poCurrencyRate, payablePurchaseOrder.poCurrencyRate) &&
        Objects.equals(this.age, payablePurchaseOrder.age) &&
        Objects.equals(this.freightTerms, payablePurchaseOrder.freightTerms) &&
        Objects.equals(this.purchaseOrderOIDS, payablePurchaseOrder.purchaseOrderOIDS) &&
        Objects.equals(this.purchaseOrderID, payablePurchaseOrder.purchaseOrderID) &&
        Objects.equals(this.jobManagementNumber, payablePurchaseOrder.jobManagementNumber) &&
        Objects.equals(this.directInvoiced, payablePurchaseOrder.directInvoiced) &&
        Objects.equals(this.rebatePO, payablePurchaseOrder.rebatePO) &&
        Objects.equals(this.spjFlag, payablePurchaseOrder.spjFlag) &&
        Objects.equals(this.dtsFlag, payablePurchaseOrder.dtsFlag) &&
        Objects.equals(this.freightDistributionOverride, payablePurchaseOrder.freightDistributionOverride);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateKey, id, poBranch, poNumber, receivedDate, vendorFreightAllowed, freightAmount, displayPOAmount, terms, selectedFlag, currencyRate, poTotal, selectedLastUpdate, lotBillFlag, poCurrencyRate, age, freightTerms, purchaseOrderOIDS, purchaseOrderID, jobManagementNumber, directInvoiced, rebatePO, spjFlag, dtsFlag, freightDistributionOverride);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayablePurchaseOrder {\n");
    
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    poBranch: ").append(toIndentedString(poBranch)).append("\n");
    sb.append("    poNumber: ").append(toIndentedString(poNumber)).append("\n");
    sb.append("    receivedDate: ").append(toIndentedString(receivedDate)).append("\n");
    sb.append("    vendorFreightAllowed: ").append(toIndentedString(vendorFreightAllowed)).append("\n");
    sb.append("    freightAmount: ").append(toIndentedString(freightAmount)).append("\n");
    sb.append("    displayPOAmount: ").append(toIndentedString(displayPOAmount)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    selectedFlag: ").append(toIndentedString(selectedFlag)).append("\n");
    sb.append("    currencyRate: ").append(toIndentedString(currencyRate)).append("\n");
    sb.append("    poTotal: ").append(toIndentedString(poTotal)).append("\n");
    sb.append("    selectedLastUpdate: ").append(toIndentedString(selectedLastUpdate)).append("\n");
    sb.append("    lotBillFlag: ").append(toIndentedString(lotBillFlag)).append("\n");
    sb.append("    poCurrencyRate: ").append(toIndentedString(poCurrencyRate)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    freightTerms: ").append(toIndentedString(freightTerms)).append("\n");
    sb.append("    purchaseOrderOIDS: ").append(toIndentedString(purchaseOrderOIDS)).append("\n");
    sb.append("    purchaseOrderID: ").append(toIndentedString(purchaseOrderID)).append("\n");
    sb.append("    jobManagementNumber: ").append(toIndentedString(jobManagementNumber)).append("\n");
    sb.append("    directInvoiced: ").append(toIndentedString(directInvoiced)).append("\n");
    sb.append("    rebatePO: ").append(toIndentedString(rebatePO)).append("\n");
    sb.append("    spjFlag: ").append(toIndentedString(spjFlag)).append("\n");
    sb.append("    dtsFlag: ").append(toIndentedString(dtsFlag)).append("\n");
    sb.append("    freightDistributionOverride: ").append(toIndentedString(freightDistributionOverride)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
