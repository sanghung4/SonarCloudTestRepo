/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse DocumentImagingStorageLocationUnixSecurity.
 */
@Schema(description = "Object representing an Eclipse DocumentImagingStorageLocationUnixSecurity.")

public class DocumentImagingStorageLocationUnixSecurity {
  @JsonProperty("networkPath")
  private String networkPath = null;

  @JsonProperty("userID")
  private String userID = null;

  @JsonProperty("password")
  private String password = null;

  @JsonProperty("domain")
  private String domain = null;

  public DocumentImagingStorageLocationUnixSecurity networkPath(String networkPath) {
    this.networkPath = networkPath;
    return this;
  }

   /**
   * Desc: The DocumentImagingStorageLocationUnixSecurity NetworkPath  File: CONTROL  Attr: 1
   * @return networkPath
  **/
  @Schema(description = "Desc: The DocumentImagingStorageLocationUnixSecurity NetworkPath  File: CONTROL  Attr: 1")
  public String getNetworkPath() {
    return networkPath;
  }

  public void setNetworkPath(String networkPath) {
    this.networkPath = networkPath;
  }

  public DocumentImagingStorageLocationUnixSecurity userID(String userID) {
    this.userID = userID;
    return this;
  }

   /**
   * Desc: The DocumentImagingStorageLocationUnixSecurity UserID  File: CONTROL  Attr: 2
   * @return userID
  **/
 @Pattern(regexp="^(?=.*\\S).+$")  @Schema(description = "Desc: The DocumentImagingStorageLocationUnixSecurity UserID  File: CONTROL  Attr: 2")
  public String getUserID() {
    return userID;
  }

  public void setUserID(String userID) {
    this.userID = userID;
  }

  public DocumentImagingStorageLocationUnixSecurity password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Desc: The DocumentImagingStorageLocationUnixSecurity Password  File: CONTROL  Attr: 3
   * @return password
  **/
 @Pattern(regexp="^(?=.*\\S).+$")  @Schema(description = "Desc: The DocumentImagingStorageLocationUnixSecurity Password  File: CONTROL  Attr: 3")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }

  public DocumentImagingStorageLocationUnixSecurity domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * Desc: The DocumentImagingStorageLocationUnixSecurity Domain  File: CONTROL  Attr: 4
   * @return domain
  **/
  @Schema(description = "Desc: The DocumentImagingStorageLocationUnixSecurity Domain  File: CONTROL  Attr: 4")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentImagingStorageLocationUnixSecurity documentImagingStorageLocationUnixSecurity = (DocumentImagingStorageLocationUnixSecurity) o;
    return Objects.equals(this.networkPath, documentImagingStorageLocationUnixSecurity.networkPath) &&
        Objects.equals(this.userID, documentImagingStorageLocationUnixSecurity.userID) &&
        Objects.equals(this.password, documentImagingStorageLocationUnixSecurity.password) &&
        Objects.equals(this.domain, documentImagingStorageLocationUnixSecurity.domain);
  }

  @Override
  public int hashCode() {
    return Objects.hash(networkPath, userID, password, domain);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentImagingStorageLocationUnixSecurity {\n");
    
    sb.append("    networkPath: ").append(toIndentedString(networkPath)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
