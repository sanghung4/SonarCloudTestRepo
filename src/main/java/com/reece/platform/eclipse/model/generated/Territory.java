/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse Territory.
 */
@Schema(description = "Object representing an Eclipse Territory.")

public class Territory {
  @JsonProperty("updateKey")
  private String updateKey = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("entityPriority")
  private String entityPriority = null;

  @JsonProperty("productPriority")
  private String productPriority = null;

  @JsonProperty("branchList")
  private List<String> branchList = null;

  public Territory updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update key to handle concurrency during updates within Eclipse
   * @return updateKey
  **/
  @Schema(description = "Update key to handle concurrency during updates within Eclipse")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }

  public Territory id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Eclipse ID for the record
   * @return id
  **/
  @Schema(description = "Eclipse ID for the record")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Territory description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Desc: The Territory Description  File: TERRITORY  Attr: 1
   * @return description
  **/
  @NotNull
 @Size(min=1,max=25)  @Schema(required = true, description = "Desc: The Territory Description  File: TERRITORY  Attr: 1")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Territory entityPriority(String entityPriority) {
    this.entityPriority = entityPriority;
    return this;
  }

   /**
   * Desc: The Territory EntityPriority  File: TERRITORY  Attr: 13
   * @return entityPriority
  **/
  @Schema(description = "Desc: The Territory EntityPriority  File: TERRITORY  Attr: 13")
  public String getEntityPriority() {
    return entityPriority;
  }

  public void setEntityPriority(String entityPriority) {
    this.entityPriority = entityPriority;
  }

  public Territory productPriority(String productPriority) {
    this.productPriority = productPriority;
    return this;
  }

   /**
   * Desc: The Territory ProductPriority  File: TERRITORY  Attr: 14
   * @return productPriority
  **/
  @Schema(description = "Desc: The Territory ProductPriority  File: TERRITORY  Attr: 14")
  public String getProductPriority() {
    return productPriority;
  }

  public void setProductPriority(String productPriority) {
    this.productPriority = productPriority;
  }

  public Territory branchList(List<String> branchList) {
    this.branchList = branchList;
    return this;
  }

  public Territory addBranchListItem(String branchListItem) {
    if (this.branchList == null) {
      this.branchList = new ArrayList<>();
    }
    this.branchList.add(branchListItem);
    return this;
  }

   /**
   * A list of Territory BranchList
   * @return branchList
  **/
  @Schema(description = "A list of Territory BranchList")
  public List<String> getBranchList() {
    return branchList;
  }

  public void setBranchList(List<String> branchList) {
    this.branchList = branchList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Territory territory = (Territory) o;
    return Objects.equals(this.updateKey, territory.updateKey) &&
        Objects.equals(this.id, territory.id) &&
        Objects.equals(this.description, territory.description) &&
        Objects.equals(this.entityPriority, territory.entityPriority) &&
        Objects.equals(this.productPriority, territory.productPriority) &&
        Objects.equals(this.branchList, territory.branchList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateKey, id, description, entityPriority, productPriority, branchList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Territory {\n");
    
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entityPriority: ").append(toIndentedString(entityPriority)).append("\n");
    sb.append("    productPriority: ").append(toIndentedString(productPriority)).append("\n");
    sb.append("    branchList: ").append(toIndentedString(branchList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
