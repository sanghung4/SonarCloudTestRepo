/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse GlAccountSubLedgerList.
 */
@Schema(description = "Object representing an Eclipse GlAccountSubLedgerList.")

public class GlAccountSubLedgerList {
  @JsonProperty("updateKey")
  private String updateKey = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("subLedgerId")
  private String subLedgerId = null;

  @JsonProperty("subLedgerDescription")
  private String subLedgerDescription = null;

  public GlAccountSubLedgerList updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update key to handle concurrency during updates within Eclipse
   * @return updateKey
  **/
  @Schema(description = "Update key to handle concurrency during updates within Eclipse")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }

  public GlAccountSubLedgerList id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Eclipse ID for the record
   * @return id
  **/
  @Schema(description = "Eclipse ID for the record")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public GlAccountSubLedgerList subLedgerId(String subLedgerId) {
    this.subLedgerId = subLedgerId;
    return this;
  }

   /**
   * Desc: The GlAccountSubLedgerList SubLedgerId  File: GENLED  Attr: 34,x
   * @return subLedgerId
  **/
  @Schema(description = "Desc: The GlAccountSubLedgerList SubLedgerId  File: GENLED  Attr: 34,x")
  public String getSubLedgerId() {
    return subLedgerId;
  }

  public void setSubLedgerId(String subLedgerId) {
    this.subLedgerId = subLedgerId;
  }

  public GlAccountSubLedgerList subLedgerDescription(String subLedgerDescription) {
    this.subLedgerDescription = subLedgerDescription;
    return this;
  }

   /**
   * Desc: The GlAccountSubLedgerList SubLedgerDescription  File: GENLED  Attr: 35,x
   * @return subLedgerDescription
  **/
  @Schema(description = "Desc: The GlAccountSubLedgerList SubLedgerDescription  File: GENLED  Attr: 35,x")
  public String getSubLedgerDescription() {
    return subLedgerDescription;
  }

  public void setSubLedgerDescription(String subLedgerDescription) {
    this.subLedgerDescription = subLedgerDescription;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlAccountSubLedgerList glAccountSubLedgerList = (GlAccountSubLedgerList) o;
    return Objects.equals(this.updateKey, glAccountSubLedgerList.updateKey) &&
        Objects.equals(this.id, glAccountSubLedgerList.id) &&
        Objects.equals(this.subLedgerId, glAccountSubLedgerList.subLedgerId) &&
        Objects.equals(this.subLedgerDescription, glAccountSubLedgerList.subLedgerDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateKey, id, subLedgerId, subLedgerDescription);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlAccountSubLedgerList {\n");
    
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    subLedgerId: ").append(toIndentedString(subLedgerId)).append("\n");
    sb.append("    subLedgerDescription: ").append(toIndentedString(subLedgerDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
