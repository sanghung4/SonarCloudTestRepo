/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.ProductLocationType;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse WarehouseInprocessLocation
 */
@Schema(description = "Object representing an Eclipse WarehouseInprocessLocation")

public class WarehouseInprocessLocation {
  @JsonProperty("branchID")
  private String branchID = null;

  @JsonProperty("warehouseID")
  private String warehouseID = null;

  @JsonProperty("locationType")
  private ProductLocationType locationType = null;

  @JsonProperty("location")
  private String location = null;

  @JsonProperty("lot")
  private String lot = null;

  @JsonProperty("zone")
  private String zone = null;

  @JsonProperty("overrideLocationFlag")
  private Boolean overrideLocationFlag = null;

  public WarehouseInprocessLocation branchID(String branchID) {
    this.branchID = branchID;
    return this;
  }

   /**
   * Eclipse Branch ID
   * @return branchID
  **/
  @NotNull
  @Schema(required = true, description = "Eclipse Branch ID")
  public String getBranchID() {
    return branchID;
  }

  public void setBranchID(String branchID) {
    this.branchID = branchID;
  }

  public WarehouseInprocessLocation warehouseID(String warehouseID) {
    this.warehouseID = warehouseID;
    return this;
  }

   /**
   * Eclipse Warehouse ID
   * @return warehouseID
  **/
  @NotNull
  @Schema(required = true, description = "Eclipse Warehouse ID")
  public String getWarehouseID() {
    return warehouseID;
  }

  public void setWarehouseID(String warehouseID) {
    this.warehouseID = warehouseID;
  }

  public WarehouseInprocessLocation locationType(ProductLocationType locationType) {
    this.locationType = locationType;
    return this;
  }

   /**
   * Get locationType
   * @return locationType
  **/
  @Valid
  @Schema(description = "")
  public ProductLocationType getLocationType() {
    return locationType;
  }

  public void setLocationType(ProductLocationType locationType) {
    this.locationType = locationType;
  }

  public WarehouseInprocessLocation location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Location
   * @return location
  **/
  @Schema(description = "Location")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public WarehouseInprocessLocation lot(String lot) {
    this.lot = lot;
    return this;
  }

   /**
   * Lot
   * @return lot
  **/
  @Schema(description = "Lot")
  public String getLot() {
    return lot;
  }

  public void setLot(String lot) {
    this.lot = lot;
  }

  public WarehouseInprocessLocation zone(String zone) {
    this.zone = zone;
    return this;
  }

   /**
   * Zone
   * @return zone
  **/
  @Schema(description = "Zone")
  public String getZone() {
    return zone;
  }

  public void setZone(String zone) {
    this.zone = zone;
  }

  public WarehouseInprocessLocation overrideLocationFlag(Boolean overrideLocationFlag) {
    this.overrideLocationFlag = overrideLocationFlag;
    return this;
  }

   /**
   * Authorize an Override Location
   * @return overrideLocationFlag
  **/
  @Schema(description = "Authorize an Override Location")
  public Boolean isOverrideLocationFlag() {
    return overrideLocationFlag;
  }

  public void setOverrideLocationFlag(Boolean overrideLocationFlag) {
    this.overrideLocationFlag = overrideLocationFlag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WarehouseInprocessLocation warehouseInprocessLocation = (WarehouseInprocessLocation) o;
    return Objects.equals(this.branchID, warehouseInprocessLocation.branchID) &&
        Objects.equals(this.warehouseID, warehouseInprocessLocation.warehouseID) &&
        Objects.equals(this.locationType, warehouseInprocessLocation.locationType) &&
        Objects.equals(this.location, warehouseInprocessLocation.location) &&
        Objects.equals(this.lot, warehouseInprocessLocation.lot) &&
        Objects.equals(this.zone, warehouseInprocessLocation.zone) &&
        Objects.equals(this.overrideLocationFlag, warehouseInprocessLocation.overrideLocationFlag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branchID, warehouseID, locationType, location, lot, zone, overrideLocationFlag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WarehouseInprocessLocation {\n");
    
    sb.append("    branchID: ").append(toIndentedString(branchID)).append("\n");
    sb.append("    warehouseID: ").append(toIndentedString(warehouseID)).append("\n");
    sb.append("    locationType: ").append(toIndentedString(locationType)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    lot: ").append(toIndentedString(lot)).append("\n");
    sb.append("    zone: ").append(toIndentedString(zone)).append("\n");
    sb.append("    overrideLocationFlag: ").append(toIndentedString(overrideLocationFlag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
