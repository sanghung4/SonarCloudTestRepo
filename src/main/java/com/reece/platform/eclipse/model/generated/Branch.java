/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.BranchCreditCardProcessor;
import com.reece.platform.eclipse.model.generated.BranchShipViaOverride;
import com.reece.platform.eclipse.model.generated.StrategicPricingBranchType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse Branch.
 */
@Schema(description = "Object representing an Eclipse Branch.")

public class Branch {
  @JsonProperty("updateKey")
  private String updateKey = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("shortDescription")
  private String shortDescription = null;

  @JsonProperty("longDescription")
  private String longDescription = null;

  @JsonProperty("branchEntityId")
  private Integer branchEntityId = null;

  @JsonProperty("branchRemitToId")
  private Integer branchRemitToId = null;

  @JsonProperty("defaultPriceClassId")
  private String defaultPriceClassId = null;

  @JsonProperty("isStockingBranch")
  private Boolean isStockingBranch = null;

  @JsonProperty("checkProcessor")
  private String checkProcessor = null;

  @JsonProperty("checkSubscriberId")
  private String checkSubscriberId = null;

  @JsonProperty("checkHostId")
  private String checkHostId = null;

  @JsonProperty("checkServiceId")
  private String checkServiceId = null;

  @JsonProperty("branchManager")
  private String branchManager = null;

  @JsonProperty("costCenterType")
  private String costCenterType = null;

  @JsonProperty("purchaseOrderBillToId")
  private Integer purchaseOrderBillToId = null;

  @JsonProperty("strategicPricingEnabled")
  private Boolean strategicPricingEnabled = null;

  @JsonProperty("strategicPricingBranchType")
  private StrategicPricingBranchType strategicPricingBranchType = null;

  @JsonProperty("creditCardProcessors")
  private List<BranchCreditCardProcessor> creditCardProcessors = null;

  @JsonProperty("inventoryInquiryBranchList")
  private List<String> inventoryInquiryBranchList = null;

  @JsonProperty("matrixHierarchyBranchList")
  private List<String> matrixHierarchyBranchList = null;

  @JsonProperty("shipViaOverrides")
  private List<BranchShipViaOverride> shipViaOverrides = null;

  public Branch updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update key to handle concurrency during updates within Eclipse
   * @return updateKey
  **/
  @Schema(description = "Update key to handle concurrency during updates within Eclipse")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }

  public Branch id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Eclipse ID for the record
   * @return id
  **/
  @Schema(description = "Eclipse ID for the record")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Branch shortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
    return this;
  }

   /**
   * Desc: The Branch ShortDescription  File: TERRITORY  Attr: 1
   * @return shortDescription
  **/
  @NotNull
 @Size(min=1,max=12)  @Schema(required = true, description = "Desc: The Branch ShortDescription  File: TERRITORY  Attr: 1")
  public String getShortDescription() {
    return shortDescription;
  }

  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }

  public Branch longDescription(String longDescription) {
    this.longDescription = longDescription;
    return this;
  }

   /**
   * Desc: The Branch LongDescription  File: TERRITORY  Attr: 3
   * @return longDescription
  **/
 @Size(max=35)  @Schema(description = "Desc: The Branch LongDescription  File: TERRITORY  Attr: 3")
  public String getLongDescription() {
    return longDescription;
  }

  public void setLongDescription(String longDescription) {
    this.longDescription = longDescription;
  }

  public Branch branchEntityId(Integer branchEntityId) {
    this.branchEntityId = branchEntityId;
    return this;
  }

   /**
   * Desc: The Branch BranchEntityId  File: TERRITORY  Attr: 4
   * @return branchEntityId
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The Branch BranchEntityId  File: TERRITORY  Attr: 4")
  public Integer getBranchEntityId() {
    return branchEntityId;
  }

  public void setBranchEntityId(Integer branchEntityId) {
    this.branchEntityId = branchEntityId;
  }

  public Branch branchRemitToId(Integer branchRemitToId) {
    this.branchRemitToId = branchRemitToId;
    return this;
  }

   /**
   * Desc: The Branch BranchRemitToId  File: TERRITORY  Attr: 5
   * @return branchRemitToId
  **/
  @Schema(description = "Desc: The Branch BranchRemitToId  File: TERRITORY  Attr: 5")
  public Integer getBranchRemitToId() {
    return branchRemitToId;
  }

  public void setBranchRemitToId(Integer branchRemitToId) {
    this.branchRemitToId = branchRemitToId;
  }

  public Branch defaultPriceClassId(String defaultPriceClassId) {
    this.defaultPriceClassId = defaultPriceClassId;
    return this;
  }

   /**
   * Desc: The Branch DefaultPriceClassId  File: TERRITORY  Attr: 11
   * @return defaultPriceClassId
  **/
  @Schema(description = "Desc: The Branch DefaultPriceClassId  File: TERRITORY  Attr: 11")
  public String getDefaultPriceClassId() {
    return defaultPriceClassId;
  }

  public void setDefaultPriceClassId(String defaultPriceClassId) {
    this.defaultPriceClassId = defaultPriceClassId;
  }

  public Branch isStockingBranch(Boolean isStockingBranch) {
    this.isStockingBranch = isStockingBranch;
    return this;
  }

   /**
   * Desc: The Branch IsStockingBranch flag  File: TERRITORY  Attr: 12
   * @return isStockingBranch
  **/
  @Schema(description = "Desc: The Branch IsStockingBranch flag  File: TERRITORY  Attr: 12")
  public Boolean isIsStockingBranch() {
    return isStockingBranch;
  }

  public void setIsStockingBranch(Boolean isStockingBranch) {
    this.isStockingBranch = isStockingBranch;
  }

  public Branch checkProcessor(String checkProcessor) {
    this.checkProcessor = checkProcessor;
    return this;
  }

   /**
   * Desc: The Branch CheckProcessor  File: TERRITORY  Attr: 24
   * @return checkProcessor
  **/
  @Schema(description = "Desc: The Branch CheckProcessor  File: TERRITORY  Attr: 24")
  public String getCheckProcessor() {
    return checkProcessor;
  }

  public void setCheckProcessor(String checkProcessor) {
    this.checkProcessor = checkProcessor;
  }

  public Branch checkSubscriberId(String checkSubscriberId) {
    this.checkSubscriberId = checkSubscriberId;
    return this;
  }

   /**
   * Desc: The Branch CheckSubscriberId  File: TERRITORY  Attr: 25
   * @return checkSubscriberId
  **/
 @Size(max=20)  @Schema(description = "Desc: The Branch CheckSubscriberId  File: TERRITORY  Attr: 25")
  public String getCheckSubscriberId() {
    return checkSubscriberId;
  }

  public void setCheckSubscriberId(String checkSubscriberId) {
    this.checkSubscriberId = checkSubscriberId;
  }

  public Branch checkHostId(String checkHostId) {
    this.checkHostId = checkHostId;
    return this;
  }

   /**
   * Desc: The Branch CheckHostId  File: TERRITORY  Attr: 26
   * @return checkHostId
  **/
 @Size(max=10)  @Schema(description = "Desc: The Branch CheckHostId  File: TERRITORY  Attr: 26")
  public String getCheckHostId() {
    return checkHostId;
  }

  public void setCheckHostId(String checkHostId) {
    this.checkHostId = checkHostId;
  }

  public Branch checkServiceId(String checkServiceId) {
    this.checkServiceId = checkServiceId;
    return this;
  }

   /**
   * Desc: The Branch CheckServiceId  File: TERRITORY  Attr: 27
   * @return checkServiceId
  **/
 @Size(max=21)  @Schema(description = "Desc: The Branch CheckServiceId  File: TERRITORY  Attr: 27")
  public String getCheckServiceId() {
    return checkServiceId;
  }

  public void setCheckServiceId(String checkServiceId) {
    this.checkServiceId = checkServiceId;
  }

  public Branch branchManager(String branchManager) {
    this.branchManager = branchManager;
    return this;
  }

   /**
   * Desc: The Branch BranchManager  File: TERRITORY  Attr: 33
   * @return branchManager
  **/
  @Schema(description = "Desc: The Branch BranchManager  File: TERRITORY  Attr: 33")
  public String getBranchManager() {
    return branchManager;
  }

  public void setBranchManager(String branchManager) {
    this.branchManager = branchManager;
  }

  public Branch costCenterType(String costCenterType) {
    this.costCenterType = costCenterType;
    return this;
  }

   /**
   * Desc: The Branch CostCenterType  File: TERRITORY  Attr: 34
   * @return costCenterType
  **/
  @Schema(description = "Desc: The Branch CostCenterType  File: TERRITORY  Attr: 34")
  public String getCostCenterType() {
    return costCenterType;
  }

  public void setCostCenterType(String costCenterType) {
    this.costCenterType = costCenterType;
  }

  public Branch purchaseOrderBillToId(Integer purchaseOrderBillToId) {
    this.purchaseOrderBillToId = purchaseOrderBillToId;
    return this;
  }

   /**
   * Desc: The Branch PurchaseOrderBillToId  File: TERRITORY  Attr: 38
   * @return purchaseOrderBillToId
  **/
  @Schema(description = "Desc: The Branch PurchaseOrderBillToId  File: TERRITORY  Attr: 38")
  public Integer getPurchaseOrderBillToId() {
    return purchaseOrderBillToId;
  }

  public void setPurchaseOrderBillToId(Integer purchaseOrderBillToId) {
    this.purchaseOrderBillToId = purchaseOrderBillToId;
  }

  public Branch strategicPricingEnabled(Boolean strategicPricingEnabled) {
    this.strategicPricingEnabled = strategicPricingEnabled;
    return this;
  }

   /**
   * Desc: The StrategicPricingEnabled  File: TERRITORY  Attr: 46
   * @return strategicPricingEnabled
  **/
  @Schema(description = "Desc: The StrategicPricingEnabled  File: TERRITORY  Attr: 46")
  public Boolean isStrategicPricingEnabled() {
    return strategicPricingEnabled;
  }

  public void setStrategicPricingEnabled(Boolean strategicPricingEnabled) {
    this.strategicPricingEnabled = strategicPricingEnabled;
  }

  public Branch strategicPricingBranchType(StrategicPricingBranchType strategicPricingBranchType) {
    this.strategicPricingBranchType = strategicPricingBranchType;
    return this;
  }

   /**
   * Get strategicPricingBranchType
   * @return strategicPricingBranchType
  **/
  @Valid
  @Schema(description = "")
  public StrategicPricingBranchType getStrategicPricingBranchType() {
    return strategicPricingBranchType;
  }

  public void setStrategicPricingBranchType(StrategicPricingBranchType strategicPricingBranchType) {
    this.strategicPricingBranchType = strategicPricingBranchType;
  }

  public Branch creditCardProcessors(List<BranchCreditCardProcessor> creditCardProcessors) {
    this.creditCardProcessors = creditCardProcessors;
    return this;
  }

  public Branch addCreditCardProcessorsItem(BranchCreditCardProcessor creditCardProcessorsItem) {
    if (this.creditCardProcessors == null) {
      this.creditCardProcessors = new ArrayList<>();
    }
    this.creditCardProcessors.add(creditCardProcessorsItem);
    return this;
  }

   /**
   * A list of Branch CreditCardProcessors
   * @return creditCardProcessors
  **/
  @Valid
  @Schema(description = "A list of Branch CreditCardProcessors")
  public List<BranchCreditCardProcessor> getCreditCardProcessors() {
    return creditCardProcessors;
  }

  public void setCreditCardProcessors(List<BranchCreditCardProcessor> creditCardProcessors) {
    this.creditCardProcessors = creditCardProcessors;
  }

  public Branch inventoryInquiryBranchList(List<String> inventoryInquiryBranchList) {
    this.inventoryInquiryBranchList = inventoryInquiryBranchList;
    return this;
  }

  public Branch addInventoryInquiryBranchListItem(String inventoryInquiryBranchListItem) {
    if (this.inventoryInquiryBranchList == null) {
      this.inventoryInquiryBranchList = new ArrayList<>();
    }
    this.inventoryInquiryBranchList.add(inventoryInquiryBranchListItem);
    return this;
  }

   /**
   * A list of Branch InventoryInquiryBranchList
   * @return inventoryInquiryBranchList
  **/
  @Schema(description = "A list of Branch InventoryInquiryBranchList")
  public List<String> getInventoryInquiryBranchList() {
    return inventoryInquiryBranchList;
  }

  public void setInventoryInquiryBranchList(List<String> inventoryInquiryBranchList) {
    this.inventoryInquiryBranchList = inventoryInquiryBranchList;
  }

  public Branch matrixHierarchyBranchList(List<String> matrixHierarchyBranchList) {
    this.matrixHierarchyBranchList = matrixHierarchyBranchList;
    return this;
  }

  public Branch addMatrixHierarchyBranchListItem(String matrixHierarchyBranchListItem) {
    if (this.matrixHierarchyBranchList == null) {
      this.matrixHierarchyBranchList = new ArrayList<>();
    }
    this.matrixHierarchyBranchList.add(matrixHierarchyBranchListItem);
    return this;
  }

   /**
   * A list of Branch MatrixHierarchyBranchList
   * @return matrixHierarchyBranchList
  **/
  @Schema(description = "A list of Branch MatrixHierarchyBranchList")
  public List<String> getMatrixHierarchyBranchList() {
    return matrixHierarchyBranchList;
  }

  public void setMatrixHierarchyBranchList(List<String> matrixHierarchyBranchList) {
    this.matrixHierarchyBranchList = matrixHierarchyBranchList;
  }

  public Branch shipViaOverrides(List<BranchShipViaOverride> shipViaOverrides) {
    this.shipViaOverrides = shipViaOverrides;
    return this;
  }

  public Branch addShipViaOverridesItem(BranchShipViaOverride shipViaOverridesItem) {
    if (this.shipViaOverrides == null) {
      this.shipViaOverrides = new ArrayList<>();
    }
    this.shipViaOverrides.add(shipViaOverridesItem);
    return this;
  }

   /**
   * A list of Branch BranchShipViaOverride
   * @return shipViaOverrides
  **/
  @Valid
  @Schema(description = "A list of Branch BranchShipViaOverride")
  public List<BranchShipViaOverride> getShipViaOverrides() {
    return shipViaOverrides;
  }

  public void setShipViaOverrides(List<BranchShipViaOverride> shipViaOverrides) {
    this.shipViaOverrides = shipViaOverrides;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Branch branch = (Branch) o;
    return Objects.equals(this.updateKey, branch.updateKey) &&
        Objects.equals(this.id, branch.id) &&
        Objects.equals(this.shortDescription, branch.shortDescription) &&
        Objects.equals(this.longDescription, branch.longDescription) &&
        Objects.equals(this.branchEntityId, branch.branchEntityId) &&
        Objects.equals(this.branchRemitToId, branch.branchRemitToId) &&
        Objects.equals(this.defaultPriceClassId, branch.defaultPriceClassId) &&
        Objects.equals(this.isStockingBranch, branch.isStockingBranch) &&
        Objects.equals(this.checkProcessor, branch.checkProcessor) &&
        Objects.equals(this.checkSubscriberId, branch.checkSubscriberId) &&
        Objects.equals(this.checkHostId, branch.checkHostId) &&
        Objects.equals(this.checkServiceId, branch.checkServiceId) &&
        Objects.equals(this.branchManager, branch.branchManager) &&
        Objects.equals(this.costCenterType, branch.costCenterType) &&
        Objects.equals(this.purchaseOrderBillToId, branch.purchaseOrderBillToId) &&
        Objects.equals(this.strategicPricingEnabled, branch.strategicPricingEnabled) &&
        Objects.equals(this.strategicPricingBranchType, branch.strategicPricingBranchType) &&
        Objects.equals(this.creditCardProcessors, branch.creditCardProcessors) &&
        Objects.equals(this.inventoryInquiryBranchList, branch.inventoryInquiryBranchList) &&
        Objects.equals(this.matrixHierarchyBranchList, branch.matrixHierarchyBranchList) &&
        Objects.equals(this.shipViaOverrides, branch.shipViaOverrides);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateKey, id, shortDescription, longDescription, branchEntityId, branchRemitToId, defaultPriceClassId, isStockingBranch, checkProcessor, checkSubscriberId, checkHostId, checkServiceId, branchManager, costCenterType, purchaseOrderBillToId, strategicPricingEnabled, strategicPricingBranchType, creditCardProcessors, inventoryInquiryBranchList, matrixHierarchyBranchList, shipViaOverrides);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Branch {\n");
    
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    shortDescription: ").append(toIndentedString(shortDescription)).append("\n");
    sb.append("    longDescription: ").append(toIndentedString(longDescription)).append("\n");
    sb.append("    branchEntityId: ").append(toIndentedString(branchEntityId)).append("\n");
    sb.append("    branchRemitToId: ").append(toIndentedString(branchRemitToId)).append("\n");
    sb.append("    defaultPriceClassId: ").append(toIndentedString(defaultPriceClassId)).append("\n");
    sb.append("    isStockingBranch: ").append(toIndentedString(isStockingBranch)).append("\n");
    sb.append("    checkProcessor: ").append(toIndentedString(checkProcessor)).append("\n");
    sb.append("    checkSubscriberId: ").append(toIndentedString(checkSubscriberId)).append("\n");
    sb.append("    checkHostId: ").append(toIndentedString(checkHostId)).append("\n");
    sb.append("    checkServiceId: ").append(toIndentedString(checkServiceId)).append("\n");
    sb.append("    branchManager: ").append(toIndentedString(branchManager)).append("\n");
    sb.append("    costCenterType: ").append(toIndentedString(costCenterType)).append("\n");
    sb.append("    purchaseOrderBillToId: ").append(toIndentedString(purchaseOrderBillToId)).append("\n");
    sb.append("    strategicPricingEnabled: ").append(toIndentedString(strategicPricingEnabled)).append("\n");
    sb.append("    strategicPricingBranchType: ").append(toIndentedString(strategicPricingBranchType)).append("\n");
    sb.append("    creditCardProcessors: ").append(toIndentedString(creditCardProcessors)).append("\n");
    sb.append("    inventoryInquiryBranchList: ").append(toIndentedString(inventoryInquiryBranchList)).append("\n");
    sb.append("    matrixHierarchyBranchList: ").append(toIndentedString(matrixHierarchyBranchList)).append("\n");
    sb.append("    shipViaOverrides: ").append(toIndentedString(shipViaOverrides)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
