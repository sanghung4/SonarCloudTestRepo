/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse ProductLocationActivityLog.
 */
@Schema(description = "Object representing an Eclipse ProductLocationActivityLog.")

public class ProductLocationActivityLog {
  @JsonProperty("updateKey")
  private String updateKey = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("branchId")
  private String branchId = null;

  @JsonProperty("productId")
  private Integer productId = null;

  @JsonProperty("logCounter")
  private String logCounter = null;

  @JsonProperty("userId")
  private String userId = null;

  @JsonProperty("date")
  private LocalDateTime date = null;

  @JsonProperty("time")
  private LocalDateTime time = null;

  @JsonProperty("securityLevel")
  private Integer securityLevel = null;

  @JsonProperty("comment")
  private String comment = null;

  @JsonProperty("commentType")
  private String commentType = null;

  @JsonProperty("log")
  private String log = null;

  @JsonProperty("displayLog")
  private String displayLog = null;

  public ProductLocationActivityLog updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update key to handle concurrency during updates within Eclipse
   * @return updateKey
  **/
  @Schema(description = "Update key to handle concurrency during updates within Eclipse")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }

  public ProductLocationActivityLog id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Eclipse ID for the record
   * @return id
  **/
  @Schema(description = "Eclipse ID for the record")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ProductLocationActivityLog branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Desc: The ProductLocationActivityLog BranchId  File: PROD.LOG  Attr: 0
   * @return branchId
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The ProductLocationActivityLog BranchId  File: PROD.LOG  Attr: 0")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public ProductLocationActivityLog productId(Integer productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Desc: The ProductLocationActivityLog ProductId  File: PROD.LOG  Attr: 0
   * @return productId
  **/
  @NotNull
  @Schema(required = true, description = "Desc: The ProductLocationActivityLog ProductId  File: PROD.LOG  Attr: 0")
  public Integer getProductId() {
    return productId;
  }

  public void setProductId(Integer productId) {
    this.productId = productId;
  }

  public ProductLocationActivityLog logCounter(String logCounter) {
    this.logCounter = logCounter;
    return this;
  }

   /**
   * Desc: The ProductLocationActivityLog LogCounter  File: PROD.LOG  Attr: 0
   * @return logCounter
  **/
  @Schema(description = "Desc: The ProductLocationActivityLog LogCounter  File: PROD.LOG  Attr: 0")
  public String getLogCounter() {
    return logCounter;
  }

  public void setLogCounter(String logCounter) {
    this.logCounter = logCounter;
  }

  public ProductLocationActivityLog userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Desc: The ProductLocationActivityLog UserId  File: PROD.LOG  Attr: 1
   * @return userId
  **/
  @Schema(description = "Desc: The ProductLocationActivityLog UserId  File: PROD.LOG  Attr: 1")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public ProductLocationActivityLog date(LocalDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Desc: The ProductLocationActivityLog Date  File: PROD.LOG  Attr: 2
   * @return date
  **/
  @Valid
  @Schema(description = "Desc: The ProductLocationActivityLog Date  File: PROD.LOG  Attr: 2")
  public LocalDateTime getDate() {
    return date;
  }

  public void setDate(LocalDateTime date) {
    this.date = date;
  }

  public ProductLocationActivityLog time(LocalDateTime time) {
    this.time = time;
    return this;
  }

   /**
   * Desc: The ProductLocationActivityLog Time  File: PROD.LOG  Attr: 3
   * @return time
  **/
  @Valid
  @Schema(description = "Desc: The ProductLocationActivityLog Time  File: PROD.LOG  Attr: 3")
  public LocalDateTime getTime() {
    return time;
  }

  public void setTime(LocalDateTime time) {
    this.time = time;
  }

  public ProductLocationActivityLog securityLevel(Integer securityLevel) {
    this.securityLevel = securityLevel;
    return this;
  }

   /**
   * Desc: The ProductLocationActivityLog SecurityLevel  File: PROD.LOG  Attr: 4
   * @return securityLevel
  **/
  @Schema(description = "Desc: The ProductLocationActivityLog SecurityLevel  File: PROD.LOG  Attr: 4")
  public Integer getSecurityLevel() {
    return securityLevel;
  }

  public void setSecurityLevel(Integer securityLevel) {
    this.securityLevel = securityLevel;
  }

  public ProductLocationActivityLog comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Desc: The ProductLocationActivityLog CommentLine  File: PROD.LOG  Attr: 5
   * @return comment
  **/
  @Schema(description = "Desc: The ProductLocationActivityLog CommentLine  File: PROD.LOG  Attr: 5")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public ProductLocationActivityLog commentType(String commentType) {
    this.commentType = commentType;
    return this;
  }

   /**
   * Desc: The ProductLocationActivityLog CommentType  File: PROD.LOG  Attr: 6
   * @return commentType
  **/
  @Schema(description = "Desc: The ProductLocationActivityLog CommentType  File: PROD.LOG  Attr: 6")
  public String getCommentType() {
    return commentType;
  }

  public void setCommentType(String commentType) {
    this.commentType = commentType;
  }

  public ProductLocationActivityLog log(String log) {
    this.log = log;
    return this;
  }

   /**
   * Desc: The ProductLocationActivityLog Log Info  File: PROD.LOG  Attr: 7
   * @return log
  **/
  @Schema(description = "Desc: The ProductLocationActivityLog Log Info  File: PROD.LOG  Attr: 7")
  public String getLog() {
    return log;
  }

  public void setLog(String log) {
    this.log = log;
  }

  public ProductLocationActivityLog displayLog(String displayLog) {
    this.displayLog = displayLog;
    return this;
  }

   /**
   * Desc: The ProductLocationActivityLog Log in Human Readable Format  File: PROD.LOG
   * @return displayLog
  **/
  @Schema(description = "Desc: The ProductLocationActivityLog Log in Human Readable Format  File: PROD.LOG")
  public String getDisplayLog() {
    return displayLog;
  }

  public void setDisplayLog(String displayLog) {
    this.displayLog = displayLog;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProductLocationActivityLog productLocationActivityLog = (ProductLocationActivityLog) o;
    return Objects.equals(this.updateKey, productLocationActivityLog.updateKey) &&
        Objects.equals(this.id, productLocationActivityLog.id) &&
        Objects.equals(this.branchId, productLocationActivityLog.branchId) &&
        Objects.equals(this.productId, productLocationActivityLog.productId) &&
        Objects.equals(this.logCounter, productLocationActivityLog.logCounter) &&
        Objects.equals(this.userId, productLocationActivityLog.userId) &&
        Objects.equals(this.date, productLocationActivityLog.date) &&
        Objects.equals(this.time, productLocationActivityLog.time) &&
        Objects.equals(this.securityLevel, productLocationActivityLog.securityLevel) &&
        Objects.equals(this.comment, productLocationActivityLog.comment) &&
        Objects.equals(this.commentType, productLocationActivityLog.commentType) &&
        Objects.equals(this.log, productLocationActivityLog.log) &&
        Objects.equals(this.displayLog, productLocationActivityLog.displayLog);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateKey, id, branchId, productId, logCounter, userId, date, time, securityLevel, comment, commentType, log, displayLog);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProductLocationActivityLog {\n");
    
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    logCounter: ").append(toIndentedString(logCounter)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    securityLevel: ").append(toIndentedString(securityLevel)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    commentType: ").append(toIndentedString(commentType)).append("\n");
    sb.append("    log: ").append(toIndentedString(log)).append("\n");
    sb.append("    displayLog: ").append(toIndentedString(displayLog)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
