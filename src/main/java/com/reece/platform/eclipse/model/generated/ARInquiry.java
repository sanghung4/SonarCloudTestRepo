/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.Money;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing the typical ARInquiry object.
 */
@Schema(description = "Object representing the typical ARInquiry object.")

public class ARInquiry {
  @JsonProperty("updateKey")
  private String updateKey = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("customerId")
  private String customerId = null;

  @JsonProperty("future")
  private Money future = null;

  @JsonProperty("current")
  private Money current = null;

  @JsonProperty("balance30to61")
  private Money balance30to61 = null;

  @JsonProperty("balance61to90")
  private Money balance61to90 = null;

  @JsonProperty("balance91to120")
  private Money balance91to120 = null;

  @JsonProperty("balanceOver120")
  private Money balanceOver120 = null;

  @JsonProperty("total")
  private Money total = null;

  @JsonProperty("creditManager")
  private String creditManager = null;

  @JsonProperty("terms")
  private String terms = null;

  @JsonProperty("directTerms")
  private String directTerms = null;

  @JsonProperty("creditLimit")
  private Money creditLimit = null;

  @JsonProperty("creditAvailable")
  private Money creditAvailable = null;

  @JsonProperty("cumulativeCreditLimit")
  private Money cumulativeCreditLimit = null;

  @JsonProperty("totalDeposit")
  private Money totalDeposit = null;

  @JsonProperty("salesDeposit")
  private Money salesDeposit = null;

  @JsonProperty("directDeposit")
  private Money directDeposit = null;

  @JsonProperty("totalOrders")
  private Money totalOrders = null;

  @JsonProperty("salesOrders")
  private Money salesOrders = null;

  @JsonProperty("directOrders")
  private Money directOrders = null;

  @JsonProperty("totalMTD")
  private Money totalMTD = null;

  @JsonProperty("salesMTD")
  private Money salesMTD = null;

  @JsonProperty("directMTD")
  private Money directMTD = null;

  @JsonProperty("totalYTD")
  private Money totalYTD = null;

  @JsonProperty("salesYTD")
  private Money salesYTD = null;

  @JsonProperty("directYTD")
  private Money directYTD = null;

  @JsonProperty("monthAvg")
  private Money monthAvg = null;

  @JsonProperty("monthHigh")
  private Money monthHigh = null;

  @JsonProperty("paymentDays")
  private String paymentDays = null;

  public ARInquiry updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update key to handle concurrency during updates within Eclipse
   * @return updateKey
  **/
  @Schema(description = "Update key to handle concurrency during updates within Eclipse")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }

  public ARInquiry id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Eclipse ID for the record
   * @return id
  **/
  @Schema(description = "Eclipse ID for the record")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ARInquiry customerId(String customerId) {
    this.customerId = customerId;
    return this;
  }

   /**
   * Desc: Id of the customer
   * @return customerId
  **/
  @Schema(description = "Desc: Id of the customer")
  public String getCustomerId() {
    return customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }

  public ARInquiry future(Money future) {
    this.future = future;
    return this;
  }

   /**
   * Get future
   * @return future
  **/
  @Valid
  @Schema(description = "")
  public Money getFuture() {
    return future;
  }

  public void setFuture(Money future) {
    this.future = future;
  }

  public ARInquiry current(Money current) {
    this.current = current;
    return this;
  }

   /**
   * Get current
   * @return current
  **/
  @Valid
  @Schema(description = "")
  public Money getCurrent() {
    return current;
  }

  public void setCurrent(Money current) {
    this.current = current;
  }

  public ARInquiry balance30to61(Money balance30to61) {
    this.balance30to61 = balance30to61;
    return this;
  }

   /**
   * Get balance30to61
   * @return balance30to61
  **/
  @Valid
  @Schema(description = "")
  public Money getBalance30to61() {
    return balance30to61;
  }

  public void setBalance30to61(Money balance30to61) {
    this.balance30to61 = balance30to61;
  }

  public ARInquiry balance61to90(Money balance61to90) {
    this.balance61to90 = balance61to90;
    return this;
  }

   /**
   * Get balance61to90
   * @return balance61to90
  **/
  @Valid
  @Schema(description = "")
  public Money getBalance61to90() {
    return balance61to90;
  }

  public void setBalance61to90(Money balance61to90) {
    this.balance61to90 = balance61to90;
  }

  public ARInquiry balance91to120(Money balance91to120) {
    this.balance91to120 = balance91to120;
    return this;
  }

   /**
   * Get balance91to120
   * @return balance91to120
  **/
  @Valid
  @Schema(description = "")
  public Money getBalance91to120() {
    return balance91to120;
  }

  public void setBalance91to120(Money balance91to120) {
    this.balance91to120 = balance91to120;
  }

  public ARInquiry balanceOver120(Money balanceOver120) {
    this.balanceOver120 = balanceOver120;
    return this;
  }

   /**
   * Get balanceOver120
   * @return balanceOver120
  **/
  @Valid
  @Schema(description = "")
  public Money getBalanceOver120() {
    return balanceOver120;
  }

  public void setBalanceOver120(Money balanceOver120) {
    this.balanceOver120 = balanceOver120;
  }

  public ARInquiry total(Money total) {
    this.total = total;
    return this;
  }

   /**
   * Get total
   * @return total
  **/
  @Valid
  @Schema(description = "")
  public Money getTotal() {
    return total;
  }

  public void setTotal(Money total) {
    this.total = total;
  }

  public ARInquiry creditManager(String creditManager) {
    this.creditManager = creditManager;
    return this;
  }

   /**
   * Desc: Displays the credit manager assigned to the A/R account in the Additional Info tab from the Credit Control Parameters in Customer Maintenance.
   * @return creditManager
  **/
  @Schema(description = "Desc: Displays the credit manager assigned to the A/R account in the Additional Info tab from the Credit Control Parameters in Customer Maintenance.")
  public String getCreditManager() {
    return creditManager;
  }

  public void setCreditManager(String creditManager) {
    this.creditManager = creditManager;
  }

  public ARInquiry terms(String terms) {
    this.terms = terms;
    return this;
  }

   /**
   * Desc: The customer&#x27;s payment terms.
   * @return terms
  **/
  @Schema(description = "Desc: The customer's payment terms.")
  public String getTerms() {
    return terms;
  }

  public void setTerms(String terms) {
    this.terms = terms;
  }

  public ARInquiry directTerms(String directTerms) {
    this.directTerms = directTerms;
    return this;
  }

   /**
   * Desc: Your company&#x27;s payment terms defined for direct orders for this vendor.
   * @return directTerms
  **/
  @Schema(description = "Desc: Your company's payment terms defined for direct orders for this vendor.")
  public String getDirectTerms() {
    return directTerms;
  }

  public void setDirectTerms(String directTerms) {
    this.directTerms = directTerms;
  }

  public ARInquiry creditLimit(Money creditLimit) {
    this.creditLimit = creditLimit;
    return this;
  }

   /**
   * Get creditLimit
   * @return creditLimit
  **/
  @Valid
  @Schema(description = "")
  public Money getCreditLimit() {
    return creditLimit;
  }

  public void setCreditLimit(Money creditLimit) {
    this.creditLimit = creditLimit;
  }

  public ARInquiry creditAvailable(Money creditAvailable) {
    this.creditAvailable = creditAvailable;
    return this;
  }

   /**
   * Get creditAvailable
   * @return creditAvailable
  **/
  @Valid
  @Schema(description = "")
  public Money getCreditAvailable() {
    return creditAvailable;
  }

  public void setCreditAvailable(Money creditAvailable) {
    this.creditAvailable = creditAvailable;
  }

  public ARInquiry cumulativeCreditLimit(Money cumulativeCreditLimit) {
    this.cumulativeCreditLimit = cumulativeCreditLimit;
    return this;
  }

   /**
   * Get cumulativeCreditLimit
   * @return cumulativeCreditLimit
  **/
  @Valid
  @Schema(description = "")
  public Money getCumulativeCreditLimit() {
    return cumulativeCreditLimit;
  }

  public void setCumulativeCreditLimit(Money cumulativeCreditLimit) {
    this.cumulativeCreditLimit = cumulativeCreditLimit;
  }

  public ARInquiry totalDeposit(Money totalDeposit) {
    this.totalDeposit = totalDeposit;
    return this;
  }

   /**
   * Get totalDeposit
   * @return totalDeposit
  **/
  @Valid
  @Schema(description = "")
  public Money getTotalDeposit() {
    return totalDeposit;
  }

  public void setTotalDeposit(Money totalDeposit) {
    this.totalDeposit = totalDeposit;
  }

  public ARInquiry salesDeposit(Money salesDeposit) {
    this.salesDeposit = salesDeposit;
    return this;
  }

   /**
   * Get salesDeposit
   * @return salesDeposit
  **/
  @Valid
  @Schema(description = "")
  public Money getSalesDeposit() {
    return salesDeposit;
  }

  public void setSalesDeposit(Money salesDeposit) {
    this.salesDeposit = salesDeposit;
  }

  public ARInquiry directDeposit(Money directDeposit) {
    this.directDeposit = directDeposit;
    return this;
  }

   /**
   * Get directDeposit
   * @return directDeposit
  **/
  @Valid
  @Schema(description = "")
  public Money getDirectDeposit() {
    return directDeposit;
  }

  public void setDirectDeposit(Money directDeposit) {
    this.directDeposit = directDeposit;
  }

  public ARInquiry totalOrders(Money totalOrders) {
    this.totalOrders = totalOrders;
    return this;
  }

   /**
   * Get totalOrders
   * @return totalOrders
  **/
  @Valid
  @Schema(description = "")
  public Money getTotalOrders() {
    return totalOrders;
  }

  public void setTotalOrders(Money totalOrders) {
    this.totalOrders = totalOrders;
  }

  public ARInquiry salesOrders(Money salesOrders) {
    this.salesOrders = salesOrders;
    return this;
  }

   /**
   * Get salesOrders
   * @return salesOrders
  **/
  @Valid
  @Schema(description = "")
  public Money getSalesOrders() {
    return salesOrders;
  }

  public void setSalesOrders(Money salesOrders) {
    this.salesOrders = salesOrders;
  }

  public ARInquiry directOrders(Money directOrders) {
    this.directOrders = directOrders;
    return this;
  }

   /**
   * Get directOrders
   * @return directOrders
  **/
  @Valid
  @Schema(description = "")
  public Money getDirectOrders() {
    return directOrders;
  }

  public void setDirectOrders(Money directOrders) {
    this.directOrders = directOrders;
  }

  public ARInquiry totalMTD(Money totalMTD) {
    this.totalMTD = totalMTD;
    return this;
  }

   /**
   * Get totalMTD
   * @return totalMTD
  **/
  @Valid
  @Schema(description = "")
  public Money getTotalMTD() {
    return totalMTD;
  }

  public void setTotalMTD(Money totalMTD) {
    this.totalMTD = totalMTD;
  }

  public ARInquiry salesMTD(Money salesMTD) {
    this.salesMTD = salesMTD;
    return this;
  }

   /**
   * Get salesMTD
   * @return salesMTD
  **/
  @Valid
  @Schema(description = "")
  public Money getSalesMTD() {
    return salesMTD;
  }

  public void setSalesMTD(Money salesMTD) {
    this.salesMTD = salesMTD;
  }

  public ARInquiry directMTD(Money directMTD) {
    this.directMTD = directMTD;
    return this;
  }

   /**
   * Get directMTD
   * @return directMTD
  **/
  @Valid
  @Schema(description = "")
  public Money getDirectMTD() {
    return directMTD;
  }

  public void setDirectMTD(Money directMTD) {
    this.directMTD = directMTD;
  }

  public ARInquiry totalYTD(Money totalYTD) {
    this.totalYTD = totalYTD;
    return this;
  }

   /**
   * Get totalYTD
   * @return totalYTD
  **/
  @Valid
  @Schema(description = "")
  public Money getTotalYTD() {
    return totalYTD;
  }

  public void setTotalYTD(Money totalYTD) {
    this.totalYTD = totalYTD;
  }

  public ARInquiry salesYTD(Money salesYTD) {
    this.salesYTD = salesYTD;
    return this;
  }

   /**
   * Get salesYTD
   * @return salesYTD
  **/
  @Valid
  @Schema(description = "")
  public Money getSalesYTD() {
    return salesYTD;
  }

  public void setSalesYTD(Money salesYTD) {
    this.salesYTD = salesYTD;
  }

  public ARInquiry directYTD(Money directYTD) {
    this.directYTD = directYTD;
    return this;
  }

   /**
   * Get directYTD
   * @return directYTD
  **/
  @Valid
  @Schema(description = "")
  public Money getDirectYTD() {
    return directYTD;
  }

  public void setDirectYTD(Money directYTD) {
    this.directYTD = directYTD;
  }

  public ARInquiry monthAvg(Money monthAvg) {
    this.monthAvg = monthAvg;
    return this;
  }

   /**
   * Get monthAvg
   * @return monthAvg
  **/
  @Valid
  @Schema(description = "")
  public Money getMonthAvg() {
    return monthAvg;
  }

  public void setMonthAvg(Money monthAvg) {
    this.monthAvg = monthAvg;
  }

  public ARInquiry monthHigh(Money monthHigh) {
    this.monthHigh = monthHigh;
    return this;
  }

   /**
   * Get monthHigh
   * @return monthHigh
  **/
  @Valid
  @Schema(description = "")
  public Money getMonthHigh() {
    return monthHigh;
  }

  public void setMonthHigh(Money monthHigh) {
    this.monthHigh = monthHigh;
  }

  public ARInquiry paymentDays(String paymentDays) {
    this.paymentDays = paymentDays;
    return this;
  }

   /**
   * Desc: The average of the number of weighted days to pay since the last time the customer had a zero balance.
   * @return paymentDays
  **/
  @Schema(description = "Desc: The average of the number of weighted days to pay since the last time the customer had a zero balance.")
  public String getPaymentDays() {
    return paymentDays;
  }

  public void setPaymentDays(String paymentDays) {
    this.paymentDays = paymentDays;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ARInquiry arInquiry = (ARInquiry) o;
    return Objects.equals(this.updateKey, arInquiry.updateKey) &&
        Objects.equals(this.id, arInquiry.id) &&
        Objects.equals(this.customerId, arInquiry.customerId) &&
        Objects.equals(this.future, arInquiry.future) &&
        Objects.equals(this.current, arInquiry.current) &&
        Objects.equals(this.balance30to61, arInquiry.balance30to61) &&
        Objects.equals(this.balance61to90, arInquiry.balance61to90) &&
        Objects.equals(this.balance91to120, arInquiry.balance91to120) &&
        Objects.equals(this.balanceOver120, arInquiry.balanceOver120) &&
        Objects.equals(this.total, arInquiry.total) &&
        Objects.equals(this.creditManager, arInquiry.creditManager) &&
        Objects.equals(this.terms, arInquiry.terms) &&
        Objects.equals(this.directTerms, arInquiry.directTerms) &&
        Objects.equals(this.creditLimit, arInquiry.creditLimit) &&
        Objects.equals(this.creditAvailable, arInquiry.creditAvailable) &&
        Objects.equals(this.cumulativeCreditLimit, arInquiry.cumulativeCreditLimit) &&
        Objects.equals(this.totalDeposit, arInquiry.totalDeposit) &&
        Objects.equals(this.salesDeposit, arInquiry.salesDeposit) &&
        Objects.equals(this.directDeposit, arInquiry.directDeposit) &&
        Objects.equals(this.totalOrders, arInquiry.totalOrders) &&
        Objects.equals(this.salesOrders, arInquiry.salesOrders) &&
        Objects.equals(this.directOrders, arInquiry.directOrders) &&
        Objects.equals(this.totalMTD, arInquiry.totalMTD) &&
        Objects.equals(this.salesMTD, arInquiry.salesMTD) &&
        Objects.equals(this.directMTD, arInquiry.directMTD) &&
        Objects.equals(this.totalYTD, arInquiry.totalYTD) &&
        Objects.equals(this.salesYTD, arInquiry.salesYTD) &&
        Objects.equals(this.directYTD, arInquiry.directYTD) &&
        Objects.equals(this.monthAvg, arInquiry.monthAvg) &&
        Objects.equals(this.monthHigh, arInquiry.monthHigh) &&
        Objects.equals(this.paymentDays, arInquiry.paymentDays);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateKey, id, customerId, future, current, balance30to61, balance61to90, balance91to120, balanceOver120, total, creditManager, terms, directTerms, creditLimit, creditAvailable, cumulativeCreditLimit, totalDeposit, salesDeposit, directDeposit, totalOrders, salesOrders, directOrders, totalMTD, salesMTD, directMTD, totalYTD, salesYTD, directYTD, monthAvg, monthHigh, paymentDays);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ARInquiry {\n");
    
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    future: ").append(toIndentedString(future)).append("\n");
    sb.append("    current: ").append(toIndentedString(current)).append("\n");
    sb.append("    balance30to61: ").append(toIndentedString(balance30to61)).append("\n");
    sb.append("    balance61to90: ").append(toIndentedString(balance61to90)).append("\n");
    sb.append("    balance91to120: ").append(toIndentedString(balance91to120)).append("\n");
    sb.append("    balanceOver120: ").append(toIndentedString(balanceOver120)).append("\n");
    sb.append("    total: ").append(toIndentedString(total)).append("\n");
    sb.append("    creditManager: ").append(toIndentedString(creditManager)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    directTerms: ").append(toIndentedString(directTerms)).append("\n");
    sb.append("    creditLimit: ").append(toIndentedString(creditLimit)).append("\n");
    sb.append("    creditAvailable: ").append(toIndentedString(creditAvailable)).append("\n");
    sb.append("    cumulativeCreditLimit: ").append(toIndentedString(cumulativeCreditLimit)).append("\n");
    sb.append("    totalDeposit: ").append(toIndentedString(totalDeposit)).append("\n");
    sb.append("    salesDeposit: ").append(toIndentedString(salesDeposit)).append("\n");
    sb.append("    directDeposit: ").append(toIndentedString(directDeposit)).append("\n");
    sb.append("    totalOrders: ").append(toIndentedString(totalOrders)).append("\n");
    sb.append("    salesOrders: ").append(toIndentedString(salesOrders)).append("\n");
    sb.append("    directOrders: ").append(toIndentedString(directOrders)).append("\n");
    sb.append("    totalMTD: ").append(toIndentedString(totalMTD)).append("\n");
    sb.append("    salesMTD: ").append(toIndentedString(salesMTD)).append("\n");
    sb.append("    directMTD: ").append(toIndentedString(directMTD)).append("\n");
    sb.append("    totalYTD: ").append(toIndentedString(totalYTD)).append("\n");
    sb.append("    salesYTD: ").append(toIndentedString(salesYTD)).append("\n");
    sb.append("    directYTD: ").append(toIndentedString(directYTD)).append("\n");
    sb.append("    monthAvg: ").append(toIndentedString(monthAvg)).append("\n");
    sb.append("    monthHigh: ").append(toIndentedString(monthHigh)).append("\n");
    sb.append("    paymentDays: ").append(toIndentedString(paymentDays)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
