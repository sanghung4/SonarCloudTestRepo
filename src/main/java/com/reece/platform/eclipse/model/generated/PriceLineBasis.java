/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse PriceLineBasis.
 */
@Schema(description = "Object representing an Eclipse PriceLineBasis.")

public class PriceLineBasis {
  @JsonProperty("basisName")
  private String basisName = null;

  @JsonProperty("basisViewLevel")
  private Integer basisViewLevel = null;

  @JsonProperty("basisUomQty")
  private Integer basisUomQty = null;

  @JsonProperty("basisUom")
  private String basisUom = null;

  @JsonProperty("basisCurrencyCode")
  private String basisCurrencyCode = null;

  @JsonProperty("basisUseTildeSheet")
  private Boolean basisUseTildeSheet = null;

  public PriceLineBasis basisName(String basisName) {
    this.basisName = basisName;
    return this;
  }

   /**
   * Desc: The PriceLineBasis BasisName  File: PRICE.LINE  Attr: 2,x
   * @return basisName
  **/
  @Schema(description = "Desc: The PriceLineBasis BasisName  File: PRICE.LINE  Attr: 2,x")
  public String getBasisName() {
    return basisName;
  }

  public void setBasisName(String basisName) {
    this.basisName = basisName;
  }

  public PriceLineBasis basisViewLevel(Integer basisViewLevel) {
    this.basisViewLevel = basisViewLevel;
    return this;
  }

   /**
   * Desc: The PriceLineBasis BasisViewLevel  File: PRICE.LINE  Attr: 4,x
   * @return basisViewLevel
  **/
  @Schema(description = "Desc: The PriceLineBasis BasisViewLevel  File: PRICE.LINE  Attr: 4,x")
  public Integer getBasisViewLevel() {
    return basisViewLevel;
  }

  public void setBasisViewLevel(Integer basisViewLevel) {
    this.basisViewLevel = basisViewLevel;
  }

  public PriceLineBasis basisUomQty(Integer basisUomQty) {
    this.basisUomQty = basisUomQty;
    return this;
  }

   /**
   * Desc: The PriceLineBasis BasisUomQty  File: PRICE.LINE  Attr: 8,x
   * @return basisUomQty
  **/
  @Schema(description = "Desc: The PriceLineBasis BasisUomQty  File: PRICE.LINE  Attr: 8,x")
  public Integer getBasisUomQty() {
    return basisUomQty;
  }

  public void setBasisUomQty(Integer basisUomQty) {
    this.basisUomQty = basisUomQty;
  }

  public PriceLineBasis basisUom(String basisUom) {
    this.basisUom = basisUom;
    return this;
  }

   /**
   * Desc: The PriceLineBasis BasisUom  File: PRICE.LINE  Attr: 9,x
   * @return basisUom
  **/
  @Schema(description = "Desc: The PriceLineBasis BasisUom  File: PRICE.LINE  Attr: 9,x")
  public String getBasisUom() {
    return basisUom;
  }

  public void setBasisUom(String basisUom) {
    this.basisUom = basisUom;
  }

  public PriceLineBasis basisCurrencyCode(String basisCurrencyCode) {
    this.basisCurrencyCode = basisCurrencyCode;
    return this;
  }

   /**
   * Desc: The PriceLineBasis BasisCurrencyCode  File: PRICE.LINE  Attr: 19,x
   * @return basisCurrencyCode
  **/
  @Schema(description = "Desc: The PriceLineBasis BasisCurrencyCode  File: PRICE.LINE  Attr: 19,x")
  public String getBasisCurrencyCode() {
    return basisCurrencyCode;
  }

  public void setBasisCurrencyCode(String basisCurrencyCode) {
    this.basisCurrencyCode = basisCurrencyCode;
  }

  public PriceLineBasis basisUseTildeSheet(Boolean basisUseTildeSheet) {
    this.basisUseTildeSheet = basisUseTildeSheet;
    return this;
  }

   /**
   * Desc: The PriceLineBasis BasisUseTildeSheet flag  File: PRICE.LINE  Attr: 29,x
   * @return basisUseTildeSheet
  **/
  @Schema(description = "Desc: The PriceLineBasis BasisUseTildeSheet flag  File: PRICE.LINE  Attr: 29,x")
  public Boolean isBasisUseTildeSheet() {
    return basisUseTildeSheet;
  }

  public void setBasisUseTildeSheet(Boolean basisUseTildeSheet) {
    this.basisUseTildeSheet = basisUseTildeSheet;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceLineBasis priceLineBasis = (PriceLineBasis) o;
    return Objects.equals(this.basisName, priceLineBasis.basisName) &&
        Objects.equals(this.basisViewLevel, priceLineBasis.basisViewLevel) &&
        Objects.equals(this.basisUomQty, priceLineBasis.basisUomQty) &&
        Objects.equals(this.basisUom, priceLineBasis.basisUom) &&
        Objects.equals(this.basisCurrencyCode, priceLineBasis.basisCurrencyCode) &&
        Objects.equals(this.basisUseTildeSheet, priceLineBasis.basisUseTildeSheet);
  }

  @Override
  public int hashCode() {
    return Objects.hash(basisName, basisViewLevel, basisUomQty, basisUom, basisCurrencyCode, basisUseTildeSheet);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceLineBasis {\n");
    
    sb.append("    basisName: ").append(toIndentedString(basisName)).append("\n");
    sb.append("    basisViewLevel: ").append(toIndentedString(basisViewLevel)).append("\n");
    sb.append("    basisUomQty: ").append(toIndentedString(basisUomQty)).append("\n");
    sb.append("    basisUom: ").append(toIndentedString(basisUom)).append("\n");
    sb.append("    basisCurrencyCode: ").append(toIndentedString(basisCurrencyCode)).append("\n");
    sb.append("    basisUseTildeSheet: ").append(toIndentedString(basisUseTildeSheet)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
