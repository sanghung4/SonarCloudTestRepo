/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.DocumentImagingAttachmentType;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Link to record in Eclipse
 */
@Schema(description = "Link to record in Eclipse")

public class DocumentImagingFileLink {
  @JsonProperty("linkType")
  private DocumentImagingAttachmentType linkType = null;

  @JsonProperty("linkId")
  private String linkId = null;

  @JsonProperty("linkDisabled")
  private Boolean linkDisabled = null;

  @JsonProperty("allLinksDisabled")
  private Boolean allLinksDisabled = null;

  public DocumentImagingFileLink linkType(DocumentImagingAttachmentType linkType) {
    this.linkType = linkType;
    return this;
  }

   /**
   * Get linkType
   * @return linkType
  **/
  @Valid
  @Schema(description = "")
  public DocumentImagingAttachmentType getLinkType() {
    return linkType;
  }

  public void setLinkType(DocumentImagingAttachmentType linkType) {
    this.linkType = linkType;
  }

  public DocumentImagingFileLink linkId(String linkId) {
    this.linkId = linkId;
    return this;
  }

   /**
   * Desc: The DocumentImagingFileLink LinkId  File: IMG.XREF  Attr: 10,x
   * @return linkId
  **/
  @Schema(description = "Desc: The DocumentImagingFileLink LinkId  File: IMG.XREF  Attr: 10,x")
  public String getLinkId() {
    return linkId;
  }

  public void setLinkId(String linkId) {
    this.linkId = linkId;
  }

  public DocumentImagingFileLink linkDisabled(Boolean linkDisabled) {
    this.linkDisabled = linkDisabled;
    return this;
  }

   /**
   * Desc: Flag indicating the link has been deleted, but is preserved for historical reasons  File: IMG.XREF  Attr: 10,x
   * @return linkDisabled
  **/
  @Schema(description = "Desc: Flag indicating the link has been deleted, but is preserved for historical reasons  File: IMG.XREF  Attr: 10,x")
  public Boolean isLinkDisabled() {
    return linkDisabled;
  }

  public void setLinkDisabled(Boolean linkDisabled) {
    this.linkDisabled = linkDisabled;
  }

  public DocumentImagingFileLink allLinksDisabled(Boolean allLinksDisabled) {
    this.allLinksDisabled = allLinksDisabled;
    return this;
  }

   /**
   * Desc: Flag indicating that this link and all others are disabled, but preserved for historical reasons  File: IMG.XREF  Attr: 10,x
   * @return allLinksDisabled
  **/
  @Schema(description = "Desc: Flag indicating that this link and all others are disabled, but preserved for historical reasons  File: IMG.XREF  Attr: 10,x")
  public Boolean isAllLinksDisabled() {
    return allLinksDisabled;
  }

  public void setAllLinksDisabled(Boolean allLinksDisabled) {
    this.allLinksDisabled = allLinksDisabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DocumentImagingFileLink documentImagingFileLink = (DocumentImagingFileLink) o;
    return Objects.equals(this.linkType, documentImagingFileLink.linkType) &&
        Objects.equals(this.linkId, documentImagingFileLink.linkId) &&
        Objects.equals(this.linkDisabled, documentImagingFileLink.linkDisabled) &&
        Objects.equals(this.allLinksDisabled, documentImagingFileLink.allLinksDisabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(linkType, linkId, linkDisabled, allLinksDisabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DocumentImagingFileLink {\n");
    
    sb.append("    linkType: ").append(toIndentedString(linkType)).append("\n");
    sb.append("    linkId: ").append(toIndentedString(linkId)).append("\n");
    sb.append("    linkDisabled: ").append(toIndentedString(linkDisabled)).append("\n");
    sb.append("    allLinksDisabled: ").append(toIndentedString(allLinksDisabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
