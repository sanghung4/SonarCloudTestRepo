/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.ShippingManifestBlockedTime;
import com.reece.platform.eclipse.model.generated.ShippingManifestStop;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse ShippingManifest.
 */
@Schema(description = "Object representing an Eclipse ShippingManifest.")

public class ShippingManifest {
  @JsonProperty("updateKey")
  private String updateKey = null;

  @JsonProperty("id")
  private String id = null;

  @JsonProperty("shipViaId")
  private String shipViaId = null;

  @JsonProperty("shipDate")
  private LocalDateTime shipDate = null;

  @JsonProperty("branchId")
  private String branchId = null;

  @JsonProperty("startTime")
  private LocalDateTime startTime = null;

  @JsonProperty("firstDeliveryTime")
  private LocalDateTime firstDeliveryTime = null;

  @JsonProperty("deliveryIntervalMinutes")
  private Integer deliveryIntervalMinutes = null;

  @JsonProperty("closedFlag")
  private Boolean closedFlag = null;

  @JsonProperty("driverUserId")
  private String driverUserId = null;

  @JsonProperty("lockedFlag")
  private Boolean lockedFlag = null;

  @JsonProperty("lastDriverUpdateDateTime")
  private LocalDateTime lastDriverUpdateDateTime = null;

  @JsonProperty("shipViaPriority")
  private String shipViaPriority = null;

  @JsonProperty("blockedTimes")
  private List<ShippingManifestBlockedTime> blockedTimes = null;

  @JsonProperty("stops")
  private List<ShippingManifestStop> stops = null;

  public ShippingManifest updateKey(String updateKey) {
    this.updateKey = updateKey;
    return this;
  }

   /**
   * Update key to handle concurrency during updates within Eclipse
   * @return updateKey
  **/
  @Schema(description = "Update key to handle concurrency during updates within Eclipse")
  public String getUpdateKey() {
    return updateKey;
  }

  public void setUpdateKey(String updateKey) {
    this.updateKey = updateKey;
  }

  public ShippingManifest id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Eclipse ID for the record
   * @return id
  **/
  @Schema(description = "Eclipse ID for the record")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ShippingManifest shipViaId(String shipViaId) {
    this.shipViaId = shipViaId;
    return this;
  }

   /**
   * Desc: The ShippingManifest ShipViaId  File: MANIFESTS  Attr: 1
   * @return shipViaId
  **/
  @Schema(description = "Desc: The ShippingManifest ShipViaId  File: MANIFESTS  Attr: 1")
  public String getShipViaId() {
    return shipViaId;
  }

  public void setShipViaId(String shipViaId) {
    this.shipViaId = shipViaId;
  }

  public ShippingManifest shipDate(LocalDateTime shipDate) {
    this.shipDate = shipDate;
    return this;
  }

   /**
   * Desc: The ShippingManifest ShipDate  File: MANIFESTS  Attr: 2
   * @return shipDate
  **/
  @Valid
  @Schema(description = "Desc: The ShippingManifest ShipDate  File: MANIFESTS  Attr: 2")
  public LocalDateTime getShipDate() {
    return shipDate;
  }

  public void setShipDate(LocalDateTime shipDate) {
    this.shipDate = shipDate;
  }

  public ShippingManifest branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Desc: The ShippingManifest BranchId  File: MANIFESTS  Attr: 3
   * @return branchId
  **/
  @Schema(description = "Desc: The ShippingManifest BranchId  File: MANIFESTS  Attr: 3")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public ShippingManifest startTime(LocalDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

   /**
   * Desc: The ShippingManifest StartTime  File: MANIFESTS  Attr: 4
   * @return startTime
  **/
  @Valid
  @Schema(description = "Desc: The ShippingManifest StartTime  File: MANIFESTS  Attr: 4")
  public LocalDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(LocalDateTime startTime) {
    this.startTime = startTime;
  }

  public ShippingManifest firstDeliveryTime(LocalDateTime firstDeliveryTime) {
    this.firstDeliveryTime = firstDeliveryTime;
    return this;
  }

   /**
   * Desc: The ShippingManifest FirstDeliveryTime  File: MANIFESTS  Attr: 5
   * @return firstDeliveryTime
  **/
  @Valid
  @Schema(description = "Desc: The ShippingManifest FirstDeliveryTime  File: MANIFESTS  Attr: 5")
  public LocalDateTime getFirstDeliveryTime() {
    return firstDeliveryTime;
  }

  public void setFirstDeliveryTime(LocalDateTime firstDeliveryTime) {
    this.firstDeliveryTime = firstDeliveryTime;
  }

  public ShippingManifest deliveryIntervalMinutes(Integer deliveryIntervalMinutes) {
    this.deliveryIntervalMinutes = deliveryIntervalMinutes;
    return this;
  }

   /**
   * Desc: The ShippingManifest DeliveryIntervalMinutes  File: MANIFESTS  Attr: 6
   * @return deliveryIntervalMinutes
  **/
  @Schema(description = "Desc: The ShippingManifest DeliveryIntervalMinutes  File: MANIFESTS  Attr: 6")
  public Integer getDeliveryIntervalMinutes() {
    return deliveryIntervalMinutes;
  }

  public void setDeliveryIntervalMinutes(Integer deliveryIntervalMinutes) {
    this.deliveryIntervalMinutes = deliveryIntervalMinutes;
  }

  public ShippingManifest closedFlag(Boolean closedFlag) {
    this.closedFlag = closedFlag;
    return this;
  }

   /**
   * Desc: The ShippingManifest ClosedFlag  File: MANIFESTS  Attr: 7
   * @return closedFlag
  **/
  @Schema(description = "Desc: The ShippingManifest ClosedFlag  File: MANIFESTS  Attr: 7")
  public Boolean isClosedFlag() {
    return closedFlag;
  }

  public void setClosedFlag(Boolean closedFlag) {
    this.closedFlag = closedFlag;
  }

  public ShippingManifest driverUserId(String driverUserId) {
    this.driverUserId = driverUserId;
    return this;
  }

   /**
   * Desc: The ShippingManifest DriverUserId  File: MANIFESTS  Attr: 8
   * @return driverUserId
  **/
  @Schema(description = "Desc: The ShippingManifest DriverUserId  File: MANIFESTS  Attr: 8")
  public String getDriverUserId() {
    return driverUserId;
  }

  public void setDriverUserId(String driverUserId) {
    this.driverUserId = driverUserId;
  }

  public ShippingManifest lockedFlag(Boolean lockedFlag) {
    this.lockedFlag = lockedFlag;
    return this;
  }

   /**
   * Desc: The ShippingManifest LockedFlag  File: MANIFESTS  Attr: 17
   * @return lockedFlag
  **/
  @Schema(description = "Desc: The ShippingManifest LockedFlag  File: MANIFESTS  Attr: 17")
  public Boolean isLockedFlag() {
    return lockedFlag;
  }

  public void setLockedFlag(Boolean lockedFlag) {
    this.lockedFlag = lockedFlag;
  }

  public ShippingManifest lastDriverUpdateDateTime(LocalDateTime lastDriverUpdateDateTime) {
    this.lastDriverUpdateDateTime = lastDriverUpdateDateTime;
    return this;
  }

   /**
   * Desc: The ShippingManifest LastDriverUpdateTime  File: MANIFESTS
   * @return lastDriverUpdateDateTime
  **/
  @Valid
  @Schema(description = "Desc: The ShippingManifest LastDriverUpdateTime  File: MANIFESTS")
  public LocalDateTime getLastDriverUpdateDateTime() {
    return lastDriverUpdateDateTime;
  }

  public void setLastDriverUpdateDateTime(LocalDateTime lastDriverUpdateDateTime) {
    this.lastDriverUpdateDateTime = lastDriverUpdateDateTime;
  }

  public ShippingManifest shipViaPriority(String shipViaPriority) {
    this.shipViaPriority = shipViaPriority;
    return this;
  }

   /**
   * Desc: The ShippingManifest ShipViaPriority  File: MANIFESTS  Attr: 40
   * @return shipViaPriority
  **/
  @Schema(description = "Desc: The ShippingManifest ShipViaPriority  File: MANIFESTS  Attr: 40")
  public String getShipViaPriority() {
    return shipViaPriority;
  }

  public void setShipViaPriority(String shipViaPriority) {
    this.shipViaPriority = shipViaPriority;
  }

  public ShippingManifest blockedTimes(List<ShippingManifestBlockedTime> blockedTimes) {
    this.blockedTimes = blockedTimes;
    return this;
  }

  public ShippingManifest addBlockedTimesItem(ShippingManifestBlockedTime blockedTimesItem) {
    if (this.blockedTimes == null) {
      this.blockedTimes = new ArrayList<>();
    }
    this.blockedTimes.add(blockedTimesItem);
    return this;
  }

   /**
   * A list of ShippingManifest BlockedTimes
   * @return blockedTimes
  **/
  @Valid
  @Schema(description = "A list of ShippingManifest BlockedTimes")
  public List<ShippingManifestBlockedTime> getBlockedTimes() {
    return blockedTimes;
  }

  public void setBlockedTimes(List<ShippingManifestBlockedTime> blockedTimes) {
    this.blockedTimes = blockedTimes;
  }

  public ShippingManifest stops(List<ShippingManifestStop> stops) {
    this.stops = stops;
    return this;
  }

  public ShippingManifest addStopsItem(ShippingManifestStop stopsItem) {
    if (this.stops == null) {
      this.stops = new ArrayList<>();
    }
    this.stops.add(stopsItem);
    return this;
  }

   /**
   * A list of ShippingManifest Stops
   * @return stops
  **/
  @Valid
  @Schema(description = "A list of ShippingManifest Stops")
  public List<ShippingManifestStop> getStops() {
    return stops;
  }

  public void setStops(List<ShippingManifestStop> stops) {
    this.stops = stops;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingManifest shippingManifest = (ShippingManifest) o;
    return Objects.equals(this.updateKey, shippingManifest.updateKey) &&
        Objects.equals(this.id, shippingManifest.id) &&
        Objects.equals(this.shipViaId, shippingManifest.shipViaId) &&
        Objects.equals(this.shipDate, shippingManifest.shipDate) &&
        Objects.equals(this.branchId, shippingManifest.branchId) &&
        Objects.equals(this.startTime, shippingManifest.startTime) &&
        Objects.equals(this.firstDeliveryTime, shippingManifest.firstDeliveryTime) &&
        Objects.equals(this.deliveryIntervalMinutes, shippingManifest.deliveryIntervalMinutes) &&
        Objects.equals(this.closedFlag, shippingManifest.closedFlag) &&
        Objects.equals(this.driverUserId, shippingManifest.driverUserId) &&
        Objects.equals(this.lockedFlag, shippingManifest.lockedFlag) &&
        Objects.equals(this.lastDriverUpdateDateTime, shippingManifest.lastDriverUpdateDateTime) &&
        Objects.equals(this.shipViaPriority, shippingManifest.shipViaPriority) &&
        Objects.equals(this.blockedTimes, shippingManifest.blockedTimes) &&
        Objects.equals(this.stops, shippingManifest.stops);
  }

  @Override
  public int hashCode() {
    return Objects.hash(updateKey, id, shipViaId, shipDate, branchId, startTime, firstDeliveryTime, deliveryIntervalMinutes, closedFlag, driverUserId, lockedFlag, lastDriverUpdateDateTime, shipViaPriority, blockedTimes, stops);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingManifest {\n");
    
    sb.append("    updateKey: ").append(toIndentedString(updateKey)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    shipViaId: ").append(toIndentedString(shipViaId)).append("\n");
    sb.append("    shipDate: ").append(toIndentedString(shipDate)).append("\n");
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    firstDeliveryTime: ").append(toIndentedString(firstDeliveryTime)).append("\n");
    sb.append("    deliveryIntervalMinutes: ").append(toIndentedString(deliveryIntervalMinutes)).append("\n");
    sb.append("    closedFlag: ").append(toIndentedString(closedFlag)).append("\n");
    sb.append("    driverUserId: ").append(toIndentedString(driverUserId)).append("\n");
    sb.append("    lockedFlag: ").append(toIndentedString(lockedFlag)).append("\n");
    sb.append("    lastDriverUpdateDateTime: ").append(toIndentedString(lastDriverUpdateDateTime)).append("\n");
    sb.append("    shipViaPriority: ").append(toIndentedString(shipViaPriority)).append("\n");
    sb.append("    blockedTimes: ").append(toIndentedString(blockedTimes)).append("\n");
    sb.append("    stops: ").append(toIndentedString(stops)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
