/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.PriceMatrixCostOvrdMode;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse PriceMatrixCostOverride.
 */
@Schema(description = "Object representing an Eclipse PriceMatrixCostOverride.")

public class PriceMatrixCostOverride {
  @JsonProperty("mode")
  private PriceMatrixCostOvrdMode mode = null;

  @JsonProperty("effectiveDate")
  private LocalDateTime effectiveDate = null;

  @JsonProperty("basis")
  private String basis = null;

  @JsonProperty("formula")
  private String formula = null;

  @JsonProperty("code")
  private String code = null;

  public PriceMatrixCostOverride mode(PriceMatrixCostOvrdMode mode) {
    this.mode = mode;
    return this;
  }

   /**
   * Get mode
   * @return mode
  **/
  @Valid
  @Schema(description = "")
  public PriceMatrixCostOvrdMode getMode() {
    return mode;
  }

  public void setMode(PriceMatrixCostOvrdMode mode) {
    this.mode = mode;
  }

  public PriceMatrixCostOverride effectiveDate(LocalDateTime effectiveDate) {
    this.effectiveDate = effectiveDate;
    return this;
  }

   /**
   * Desc: The PriceMatrix CostOverrideEffectiveDate  File: MATRIX  Attr: 20,x
   * @return effectiveDate
  **/
  @Valid
  @Schema(description = "Desc: The PriceMatrix CostOverrideEffectiveDate  File: MATRIX  Attr: 20,x")
  public LocalDateTime getEffectiveDate() {
    return effectiveDate;
  }

  public void setEffectiveDate(LocalDateTime effectiveDate) {
    this.effectiveDate = effectiveDate;
  }

  public PriceMatrixCostOverride basis(String basis) {
    this.basis = basis;
    return this;
  }

   /**
   * Desc: The PriceMatrix CostOverrideBasis  File: MATRIX  Attr: 12,x
   * @return basis
  **/
  @Schema(description = "Desc: The PriceMatrix CostOverrideBasis  File: MATRIX  Attr: 12,x")
  public String getBasis() {
    return basis;
  }

  public void setBasis(String basis) {
    this.basis = basis;
  }

  public PriceMatrixCostOverride formula(String formula) {
    this.formula = formula;
    return this;
  }

   /**
   * Desc: The PriceMatrix CostOverrideFormula  File: MATRIX  Attr: 13,x
   * @return formula
  **/
  @Schema(description = "Desc: The PriceMatrix CostOverrideFormula  File: MATRIX  Attr: 13,x")
  public String getFormula() {
    return formula;
  }

  public void setFormula(String formula) {
    this.formula = formula;
  }

  public PriceMatrixCostOverride code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Desc: The PriceMatrix RebateVenCostOverrideCode  File: MATRIX  Attr: 24,x
   * @return code
  **/
  @Schema(description = "Desc: The PriceMatrix RebateVenCostOverrideCode  File: MATRIX  Attr: 24,x")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PriceMatrixCostOverride priceMatrixCostOverride = (PriceMatrixCostOverride) o;
    return Objects.equals(this.mode, priceMatrixCostOverride.mode) &&
        Objects.equals(this.effectiveDate, priceMatrixCostOverride.effectiveDate) &&
        Objects.equals(this.basis, priceMatrixCostOverride.basis) &&
        Objects.equals(this.formula, priceMatrixCostOverride.formula) &&
        Objects.equals(this.code, priceMatrixCostOverride.code);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mode, effectiveDate, basis, formula, code);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PriceMatrixCostOverride {\n");
    
    sb.append("    mode: ").append(toIndentedString(mode)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    basis: ").append(toIndentedString(basis)).append("\n");
    sb.append("    formula: ").append(toIndentedString(formula)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
