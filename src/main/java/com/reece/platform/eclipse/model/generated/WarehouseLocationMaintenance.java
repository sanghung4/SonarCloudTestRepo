/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.WarehouseLocationMaintenanceLocations;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse WarehouseLocation.
 */
@Schema(description = "Object representing an Eclipse WarehouseLocation.")

public class WarehouseLocationMaintenance {
  @JsonProperty("branchId")
  private String branchId = null;

  @JsonProperty("productId")
  private Integer productId = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("userId")
  private String userId = null;

  @JsonProperty("oldLocations")
  private List<WarehouseLocationMaintenanceLocations> oldLocations = new ArrayList<>();

  @JsonProperty("newLocations")
  private List<WarehouseLocationMaintenanceLocations> newLocations = new ArrayList<>();

  @JsonProperty("warehouseUpdateKey")
  private String warehouseUpdateKey = null;

  @JsonProperty("isLot")
  private String isLot = null;

  @JsonProperty("changeTaggedQty")
  private Boolean changeTaggedQty = null;

  @JsonProperty("breakTag")
  private Boolean breakTag = null;

  @JsonProperty("changeTotalQty")
  private Boolean changeTotalQty = null;

  @JsonProperty("updateCounter")
  private Integer updateCounter = null;

  @JsonProperty("adjustmentOrderId")
  private String adjustmentOrderId = null;

  public WarehouseLocationMaintenance branchId(String branchId) {
    this.branchId = branchId;
    return this;
  }

   /**
   * Branch ID
   * @return branchId
  **/
  @NotNull
  @Schema(required = true, description = "Branch ID")
  public String getBranchId() {
    return branchId;
  }

  public void setBranchId(String branchId) {
    this.branchId = branchId;
  }

  public WarehouseLocationMaintenance productId(Integer productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Product ID
   * @return productId
  **/
  @NotNull
  @Schema(required = true, description = "Product ID")
  public Integer getProductId() {
    return productId;
  }

  public void setProductId(Integer productId) {
    this.productId = productId;
  }

  public WarehouseLocationMaintenance description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Product Description
   * @return description
  **/
  @Schema(description = "Product Description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public WarehouseLocationMaintenance userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * User ID
   * @return userId
  **/
  @NotNull
  @Schema(required = true, description = "User ID")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public WarehouseLocationMaintenance oldLocations(List<WarehouseLocationMaintenanceLocations> oldLocations) {
    this.oldLocations = oldLocations;
    return this;
  }

  public WarehouseLocationMaintenance addOldLocationsItem(WarehouseLocationMaintenanceLocations oldLocationsItem) {
    this.oldLocations.add(oldLocationsItem);
    return this;
  }

   /**
   * Old Locations and their respective data
   * @return oldLocations
  **/
  @NotNull
  @Valid
  @Schema(required = true, description = "Old Locations and their respective data")
  public List<WarehouseLocationMaintenanceLocations> getOldLocations() {
    return oldLocations;
  }

  public void setOldLocations(List<WarehouseLocationMaintenanceLocations> oldLocations) {
    this.oldLocations = oldLocations;
  }

  public WarehouseLocationMaintenance newLocations(List<WarehouseLocationMaintenanceLocations> newLocations) {
    this.newLocations = newLocations;
    return this;
  }

  public WarehouseLocationMaintenance addNewLocationsItem(WarehouseLocationMaintenanceLocations newLocationsItem) {
    this.newLocations.add(newLocationsItem);
    return this;
  }

   /**
   * New Locations and their respective data
   * @return newLocations
  **/
  @NotNull
  @Valid
  @Schema(required = true, description = "New Locations and their respective data")
  public List<WarehouseLocationMaintenanceLocations> getNewLocations() {
    return newLocations;
  }

  public void setNewLocations(List<WarehouseLocationMaintenanceLocations> newLocations) {
    this.newLocations = newLocations;
  }

  public WarehouseLocationMaintenance warehouseUpdateKey(String warehouseUpdateKey) {
    this.warehouseUpdateKey = warehouseUpdateKey;
    return this;
  }

   /**
   * Update Key
   * @return warehouseUpdateKey
  **/
  @NotNull
  @Schema(required = true, description = "Update Key")
  public String getWarehouseUpdateKey() {
    return warehouseUpdateKey;
  }

  public void setWarehouseUpdateKey(String warehouseUpdateKey) {
    this.warehouseUpdateKey = warehouseUpdateKey;
  }

  public WarehouseLocationMaintenance isLot(String isLot) {
    this.isLot = isLot;
    return this;
  }

   /**
   * Identify if the item is lot (&#x27;L&#x27;) or detail lot (&#x27;D&#x27;), otherwise return none (&#x27;N&#x27;)
   * @return isLot
  **/
  @Schema(description = "Identify if the item is lot ('L') or detail lot ('D'), otherwise return none ('N')")
  public String getIsLot() {
    return isLot;
  }

  public void setIsLot(String isLot) {
    this.isLot = isLot;
  }

  public WarehouseLocationMaintenance changeTaggedQty(Boolean changeTaggedQty) {
    this.changeTaggedQty = changeTaggedQty;
    return this;
  }

   /**
   * Send this as true to authorize changes in tagged quantities.
   * @return changeTaggedQty
  **/
  @Schema(description = "Send this as true to authorize changes in tagged quantities.")
  public Boolean isChangeTaggedQty() {
    return changeTaggedQty;
  }

  public void setChangeTaggedQty(Boolean changeTaggedQty) {
    this.changeTaggedQty = changeTaggedQty;
  }

  public WarehouseLocationMaintenance breakTag(Boolean breakTag) {
    this.breakTag = breakTag;
    return this;
  }

   /**
   * Send this as true to authorize breaking tags.
   * @return breakTag
  **/
  @Schema(description = "Send this as true to authorize breaking tags.")
  public Boolean isBreakTag() {
    return breakTag;
  }

  public void setBreakTag(Boolean breakTag) {
    this.breakTag = breakTag;
  }

  public WarehouseLocationMaintenance changeTotalQty(Boolean changeTotalQty) {
    this.changeTotalQty = changeTotalQty;
    return this;
  }

   /**
   * Send this as true to authorize modifications on the total on-hand quantity.
   * @return changeTotalQty
  **/
  @Schema(description = "Send this as true to authorize modifications on the total on-hand quantity.")
  public Boolean isChangeTotalQty() {
    return changeTotalQty;
  }

  public void setChangeTotalQty(Boolean changeTotalQty) {
    this.changeTotalQty = changeTotalQty;
  }

  public WarehouseLocationMaintenance updateCounter(Integer updateCounter) {
    this.updateCounter = updateCounter;
    return this;
  }

   /**
   * Update Counter
   * @return updateCounter
  **/
  @Schema(description = "Update Counter")
  public Integer getUpdateCounter() {
    return updateCounter;
  }

  public void setUpdateCounter(Integer updateCounter) {
    this.updateCounter = updateCounter;
  }

  public WarehouseLocationMaintenance adjustmentOrderId(String adjustmentOrderId) {
    this.adjustmentOrderId = adjustmentOrderId;
    return this;
  }

   /**
   * Adjustment Order ID
   * @return adjustmentOrderId
  **/
  @Schema(description = "Adjustment Order ID")
  public String getAdjustmentOrderId() {
    return adjustmentOrderId;
  }

  public void setAdjustmentOrderId(String adjustmentOrderId) {
    this.adjustmentOrderId = adjustmentOrderId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WarehouseLocationMaintenance warehouseLocationMaintenance = (WarehouseLocationMaintenance) o;
    return Objects.equals(this.branchId, warehouseLocationMaintenance.branchId) &&
        Objects.equals(this.productId, warehouseLocationMaintenance.productId) &&
        Objects.equals(this.description, warehouseLocationMaintenance.description) &&
        Objects.equals(this.userId, warehouseLocationMaintenance.userId) &&
        Objects.equals(this.oldLocations, warehouseLocationMaintenance.oldLocations) &&
        Objects.equals(this.newLocations, warehouseLocationMaintenance.newLocations) &&
        Objects.equals(this.warehouseUpdateKey, warehouseLocationMaintenance.warehouseUpdateKey) &&
        Objects.equals(this.isLot, warehouseLocationMaintenance.isLot) &&
        Objects.equals(this.changeTaggedQty, warehouseLocationMaintenance.changeTaggedQty) &&
        Objects.equals(this.breakTag, warehouseLocationMaintenance.breakTag) &&
        Objects.equals(this.changeTotalQty, warehouseLocationMaintenance.changeTotalQty) &&
        Objects.equals(this.updateCounter, warehouseLocationMaintenance.updateCounter) &&
        Objects.equals(this.adjustmentOrderId, warehouseLocationMaintenance.adjustmentOrderId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(branchId, productId, description, userId, oldLocations, newLocations, warehouseUpdateKey, isLot, changeTaggedQty, breakTag, changeTotalQty, updateCounter, adjustmentOrderId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WarehouseLocationMaintenance {\n");
    
    sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    oldLocations: ").append(toIndentedString(oldLocations)).append("\n");
    sb.append("    newLocations: ").append(toIndentedString(newLocations)).append("\n");
    sb.append("    warehouseUpdateKey: ").append(toIndentedString(warehouseUpdateKey)).append("\n");
    sb.append("    isLot: ").append(toIndentedString(isLot)).append("\n");
    sb.append("    changeTaggedQty: ").append(toIndentedString(changeTaggedQty)).append("\n");
    sb.append("    breakTag: ").append(toIndentedString(breakTag)).append("\n");
    sb.append("    changeTotalQty: ").append(toIndentedString(changeTotalQty)).append("\n");
    sb.append("    updateCounter: ").append(toIndentedString(updateCounter)).append("\n");
    sb.append("    adjustmentOrderId: ").append(toIndentedString(adjustmentOrderId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
