/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.model.generated;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.reece.platform.eclipse.model.generated.Money;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDateTime;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Object representing an Eclipse PayableCheck.
 */
@Schema(description = "Object representing an Eclipse PayableCheck.")

public class PayableCheck {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("checkDate")
  private LocalDateTime checkDate = null;

  @JsonProperty("checkAmount")
  private Money checkAmount = null;

  @JsonProperty("checkNumber")
  private String checkNumber = null;

  @JsonProperty("bankID")
  private String bankID = null;

  public PayableCheck id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Desc: The ID for a Check made to a Payable
   * @return id
  **/
  @Schema(description = "Desc: The ID for a Check made to a Payable")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PayableCheck checkDate(LocalDateTime checkDate) {
    this.checkDate = checkDate;
    return this;
  }

   /**
   * Desc: The Check Date   File: LEDGER (Disburstment)  Attr: 9
   * @return checkDate
  **/
  @Valid
  @Schema(description = "Desc: The Check Date   File: LEDGER (Disburstment)  Attr: 9")
  public LocalDateTime getCheckDate() {
    return checkDate;
  }

  public void setCheckDate(LocalDateTime checkDate) {
    this.checkDate = checkDate;
  }

  public PayableCheck checkAmount(Money checkAmount) {
    this.checkAmount = checkAmount;
    return this;
  }

   /**
   * Get checkAmount
   * @return checkAmount
  **/
  @Valid
  @Schema(description = "")
  public Money getCheckAmount() {
    return checkAmount;
  }

  public void setCheckAmount(Money checkAmount) {
    this.checkAmount = checkAmount;
  }

  public PayableCheck checkNumber(String checkNumber) {
    this.checkNumber = checkNumber;
    return this;
  }

   /**
   * Desc: The Check Number  File: LEDGER (Disburstment)  Attr: 13 Right to &#x27;~&#x27;
   * @return checkNumber
  **/
  @Schema(description = "Desc: The Check Number  File: LEDGER (Disburstment)  Attr: 13 Right to '~'")
  public String getCheckNumber() {
    return checkNumber;
  }

  public void setCheckNumber(String checkNumber) {
    this.checkNumber = checkNumber;
  }

  public PayableCheck bankID(String bankID) {
    this.bankID = bankID;
    return this;
  }

   /**
   * Desc: The Check Bank ID  File: LEDGER (Disburstment)  Attr: 13 Left to &#x27;~&#x27;
   * @return bankID
  **/
  @Schema(description = "Desc: The Check Bank ID  File: LEDGER (Disburstment)  Attr: 13 Left to '~'")
  public String getBankID() {
    return bankID;
  }

  public void setBankID(String bankID) {
    this.bankID = bankID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayableCheck payableCheck = (PayableCheck) o;
    return Objects.equals(this.id, payableCheck.id) &&
        Objects.equals(this.checkDate, payableCheck.checkDate) &&
        Objects.equals(this.checkAmount, payableCheck.checkAmount) &&
        Objects.equals(this.checkNumber, payableCheck.checkNumber) &&
        Objects.equals(this.bankID, payableCheck.bankID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, checkDate, checkAmount, checkNumber, bankID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayableCheck {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    checkDate: ").append(toIndentedString(checkDate)).append("\n");
    sb.append("    checkAmount: ").append(toIndentedString(checkAmount)).append("\n");
    sb.append("    checkNumber: ").append(toIndentedString(checkNumber)).append("\n");
    sb.append("    bankID: ").append(toIndentedString(bankID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
