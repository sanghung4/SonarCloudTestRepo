/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.dto;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import javax.validation.Valid;
import javax.validation.constraints.*;

/**
 * Object representing an Eclipse WarehouseTask.
 */
@Schema(description = "Object representing an Eclipse WarehouseTask.")
public class WarehouseCloseTask {

    @JsonProperty("invoiceNumber")
    private String invoiceNumber = null;

    @JsonProperty("branchId")
    private String branchId = null;

    @JsonProperty("finalLocation")
    private String finalLocation = null;

    @JsonProperty("totes")
    private List<WarehouseCloseTaskTotes> totes = null;

    @JsonProperty("skipStagedWarningFlag")
    private Boolean skipStagedWarningFlag = null;

    @JsonProperty("skipInvalidLocationWarningFlag")
    private Boolean skipInvalidLocationWarningFlag = null;

    @JsonProperty("updateLocationOnly")
    private Boolean updateLocationOnly = null;

    public WarehouseCloseTask invoiceNumber(String invoiceNumber) {
        this.invoiceNumber = invoiceNumber;
        return this;
    }

    /**
     * Order Id including Invoice Id.
     * @return invoiceNumber
     **/
    @NotNull
    @Schema(required = true, description = "Order Id including Invoice Id.")
    public String getInvoiceNumber() {
        return invoiceNumber;
    }

    public void setInvoiceNumber(String invoiceNumber) {
        this.invoiceNumber = invoiceNumber;
    }

    public WarehouseCloseTask branchId(String branchId) {
        this.branchId = branchId;
        return this;
    }

    /**
     * Branch Id
     * @return branchId
     **/
    @NotNull
    @Schema(required = true, description = "Branch Id")
    public String getBranchId() {
        return branchId;
    }

    public void setBranchId(String branchId) {
        this.branchId = branchId;
    }

    public WarehouseCloseTask finalLocation(String finalLocation) {
        this.finalLocation = finalLocation;
        return this;
    }

    /**
     * Tote Staging Location
     * @return finalLocation
     **/
    @Schema(description = "Tote Staging Location")
    public String getFinalLocation() {
        return finalLocation;
    }

    public void setFinalLocation(String finalLocation) {
        this.finalLocation = finalLocation;
    }

    public WarehouseCloseTask totes(List<WarehouseCloseTaskTotes> totes) {
        this.totes = totes;
        return this;
    }

    public WarehouseCloseTask addTotesItem(WarehouseCloseTaskTotes totesItem) {
        if (this.totes == null) {
            this.totes = new ArrayList<>();
        }
        this.totes.add(totesItem);
        return this;
    }

    /**
     * Picked Product Info
     * @return totes
     **/
    @Valid
    @Schema(description = "Picked Product Info")
    public List<WarehouseCloseTaskTotes> getTotes() {
        return totes;
    }

    public void setTotes(List<WarehouseCloseTaskTotes> totes) {
        this.totes = totes;
    }

    public WarehouseCloseTask skipStagedWarningFlag(Boolean skipStagedWarningFlag) {
        this.skipStagedWarningFlag = skipStagedWarningFlag;
        return this;
    }

    /**
     * Flag to skip &#x27;Not all totes are staged&#x27; warning.
     * @return skipStagedWarningFlag
     **/
    @Schema(description = "Flag to skip 'Not all totes are staged' warning.")
    public Boolean isSkipStagedWarningFlag() {
        return skipStagedWarningFlag;
    }

    public void setSkipStagedWarningFlag(Boolean skipStagedWarningFlag) {
        this.skipStagedWarningFlag = skipStagedWarningFlag;
    }

    public WarehouseCloseTask skipInvalidLocationWarningFlag(Boolean skipInvalidLocationWarningFlag) {
        this.skipInvalidLocationWarningFlag = skipInvalidLocationWarningFlag;
        return this;
    }

    /**
     * Flag to skip any Location Invalid Change warning.
     * @return skipInvalidLocationWarningFlag
     **/
    @Schema(description = "Flag to skip any Location Invalid Change warning.")
    public Boolean isSkipInvalidLocationWarningFlag() {
        return skipInvalidLocationWarningFlag;
    }

    public void setSkipInvalidLocationWarningFlag(Boolean skipInvalidLocationWarningFlag) {
        this.skipInvalidLocationWarningFlag = skipInvalidLocationWarningFlag;
    }

    public WarehouseCloseTask updateLocationOnly(Boolean updateLocationOnly) {
        this.updateLocationOnly = updateLocationOnly;
        return this;
    }

    /**
     * If true, this will just update the Final Location.
     * @return updateLocationOnly
     **/
    @Schema(description = "If true, this will just update the Final Location.")
    public Boolean isUpdateLocationOnly() {
        return updateLocationOnly;
    }

    public void setUpdateLocationOnly(Boolean updateLocationOnly) {
        this.updateLocationOnly = updateLocationOnly;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        WarehouseCloseTask warehouseCloseTask = (WarehouseCloseTask) o;
        return (
            Objects.equals(this.invoiceNumber, warehouseCloseTask.invoiceNumber) &&
            Objects.equals(this.branchId, warehouseCloseTask.branchId) &&
            Objects.equals(this.finalLocation, warehouseCloseTask.finalLocation) &&
            Objects.equals(this.totes, warehouseCloseTask.totes) &&
            Objects.equals(this.skipStagedWarningFlag, warehouseCloseTask.skipStagedWarningFlag) &&
            Objects.equals(this.skipInvalidLocationWarningFlag, warehouseCloseTask.skipInvalidLocationWarningFlag) &&
            Objects.equals(this.updateLocationOnly, warehouseCloseTask.updateLocationOnly)
        );
    }

    @Override
    public int hashCode() {
        return Objects.hash(
            invoiceNumber,
            branchId,
            finalLocation,
            totes,
            skipStagedWarningFlag,
            skipInvalidLocationWarningFlag,
            updateLocationOnly
        );
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class WarehouseCloseTask {\n");

        sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
        sb.append("    branchId: ").append(toIndentedString(branchId)).append("\n");
        sb.append("    finalLocation: ").append(toIndentedString(finalLocation)).append("\n");
        sb.append("    totes: ").append(toIndentedString(totes)).append("\n");
        sb.append("    skipStagedWarningFlag: ").append(toIndentedString(skipStagedWarningFlag)).append("\n");
        sb
            .append("    skipInvalidLocationWarningFlag: ")
            .append(toIndentedString(skipInvalidLocationWarningFlag))
            .append("\n");
        sb.append("    updateLocationOnly: ").append(toIndentedString(updateLocationOnly)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
