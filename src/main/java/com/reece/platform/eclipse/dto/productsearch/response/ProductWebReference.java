/*
 * Eclipse API Developer Documentation
 * This documentation provides a list of API endpoints provided in this release as well as examples for using the various API endpoints
 *
 * OpenAPI spec version: 9.1.1
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.reece.platform.eclipse.dto.productsearch.response;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.Objects;
import lombok.Data;

/**
 * Object representing an Eclipse ProductWebReference.
 */
@Data
@Schema(description = "Object representing an Eclipse ProductWebReference.")
public class ProductWebReference {

    @JsonProperty("webReferenceId")
    private String webReferenceId = null;

    @JsonProperty("webReferenceDescription")
    private String webReferenceDescription = null;

    @JsonProperty("webReferenceParameters")
    private String webReferenceParameters = null;

    public ProductWebReference webReferenceId(String webReferenceId) {
        this.webReferenceId = webReferenceId;
        return this;
    }

    /**
     * Desc: The ProductWebReference WebReferenceId  File: PRODUCT  Attr: 93,1,x
     * @return webReferenceId
     **/
    @Schema(description = "Desc: The ProductWebReference WebReferenceId  File: PRODUCT  Attr: 93,1,x")
    public String getWebReferenceId() {
        return webReferenceId;
    }

    public void setWebReferenceId(String webReferenceId) {
        this.webReferenceId = webReferenceId;
    }

    public ProductWebReference webReferenceDescription(String webReferenceDescription) {
        this.webReferenceDescription = webReferenceDescription;
        return this;
    }

    /**
     * Desc: The ProductWebReference WebReferenceDescription  File: PRODUCT  Attr: 93,2,x
     * @return webReferenceDescription
     **/
    @Schema(description = "Desc: The ProductWebReference WebReferenceDescription  File: PRODUCT  Attr: 93,2,x")
    public String getWebReferenceDescription() {
        return webReferenceDescription;
    }

    public void setWebReferenceDescription(String webReferenceDescription) {
        this.webReferenceDescription = webReferenceDescription;
    }

    public ProductWebReference webReferenceParameters(String webReferenceParameters) {
        this.webReferenceParameters = webReferenceParameters;
        return this;
    }

    /**
     * Desc: The ProductWebReference WebReferenceParameters  File: PRODUCT  Attr: 93,3,x
     * @return webReferenceParameters
     **/
    @Schema(description = "Desc: The ProductWebReference WebReferenceParameters  File: PRODUCT  Attr: 93,3,x")
    public String getWebReferenceParameters() {
        return webReferenceParameters;
    }

    public void setWebReferenceParameters(String webReferenceParameters) {
        this.webReferenceParameters = webReferenceParameters;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ProductWebReference productWebReference = (ProductWebReference) o;
        return (
            Objects.equals(this.webReferenceId, productWebReference.webReferenceId) &&
            Objects.equals(this.webReferenceDescription, productWebReference.webReferenceDescription) &&
            Objects.equals(this.webReferenceParameters, productWebReference.webReferenceParameters)
        );
    }

    @Override
    public int hashCode() {
        return Objects.hash(webReferenceId, webReferenceDescription, webReferenceParameters);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class ProductWebReference {\n");

        sb.append("    webReferenceId: ").append(toIndentedString(webReferenceId)).append("\n");
        sb.append("    webReferenceDescription: ").append(toIndentedString(webReferenceDescription)).append("\n");
        sb.append("    webReferenceParameters: ").append(toIndentedString(webReferenceParameters)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }
}
