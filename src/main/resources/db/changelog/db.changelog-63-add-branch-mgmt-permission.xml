<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<databaseChangeLog
    logicalFilePath="classpath:changelog-63.xml"
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd"
>
    <changeSet id="addBranchManagementPermission" author="erik.gabrielsen@dialexa.com">
        <preConditions onFail="MARK_RAN" onFailMessage="Manage Branches Permission already added">
            <sqlCheck expectedResult="0">select count(*) from permissions where name = 'manage_branches'</sqlCheck>
        </preConditions>
        <insert tableName="permissions">
            <column name="name" value="manage_branches" />
            <column name="id" value="c01f2489-a262-4930-a47b-0d33d3d86ba7" />
        </insert>
        <rollback>
            <delete tableName="permissions">
                <where>name='manage_branches'</where>
            </delete>
        </rollback>
    </changeSet>
    <changeSet id="addBranchManagementToMorscoEmployee" author="erik.gabrielsen@dialexa.com">
        <preConditions onFail="MARK_RAN" onFailMessage="Manage Branches Permission already added to engineer role">
            <sqlCheck
                expectedResult="0"
            >select count(*) from role_permissions rp join permissions p on p.id = rp.permission_id join roles r on r.id = rp.role_id where r."name" = 'Morsco Engineer' and p."name" = 'manage_branches';</sqlCheck>
        </preConditions>
        <sql>
            INSERT INTO role_permissions
            SELECT
                role_id,
                permission_id
            FROM (
                     SELECT
                         id AS role_id,
                         1 AS commonId
                     FROM
                         roles
                     WHERE
                         name = 'Morsco Engineer') AS table1
                     INNER JOIN (
                SELECT
                    id AS permission_id, 1 AS commonId
                FROM
                    permissions
                WHERE
                    name = 'manage_branches') AS table2 ON table1.commonId = table2.commonId;
        </sql>
        <rollback>
            <sql>
                DELETE FROM role_permissions WHERE permission_id = (Select id from permissions where name = 'manage_branches');
            </sql>
        </rollback>
    </changeSet>
    <changeSet author="erik.gabrielsen@dialexa.com" id="v63-add-branch-management-permission">
        <tagDatabase tag="v63" />
    </changeSet>
</databaseChangeLog>
