<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<databaseChangeLog logicalFilePath="classpath:changelog-8.xml" xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.4.xsd">
    <changeSet author="james.feigel@dialexa.com" id="createPaymentType">
        <preConditions onFail="MARK_RAN" onFailMessage="payment_method_type_enum already exists">
            <not>
                <sqlCheck expectedResult="1">
                        SELECT COUNT(1) FROM pg_type WHERE typname = 'payment_method_type_enum'
                </sqlCheck>
            </not>
        </preConditions>
        <sql>
            CREATE TYPE payment_method_type_enum AS ENUM ('BILLTOACCOUNT', 'PAYINSTORE')
        </sql>
        <rollback>
            <sql>DROP TYPE payment_method_type_enum</sql>
        </rollback>
    </changeSet>
    <changeSet author="james.feigel@dialexa.com" id="castPaymentMethodTypeEnumAsString">
        <preConditions onFail="MARK_RAN" onFailMessage="payment_method_type_enum cast to character varying already created">
            <not>
                <sqlCheck expectedResult="1">
                    SELECT COUNT(1) FROM pg_cast AS pc INNER JOIN pg_type AS pt ON pc.casttarget = pt.oid WHERE pt.typname = 'payment_method_type_enum'
                </sqlCheck>
            </not>
        </preConditions>
        <sql>
            CREATE CAST (CHARACTER VARYING as payment_method_type_enum) WITH INOUT AS IMPLICIT
        </sql>
        <rollback>
            <sql>DROP CAST (CHARACTER VARYING as payment_method_type_enum)</sql>
        </rollback>
    </changeSet>
    <changeSet author="james.feigel@dialexa.com" id="dropPaymentMethodTypeIdFromCarts">
        <preConditions onFail="MARK_RAN" onFailMessage="payment_method_type_id on carts does not exist">
            <columnExists tableName="carts" columnName="payment_method_type_id"/>
        </preConditions>
        <dropColumn tableName="carts">
            <column name="payment_method_type_id"/>
        </dropColumn>
        <rollback>
            <addColumn tableName="carts">
                <column name="payment_method_type_id" type="uuid"/>
            </addColumn>
        </rollback>
    </changeSet>
    <changeSet author="james.feigel@dialexa.com" id="addPaymentMethodTypeToCarts">
        <preConditions onFail="MARK_RAN" onFailMessage="payment_method_type on carts already exists">
            <not>
                <columnExists tableName="carts" columnName="payment_method_type"/>
            </not>
        </preConditions>
        <addColumn tableName="carts">
            <column name="payment_method_type" type="payment_method_type_enum" defaultValue="BILLTOACCOUNT"/>
        </addColumn>
        <rollback>
            <dropColumn tableName="carts" columnName="payment_method_type"/>
        </rollback>
    </changeSet>
    <changeSet author="james.feigel@dialexa.com" id="dropNotNullContraintOnAddress">
        <preConditions onFail="MARK_RAN" onFailMessage="NOT NULL constraint for country on address does not exist">
            <sqlCheck expectedResult="YES">
                SELECT is_nullable FROM information_schema.columns WHERE table_name = 'address' AND column_name = 'country'
            </sqlCheck>
        </preConditions>
        <dropNotNullConstraint tableName="address" columnName="country"/>
        <rollback>
            <addNotNullConstraint tableName="address" columnName="country"/>
        </rollback>
    </changeSet>
    <changeSet author="james.feigel@dialexa.com" id="tag-8-products">
        <tagDatabase tag="products-v8"/>
    </changeSet>
</databaseChangeLog>
